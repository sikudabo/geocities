{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\DialogExample.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport CloseIcon from '@material-ui/icons/Close';\nexport default function DialogExample() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n\n  function handleChange() {\n    setOpen(!open);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        onClick: handleChange,\n        children: \"Open Dialog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        fullScreen: true,\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            color: \"primary\",\n            position: \"sticky\",\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleClose,\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Sound\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginLeft: 'auto'\n                },\n                size: \"small\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Phone Rington\",\n                secondary: \"Titania\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Default notification rington\",\n                secondary: \"(Itro) Complete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DialogExample, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = DialogExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogExample\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/DialogExample.js"],"names":["React","useState","Grid","AppBar","Toolbar","Dialog","DialogContent","Button","IconButton","Typography","List","ListItem","ListItemText","Divider","CloseIcon","DialogExample","open","setOpen","handleChange","handleClose","marginLeft"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,KAAD,CAAhC;;AAEA,WAASiB,YAAT,GAAwB;AACpBD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH;;AAED,WAASG,WAAT,GAAuB;AACnBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH;;AAED,sBACI,QAAC,IAAD;AACI,IAAA,SAAS,MADb;AAAA,2BAGI,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAAA,8BAII,QAAC,MAAD;AACI,QAAA,KAAK,EAAC,SADV;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,OAAO,EAAEC,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAWI,QAAC,MAAD;AACI,QAAA,IAAI,EAAEF,IADV;AAEI,QAAA,UAAU,MAFd;AAAA,+BAII,QAAC,aAAD;AAAA,kCACI,QAAC,MAAD;AACI,YAAA,KAAK,EAAC,SADV;AAEI,YAAA,QAAQ,EAAC,QAFb;AAAA,mCAII,QAAC,OAAD;AAAA,sCACI,QAAC,UAAD;AACI,gBAAA,OAAO,EAAEG,WADb;AAAA,uCAGI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eASI,QAAC,MAAD;AACI,gBAAA,KAAK,EAAE;AACHC,kBAAAA,UAAU,EAAE;AADT,iBADX;AAII,gBAAA,IAAI,EAAC,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAwBI,QAAC,IAAD;AAAA,oCACI,QAAC,QAAD;AAAA,qCACI,QAAC,YAAD;AACI,gBAAA,OAAO,EAAC,eADZ;AAEI,gBAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI,QAAC,QAAD;AAAA,qCACI,QAAC,YAAD;AACI,gBAAA,OAAO,EAAC,8BADZ;AAEI,gBAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+DH;;GA1EuBL,a;;KAAAA,a","sourcesContent":["import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar'; \r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default function DialogExample() {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    function handleChange() {\r\n        setOpen(!open);\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Grid \r\n            container\r\n        >\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <Button \r\n                    color='primary' \r\n                    variant='outlined' \r\n                    onClick={handleChange} \r\n                >\r\n                    Open Dialog \r\n                </Button>\r\n                <Dialog \r\n                    open={open} \r\n                    fullScreen\r\n                >\r\n                    <DialogContent>\r\n                        <AppBar\r\n                            color='primary' \r\n                            position='sticky'\r\n                        >\r\n                            <Toolbar>\r\n                                <IconButton\r\n                                    onClick={handleClose} \r\n                                >\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                                <Typography>\r\n                                    Sound \r\n                                </Typography>\r\n                                <Button \r\n                                    style={{\r\n                                        marginLeft: 'auto',\r\n                                    }}\r\n                                    size='small'\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <List>\r\n                            <ListItem>\r\n                                <ListItemText \r\n                                    primary='Phone Rington' \r\n                                    secondary='Titania' \r\n                                />\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem>\r\n                                <ListItemText \r\n                                    primary='Default notification rington' \r\n                                    secondary='(Itro) Complete' \r\n                                />\r\n                            </ListItem>\r\n                        </List>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}