{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\GeoUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport * as _ from 'underscore';\nimport swal from 'sweetalert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport Icon from '@mdi/react';\nimport { mdiCheckBold, mdiPencil, mdiClose, mdiCamera, mdiVideo, mdiTwitter, mdiInstagram, mdiYoutube } from '@mdi/js';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Divider from '@material-ui/core/Divider';\nimport Link from '@material-ui/core/Link';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GeoUserPostsCard from './GeoUserPostsCard';\n\nfunction TabPanel(props) {\n  //This component will serve as the panel for each individual tab.\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: index !== value,\n    id: `tabpanel-${index}`,\n    \"aria-label\": `tab-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    style: {\n      marginTop: 100\n    },\n    children: value === index && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      style: {\n        textAlign: 'center'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.any.isRequired,\n  index: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`\n  };\n}\n\nfunction GeoUser(props) {\n  _s();\n\n  const [geoUser, setGeoUser] = useState(null);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: 100\n    },\n    profileAvatar: {\n      height: 128,\n      width: 128,\n      margin: 'auto'\n    },\n    profileAvatarLg: {\n      height: 168,\n      width: 168,\n      margin: 'auto'\n    },\n    usernameDisplay: {\n      marginTop: 40,\n      margin: 'auto'\n    },\n    statsInfo: {\n      marginTop: 40,\n      textAlign: 'center'\n    },\n    paper: {\n      backgroundColor: geoUser ? geoUser.profileTheme : 'rgb(0, 20, 60)',\n      color: 'rgb(255, 255, 255)',\n      marginTop: 40\n    },\n    input: {\n      display: 'none'\n    }\n  }));\n  const classes = useStyles(); //Custom styling. \n\n  const params = useParams();\n  const history = useHistory();\n  const [isFollowing, setIsFollowing] = useState(false); //This will disable a button if the user is following or unfollowing a user.\n\n  const [curTab, setCurTab] = useState(0); //The tab that should display. \n\n  useEffect(() => {\n    if (props.mainUser === null) {\n      //Call the API to get a public profile view for a user who is not logged in.\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/get/public/geo/user/${params.uniqueUserId}`\n      }).then(response => {\n        if (response.data.geoUser) {\n          //If we were able to get a user, set post and theme globally, and the local geoUser state.\n          props.dispatch({\n            type: 'visitorPosts/updatePosts',\n            payload: response.data.posts\n          });\n          props.dispatch({\n            type: 'ThemeChange',\n            payload: response.data.geoUser.profileTheme\n          });\n          setGeoUser(response.data.geoUser); //Set the local geoUser state variable\n        } else {\n          swal('Uh Oh!', 'We could not find that user! Their profile might not exist.', 'error');\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error finding that user! Please try again.', 'error');\n      });\n    } else if (props.mainUser !== null) {\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/get/geo/user/${params.uniqueUserId}/${props.mainUser.uniqueUserId}`\n      }).then(response => {\n        if (response.data.geoUser && response.data.mainUser) {\n          if (response.data.geoUser.uniqueUserId === props.mainUser.uniqueUserId) {\n            history.push('/profile');\n          } else {\n            if (response.data.geoUser.blockList.includes(response.data.mainUser.uniqueUserId)) {\n              swal('Uh Oh!', 'This user has blocked you!', 'error');\n              history.goBack(1);\n            } else {\n              props.dispatch({\n                type: 'user/updateUser',\n                payload: response.data.mainUser\n              });\n              props.dispatch({\n                type: 'ThemeChange',\n                payload: response.data.geoUser.profileTheme\n              });\n              props.dispatch({\n                type: 'visitorPosts/updatePosts',\n                payload: response.data.posts\n              });\n              setGeoUser(response.data.geoUser);\n            }\n          }\n        } else {\n          swal('Uh Oh!', 'Could not find that GeoCities user!', 'error');\n          history.goBack(1);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error getting that users profile! Please try again.', 'error');\n        history.goBack(1);\n      });\n    }\n  }, []);\n\n  function followUser() {\n    setIsFollowing(true);\n    let data = JSON.stringify({\n      uniqueUserId: geoUser.uniqueUserId,\n      uniqueFollowerId: props.mainUser.uniqueUserId,\n      username: props.mainUser.username\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/follow/user',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      swal('Great!', 'Successfully followed this user!', 'success');\n      setGeoUser(response.data.geoUser);\n      setIsFollowing(false);\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error following that user! Please try again.', 'error');\n      setIsFollowing(false);\n    });\n  }\n\n  function unfollowUser() {\n    setIsFollowing(true);\n    let data = {\n      uniqueUserId: geoUser.uniqueUserId,\n      uniqueUnfollowerId: props.mainUser.uniqueUserId,\n      username: props.mainUser.username\n    };\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/unfollow/user',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      swal('Great!', 'Successfully followed user!', 'success');\n      setGeoUser(response.data.geoUser);\n      setIsFollowing(false);\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error following that user! Please try again.', 'error');\n      setIsFollowing(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [geoUser !== null && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Hidden, {\n            mdUp: true,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: `http://192.168.0.9:3001/api/get-photo/${geoUser.avatar}`,\n              className: classes.profileAvatar,\n              title: `${geoUser.username}`,\n              alt: `${geoUser.username}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n            smDown: true,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: `http://192.168.0.9:3001/api/get-photo/${geoUser.avatar}`,\n              title: `${geoUser.username}`,\n              alt: `${geoUser.username}`,\n              className: classes.profileAvatarLg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h4\",\n          align: \"center\",\n          className: classes.usernameDisplay,\n          children: geoUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this), geoUser.isVerified && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          style: {\n            margin: 'auto',\n            textAlign: 'center',\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            path: mdiCheckBold,\n            size: 1,\n            title: \"Verified\",\n            style: {\n              color: 'rgb(0, 128, 0)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 29\n          }, this), \" Verified\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 1,\n        className: classes.statsInfo,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            children: \"Followers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: geoUser.followers.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            children: \"Following\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: geoUser.following.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            children: \"Karma\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: geoUser.karma\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          style: {\n            fontWeight: 'bold',\n            marginTop: 30\n          },\n          children: [geoUser.firstName, \" \", geoUser.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: 40,\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"small\",\n          justify: \"left\",\n          align: \"left\",\n          children: geoUser.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 21\n      }, this), props.mainUser !== null && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          margin: 'auto',\n          textAlign: 'center',\n          marginTop: 20\n        },\n        children: [!_.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId) && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: followUser,\n          disabled: isFollowing,\n          children: isFollowing ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 52\n          }, this) : 'Follow'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 33\n        }, this), _.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId) && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: unfollowUser,\n          disabled: isFollowing,\n          children: isFollowing ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 52\n          }, this) : 'Unfollow'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 25\n      }, this), props.mainUser !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          padding: 0\n        },\n        children: (geoUser.profilePrivacy === 'public' || _.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId)) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 12,\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                value: curTab,\n                onChange: (e, newValue) => setCurTab(newValue),\n                centered: true,\n                children: [/*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Posts\",\n                  ...a11yProps(0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"About\",\n                  ...a11yProps(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Events\",\n                  ...a11yProps(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              index: 0,\n              value: curTab,\n              children: [props.posts.length < 1 && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"h6\",\n                align: \"center\",\n                children: \"No posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 49\n              }, this), props.posts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: props.posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'left'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(GeoUserPostsCard, {\n                    post: post,\n                    user: geoUser,\n                    id: post.uniquePostId,\n                    setter: setGeoUser\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 61\n                  }, this), index < props.posts.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginBottom: 20\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 65\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              index: 1,\n              value: curTab,\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              index: 2,\n              value: curTab,\n              children: \"Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }, this), geoUser === null && /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: true,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GeoUser, \"OkS8Bt+kug8OZBXJ+Blsw8RMbyo=\", false, function () {\n  return [useStyles, useParams, useHistory];\n});\n\n_c2 = GeoUser;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user,\n    primary: state.userThemeReducer.primary,\n    posts: state.visitorPostsReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(GeoUser);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"GeoUser\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/GeoUser.js"],"names":["React","useState","useEffect","useLayoutEffect","useRef","useHistory","useParams","Grid","Avatar","Typography","Button","Tabs","Tab","Dialog","DialogContent","AppBar","Toolbar","connect","axios","_","swal","makeStyles","Hidden","Icon","mdiCheckBold","mdiPencil","mdiClose","mdiCamera","mdiVideo","mdiTwitter","mdiInstagram","mdiYoutube","Paper","PropTypes","ListItem","ListItemText","ListItemIcon","Divider","Link","Backdrop","CircularProgress","GeoUserPostsCard","TabPanel","props","children","value","index","other","marginTop","textAlign","propTypes","node","any","isRequired","a11yProps","id","GeoUser","geoUser","setGeoUser","useStyles","theme","root","profileAvatar","height","width","margin","profileAvatarLg","usernameDisplay","statsInfo","paper","backgroundColor","profileTheme","color","input","display","classes","params","history","isFollowing","setIsFollowing","curTab","setCurTab","mainUser","method","url","uniqueUserId","then","response","data","dispatch","type","payload","posts","catch","err","console","log","message","push","blockList","includes","goBack","followUser","JSON","stringify","uniqueFollowerId","username","headers","unfollowUser","uniqueUnfollowerId","avatar","isVerified","followers","length","following","karma","fontWeight","firstName","lastName","bio","find","follower","padding","profilePrivacy","e","newValue","map","post","uniquePostId","marginBottom","mapStateToProps","state","userReducer","user","primary","userThemeReducer","visitorPostsReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef}  from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport * as _ from 'underscore';\r\nimport swal from 'sweetalert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Icon from '@mdi/react';\r\nimport { mdiCheckBold, mdiPencil, mdiClose, mdiCamera, mdiVideo, mdiTwitter, mdiInstagram, mdiYoutube } from '@mdi/js';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Link from '@material-ui/core/Link';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GeoUserPostsCard from './GeoUserPostsCard';\r\n\r\nfunction TabPanel(props) {\r\n    //This component will serve as the panel for each individual tab.\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div \r\n            role='tabpanel'\r\n            hidden={index !== value} \r\n            id={`tabpanel-${index}`}\r\n            aria-label={`tab-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n            style={{\r\n                marginTop: 100,\r\n            }}\r\n        >\r\n            {value === index &&\r\n                <Grid \r\n                    item \r\n                    xs\r\n                    style={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    {children}\r\n                </Grid>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    value: PropTypes.any.isRequired,\r\n    index: PropTypes.any.isRequired,\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `tab-${index}`,\r\n        'aria-controls': `tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction GeoUser(props) {\r\n    const [geoUser, setGeoUser] = useState(null);\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            marginTop: 100,\r\n        },\r\n        profileAvatar: {\r\n            height: 128,\r\n            width: 128,\r\n            margin: 'auto',\r\n        },\r\n        profileAvatarLg: {\r\n            height: 168,\r\n            width: 168,\r\n            margin: 'auto',\r\n        },\r\n        usernameDisplay: {\r\n            marginTop: 40,\r\n            margin: 'auto',\r\n        },\r\n        statsInfo: {\r\n            marginTop: 40,\r\n            textAlign: 'center',\r\n        },\r\n        paper: {\r\n            backgroundColor: geoUser ? geoUser.profileTheme : 'rgb(0, 20, 60)',\r\n            color: 'rgb(255, 255, 255)',\r\n            marginTop: 40,\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n    }));\r\n    const classes = useStyles(); //Custom styling. \r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const [isFollowing, setIsFollowing] = useState(false); //This will disable a button if the user is following or unfollowing a user.\r\n    const [curTab, setCurTab] = useState(0); //The tab that should display. \r\n    useEffect(() => {\r\n        if(props.mainUser === null) {\r\n            //Call the API to get a public profile view for a user who is not logged in.\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/get/public/geo/user/${params.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.geoUser) {\r\n                    //If we were able to get a user, set post and theme globally, and the local geoUser state.\r\n                    props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.geoUser.profileTheme});\r\n                    setGeoUser(response.data.geoUser); //Set the local geoUser state variable\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find that user! Their profile might not exist.',\r\n                        'error',\r\n                    );\r\n\r\n                    \r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error finding that user! Please try again.',\r\n                    'error',\r\n                );\r\n            });\r\n        }\r\n        else if(props.mainUser !== null) {\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/get/geo/user/${params.uniqueUserId}/${props.mainUser.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.geoUser && response.data.mainUser) {\r\n                    if(response.data.geoUser.uniqueUserId === props.mainUser.uniqueUserId) {\r\n                        history.push('/profile');\r\n                    }\r\n                    else {\r\n                        if(response.data.geoUser.blockList.includes(response.data.mainUser.uniqueUserId)) {\r\n                            swal(\r\n                                'Uh Oh!',\r\n                                'This user has blocked you!',\r\n                                'error',\r\n                            );\r\n                            history.goBack(1);\r\n                        }\r\n                        else {\r\n                            props.dispatch({type: 'user/updateUser', payload: response.data.mainUser});\r\n                            props.dispatch({type: 'ThemeChange', payload: response.data.geoUser.profileTheme});\r\n                            props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\r\n                            setGeoUser(response.data.geoUser);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'Could not find that GeoCities user!',\r\n                        'error',\r\n                    );\r\n                    history.goBack(1);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error getting that users profile! Please try again.',\r\n                    'error',\r\n                );\r\n                history.goBack(1);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function followUser() {\r\n        setIsFollowing(true);\r\n        let data = JSON.stringify({\r\n            uniqueUserId: geoUser.uniqueUserId,\r\n            uniqueFollowerId: props.mainUser.uniqueUserId,\r\n            username: props.mainUser.username,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/follow/user',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            swal(\r\n                'Great!',\r\n                'Successfully followed this user!',\r\n                'success',\r\n            );\r\n            setGeoUser(response.data.geoUser);\r\n            setIsFollowing(false);\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error following that user! Please try again.',\r\n                'error',\r\n            );\r\n            setIsFollowing(false);\r\n        });\r\n    }\r\n\r\n    function unfollowUser() {\r\n        setIsFollowing(true);\r\n        let data = {\r\n            uniqueUserId: geoUser.uniqueUserId,\r\n            uniqueUnfollowerId: props.mainUser.uniqueUserId,\r\n            username: props.mainUser.username,\r\n        };\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/unfollow/user',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            swal(\r\n                'Great!',\r\n                'Successfully followed user!',\r\n                'success',\r\n            );\r\n            setGeoUser(response.data.geoUser);\r\n            setIsFollowing(false);\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error following that user! Please try again.',\r\n                'error',\r\n            );\r\n            setIsFollowing(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Below is the conditional rendering if the geoUser object is not null */}\r\n            {geoUser !== null &&\r\n                <Grid \r\n                    container \r\n                    className={classes.root} \r\n                >\r\n                    <Grid \r\n                        item \r\n                        container \r\n                        xs={12} \r\n                    >\r\n                        <Grid \r\n                            item \r\n                            xs={12} \r\n                        >\r\n                            {/* Below is the avatar that will display 128x128 pixels on small screen devices */}\r\n                            <Hidden \r\n                                mdUp  \r\n                            >\r\n                                <Avatar \r\n                                    src={`http://192.168.0.9:3001/api/get-photo/${geoUser.avatar}`} \r\n                                    className={classes.profileAvatar} \r\n                                    title={`${geoUser.username}`} \r\n                                    alt={`${geoUser.username}`} \r\n                                />\r\n                            </Hidden>\r\n                            {/* Below is the avatar that will display on medium and large screen devices at 168x168 pixels*/}\r\n                            <Hidden \r\n                                smDown \r\n                            >\r\n                                <Avatar \r\n                                    src={`http://192.168.0.9:3001/api/get-photo/${geoUser.avatar}`}\r\n                                    title={`${geoUser.username}`}\r\n                                    alt={`${geoUser.username}`}\r\n                                    className={classes.profileAvatarLg} \r\n                                />\r\n                            </Hidden>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* End of the top Grid that displays the avatar. Below is the Grid to display the username in a Typography component */}\r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                    >\r\n                        <Typography \r\n                            variant='h4' \r\n                            component='h4' \r\n                            align='center' \r\n                            className={classes.usernameDisplay}\r\n                        >\r\n                            {geoUser.username}\r\n                        </Typography>\r\n                        {geoUser.isVerified &&\r\n                        <Typography \r\n                            variant='body1'\r\n                            component='p' \r\n                            style={{\r\n                                margin: 'auto',\r\n                                textAlign: 'center',\r\n                                marginTop: 10,\r\n                            }}\r\n                        >\r\n                            <Icon \r\n                                path={mdiCheckBold} \r\n                                size={1} \r\n                                title='Verified' \r\n                                style={{\r\n                                    color: 'rgb(0, 128, 0)'\r\n                                }}\r\n                            /> Verified \r\n                        </Typography>\r\n                    }\r\n                    </Grid>\r\n                    {/* End of the username and verified check display. Below is the Grid to display following followers and Karma.*/}\r\n                    <Grid \r\n                        container \r\n                        item \r\n                        xs={12}\r\n                        spacing={1}\r\n                        className={classes.statsInfo} \r\n                    >\r\n                        <Grid \r\n                        item \r\n                        xs={4} \r\n                        >\r\n                            <Typography \r\n                                variant='h6' \r\n                                component='h6' \r\n                            >\r\n                                Followers \r\n                            </Typography>\r\n                            <Typography \r\n                                variant='body1' \r\n                                component='p' \r\n                            >\r\n                                {geoUser.followers.length}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid \r\n                        item \r\n                        xs={4} \r\n                        >\r\n                            <Typography \r\n                                variant='h6' \r\n                                component='h6' \r\n                            >\r\n                                Following \r\n                            </Typography>\r\n                            <Typography \r\n                                variant='body1' \r\n                                component='p' \r\n                            >\r\n                                {geoUser.following.length}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid \r\n                        item \r\n                        xs={4} \r\n                        >\r\n                            <Typography \r\n                                variant='h6' \r\n                                component='h6' \r\n                            >\r\n                                Karma\r\n                            </Typography>\r\n                            <Typography \r\n                                variant='body1' \r\n                                component='p' \r\n                            >\r\n                                {geoUser.karma}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* End of the statsInfo Grid */}\r\n                    {/* Below is the Grid to display the geoUsers' first and last name */}\r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                        style={{\r\n                            textAlign: 'center',\r\n                        }}\r\n                    >\r\n                        <Typography \r\n                            variant='body1' \r\n                            component='p' \r\n                            style={{\r\n                                fontWeight: 'bold',\r\n                                marginTop: 30,\r\n                            }}\r\n                        >\r\n                            {geoUser.firstName} {geoUser.lastName}\r\n                        </Typography>\r\n                    </Grid>\r\n                    {/* End of the Grid to display the first and last name */}\r\n                    {/* Begin the Grid to display the GeoUsers bio */}\r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                        style={{\r\n                            marginTop: 40,\r\n                            textAlign: 'center',\r\n                        }}\r\n                    >\r\n                        <Typography \r\n                            variant='body2' \r\n                            component='small' \r\n                            justify='left'\r\n                            align='left'\r\n                        >\r\n                            {geoUser.bio}\r\n                        </Typography>\r\n                    </Grid>\r\n                    {/* End of the Grid that displays the geoUsers' bio*/}\r\n                    {/* Below we will add a follow or unfollow button if the main user is active. This button \r\n                        will not exist if the main user is not active. Instead, we should add a button that \r\n                        takes someone visiting this page to the sign up page. If the mainUser is not null, \r\n                        they will get the follow Button if they don't follow the user and an unfollow button \r\n                        if they do follow the user. This button will only conditionally render if the mainUser \r\n                        object is not null.*/\r\n                    }\r\n                    {props.mainUser !== null &&\r\n                        <Grid \r\n                            item \r\n                            xs={12}\r\n                            style={{\r\n                                margin: 'auto',\r\n                                textAlign: 'center',\r\n                                marginTop: 20,\r\n                            }}\r\n                        >\r\n                            {/* Below create a condition if we have a user that is not following a user already */}\r\n                            {!_.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId) &&\r\n                                <Button \r\n                                    color='primary'   \r\n                                    variant='contained' \r\n                                    onClick={followUser}\r\n                                    disabled={isFollowing} \r\n                                >\r\n                                    {isFollowing ? <CircularProgress /> : 'Follow'}\r\n                                </Button>\r\n                            }\r\n                            {/* Below is the condition to add the unfollow button if a mainUser is in the list of a geoUsers' followers */}\r\n                            {_.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId) &&\r\n                                <Button \r\n                                    color='primary' \r\n                                    variant='contained' \r\n                                    onClick={unfollowUser}\r\n                                    disabled={isFollowing} \r\n                                >\r\n                                    {isFollowing ? <CircularProgress /> : 'Unfollow'}\r\n                                </Button>\r\n                            }\r\n                            {/* End of condition to add the unfollow button */}\r\n                        </Grid>\r\n                    }\r\n                    {/* End of the Button to handle following or unfollowing a user */}\r\n                    {/* Below I need to handle conditions in which the rest of the page will either \r\n                        display or not display depending on if the mainUser is following or not following the \r\n                        user. I also need to consider if the geoUser has a public or private account. I must \r\n                        also handle cases in which someone who is not logged in can either visit an account \r\n                        or not visit an account. *\r\n                    */}\r\n                    {props.mainUser !== null &&\r\n                        <div \r\n                            style={{\r\n                                width: '100%',\r\n                                padding: 0,\r\n                            }}\r\n                        >\r\n                            {/* If the geoUser either has a public profile, or the mainUser follows the Geo User, add the tabs and posts section */}\r\n                            {/* Below is the section for tabs within a Grid */}\r\n                            {(geoUser.profilePrivacy === 'public' || _.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId)) &&\r\n                                <div>\r\n                                    <Grid \r\n                                        xs={12}\r\n                                        item \r\n                                    >\r\n                                        <Paper \r\n                                            className={classes.paper} \r\n                                        >\r\n                                            <Tabs \r\n                                                value={curTab} \r\n                                                onChange={(e, newValue) => setCurTab(newValue)} \r\n                                                centered\r\n                                            >\r\n                                                <Tab \r\n                                                    label='Posts'\r\n                                                    {...a11yProps(0)}\r\n                                                />\r\n                                                <Tab \r\n                                                    label='About' \r\n                                                    {...a11yProps(1)}\r\n                                                />\r\n                                                <Tab \r\n                                                    label='Events' \r\n                                                    {...a11yProps(2)} \r\n                                                />\r\n                                            </Tabs>\r\n                                        </Paper>\r\n                                        <Grid \r\n                                            item \r\n                                            xs={12} \r\n                                        />\r\n                                        <TabPanel \r\n                                            index={0}\r\n                                            value={curTab} \r\n                                        >\r\n                                            {/* If condition for if the user has no posts. */}\r\n                                            {props.posts.length < 1 &&\r\n                                                <Typography \r\n                                                    variant='h6' \r\n                                                    component='h6' \r\n                                                    align='center' \r\n                                                >\r\n                                                    No posts \r\n                                                </Typography>\r\n                                            }\r\n                                            {/*End of if condition if user has no posts. Now, put the posts content below if the user has posts */}\r\n                                            {props.posts.length > 0 &&\r\n                                                <div>\r\n                                                    {props.posts.map((post, index) => (\r\n                                                        <div \r\n                                                            style={{\r\n                                                                textAlign: 'left',\r\n                                                            }}\r\n                                                            key={index} \r\n                                                        >\r\n                                                            <GeoUserPostsCard \r\n                                                                post={post}\r\n                                                                user={geoUser}\r\n                                                                id={post.uniquePostId} \r\n                                                                setter={setGeoUser}\r\n                                                            />\r\n                                                            {index < props.posts.length - 1 &&\r\n                                                                <div \r\n                                                                    style={{\r\n                                                                        marginBottom: 20,\r\n                                                                    }}\r\n                                                                />\r\n                                                            }\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            }\r\n                                        </TabPanel>\r\n                                        <TabPanel \r\n                                            index={1}\r\n                                            value={curTab} \r\n                                        >\r\n                                            About \r\n                                        </TabPanel>\r\n                                        <TabPanel \r\n                                            index={2} \r\n                                            value={curTab} \r\n                                        >\r\n                                            Events \r\n                                        </TabPanel>\r\n                                    </Grid>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </Grid>\r\n            }\r\n            {/* End of conditional rendering if the geoUser object is not null */}\r\n            {geoUser === null &&\r\n                <Backdrop \r\n                    open={true} \r\n                >\r\n                    <CircularProgress \r\n                        color='primary' \r\n                    />\r\n                </Backdrop>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n        posts: state.visitorPostsReducer.posts,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GeoUser);"]},"metadata":{},"sourceType":"module"}