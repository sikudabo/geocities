{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Icon from '@mdi/react';\nimport { mdiCheckBold, mdiPencil, mdiClose } from '@mdi/js';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport PropTypes from 'prop-types';\n\nfunction TabPanel(props) {\n  //This component will serve as the panel for each individual tab\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    hidden: value !== index,\n    role: \"tabpanel\",\n    id: `tabpanel-${index}`,\n    \"aria-label\": `tab-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    children: value === index && {\n      children\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.any.isRequired,\n  index: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 20\n  },\n  profileAvatar: {\n    height: 128,\n    width: 128,\n    margin: 'auto'\n  },\n  profileAvatarLg: {\n    height: 168,\n    width: 168,\n    margin: 'auto'\n  },\n  usernameDisplay: {\n    marginTop: 40,\n    margin: 'auto'\n  },\n  statsInfo: {\n    marginTop: 40,\n    textAlign: 'center'\n  }\n}));\n\nfunction ProfilePage(props) {\n  _s();\n\n  const history = useHistory(); //The history API to access the brower history. \n\n  const classes = useStyles(); //Custom styling.\n\n  const [openDialog, setOpenDialog] = useState(false); //Variable and setter to open and close dialog.\n\n  const [curTab, setTab] = useState(0); //Variable and setter to control proper tab.\n\n  useEffect(() => {\n    //First, if the user doesn't exist in state, re-route to the login page.\n    if (!props.user) {\n      history.push('/');\n    } else if (props.user) {\n      //Else, we make an axios call to request the user (an updated version of the user)\n      //props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/grab/user/${props.user.uniqueUserId}`\n      }).then(response => {\n        if (response.data.user) {\n          props.dispatch({\n            type: 'user/updateUser',\n            payload: response.data.user\n          });\n          props.dispatch({\n            type: 'ThemeChange',\n            payload: response.data.user.profileTheme\n          });\n        } else if (response.data === 'user not found') {\n          swal('Uh Oh!', 'We could not find your profile!', 'error');\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error retreiving your profile. Please try again!', 'error');\n        history.push('/');\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.root,\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          mdUp: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.profileAvatar,\n            src: `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`,\n            title: `${props.user.username}`,\n            alt: `${props.user.username}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.profileAvatarLg,\n            src: `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`,\n            title: `${props.user.username}`,\n            alt: `${props.user.username}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h4\",\n        align: \"center\",\n        className: classes.usernameDisplay,\n        children: props.user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), props.user.isVerified && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiCheckBold,\n          size: 1,\n          title: \"Verified\",\n          style: {\n            color: 'rgb(0, 128, 0)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), \" Verified\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      spacing: 1,\n      className: classes.statsInfo,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          children: \"Followers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: props.user.followers.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          children: \"Following\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: props.user.following.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          children: \"Karma\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: props.user.karma\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        style: {\n          fontWeight: 'bold',\n          marginTop: 30\n        },\n        children: [props.user.firstName, \" \", props.user.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: 40,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        component: \"small\",\n        justify: \"start\",\n        align: \"start\",\n        children: props.user.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center',\n        marginTop: 40\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        size: \"large\",\n        onClick: () => setOpenDialog(true),\n        startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiPencil,\n          size: 1,\n          title: \"Post Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDialog,\n        fullScreen: true,\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                style: {\n                  cursor: 'pointer'\n                },\n                path: mdiClose,\n                size: 1,\n                title: \"Close icon\",\n                \"aria-label\": \"Close Dialog\",\n                onClick: () => setOpenDialog(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                component: \"p\",\n                style: {\n                  margin: 'auto'\n                },\n                children: \"Create Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(Tabs, {\n              value: curTab,\n              onChange: (e, newVal) => setTab(newVal),\n              children: [/*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(0),\n                label: \"Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(1),\n                label: \"Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(2),\n                label: \"Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfilePage, \"mZvC9xALdt2vilcNiBGRRI7478o=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c2 = ProfilePage;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    primary: state.userThemeReducer.primary\n  };\n}\n\nexport default connect(mapStateToProps)(ProfilePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ProfilePage\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/ProfilePage.js"],"names":["React","useState","useEffect","Grid","Avatar","Typography","connect","axios","useHistory","swal","makeStyles","Hidden","Box","Container","Icon","mdiCheckBold","mdiPencil","mdiClose","Button","Dialog","DialogContent","AppBar","Toolbar","Tab","Tabs","PropTypes","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","marginTop","profileAvatar","height","width","margin","profileAvatarLg","usernameDisplay","statsInfo","textAlign","ProfilePage","history","classes","openDialog","setOpenDialog","curTab","setTab","user","push","method","url","uniqueUserId","then","response","data","dispatch","type","payload","profileTheme","catch","err","console","log","message","avatar","username","isVerified","color","followers","length","following","karma","fontWeight","firstName","lastName","bio","cursor","e","newVal","mapStateToProps","state","userReducer","primary","userThemeReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Icon from '@mdi/react';\r\nimport { mdiCheckBold, mdiPencil, mdiClose } from '@mdi/js';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    //This component will serve as the panel for each individual tab\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div \r\n            hidden={value !== index}\r\n            role='tabpanel' \r\n            id={`tabpanel-${index}`}\r\n            aria-label={`tab-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index &&\r\n                {children}\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    value: PropTypes.any.isRequired,\r\n    index: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `tab-${index}`,\r\n        'aria-controls': `tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 20,\r\n    },\r\n    profileAvatar: {\r\n        height: 128,\r\n        width: 128,\r\n        margin: 'auto',\r\n    },\r\n    profileAvatarLg: {\r\n        height: 168,\r\n        width: 168,\r\n        margin: 'auto',\r\n    },\r\n    usernameDisplay: {\r\n        marginTop: 40,\r\n        margin: 'auto',\r\n    },\r\n    statsInfo: {\r\n        marginTop: 40,\r\n        textAlign: 'center',\r\n    }\r\n}));\r\n\r\nfunction ProfilePage(props) {\r\n    const history = useHistory(); //The history API to access the brower history. \r\n    const classes = useStyles(); //Custom styling.\r\n    const [openDialog, setOpenDialog] = useState(false); //Variable and setter to open and close dialog.\r\n    const [curTab, setTab] = useState(0); //Variable and setter to control proper tab.\r\n    \r\n    useEffect(() => {\r\n        //First, if the user doesn't exist in state, re-route to the login page.\r\n        if(!props.user) {\r\n            history.push('/');\r\n        }\r\n        else if(props.user) {\r\n            //Else, we make an axios call to request the user (an updated version of the user)\r\n            //props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/grab/user/${props.user.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.user) {\r\n                    props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\r\n                }\r\n                else if(response.data === 'user not found') {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find your profile!',\r\n                        'error',\r\n                    );\r\n                    history.push('/');\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error retreiving your profile. Please try again!',\r\n                    'error',\r\n                );\r\n                history.push('/');\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Grid \r\n            className={classes.root}\r\n            container \r\n        >\r\n            <Grid \r\n                item \r\n                container \r\n                xs={12}\r\n            >\r\n                <Grid \r\n                    item \r\n                    xs={12}\r\n                >\r\n                    {/* Below is the avatar for xs and sm screens at 128x128 pixels */}\r\n                    <Hidden \r\n                        mdUp \r\n                    >\r\n                        <Avatar \r\n                            className={classes.profileAvatar} \r\n                            src={`http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`} \r\n                            title={`${props.user.username}`} \r\n                            alt={`${props.user.username}`} \r\n                        />\r\n                    </Hidden>\r\n                    {/* Below will be the avatar for medium screen and up devices */ }\r\n                    <Hidden \r\n                        smDown \r\n                    >\r\n                        <Avatar \r\n                            className={classes.profileAvatarLg}\r\n                            src={`http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`} \r\n                            title={`${props.user.username}`} \r\n                            alt={`${props.user.username}`} \r\n                        />\r\n                    </Hidden>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <Typography \r\n                    variant='h4' \r\n                    component='h4' \r\n                    align='center'\r\n                    className={classes.usernameDisplay} \r\n                >\r\n                    {props.user.username}\r\n                </Typography>\r\n                {props.user.isVerified &&\r\n                    <Typography \r\n                        variant='body1'\r\n                        component='p' \r\n                    >\r\n                        <Icon \r\n                            path={mdiCheckBold} \r\n                            size={1} \r\n                            title='Verified' \r\n                            style={{\r\n                                color: 'rgb(0, 128, 0)'\r\n                            }}\r\n                        /> Verified \r\n                    </Typography>\r\n                }\r\n            </Grid>\r\n            {/* Below will be the Grid to display Followers, Following, and Karma */}\r\n            <Grid \r\n                item \r\n                container \r\n                xs={12} \r\n                spacing={1}\r\n                className={classes.statsInfo}\r\n            >\r\n                <Grid \r\n                    item \r\n                    xs={4} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        Followers \r\n                    </Typography>\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                    >\r\n                        {props.user.followers.length}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={4} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        Following \r\n                    </Typography>\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                    >\r\n                        {props.user.following.length}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={4} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        Karma \r\n                    </Typography>\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                    >\r\n                        {props.user.karma}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            {/* End of the Grid for Followers, Following, and Karma */}\r\n            {/* Below is the Grid to display the users' first and last name */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n                style={{\r\n                    textAlign: 'center',\r\n                }}\r\n            >\r\n                <Typography \r\n                    variant='body1' \r\n                    component='p' \r\n                    style={{\r\n                        fontWeight: 'bold',\r\n                        marginTop: 30,\r\n                    }}\r\n                >\r\n                    {props.user.firstName} {props.user.lastName}\r\n                </Typography>\r\n            </Grid>\r\n            {/* End of the Grid to display the users first and last name */}\r\n            {/* Below is the Grid that stores the users BIO */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n                style={{\r\n                    marginTop: 40,\r\n                    textAlign: 'center',\r\n                }}\r\n            >\r\n                <Typography \r\n                    variant='body2' \r\n                    component='small' \r\n                    justify='start'\r\n                    align='start'\r\n                >\r\n                    {props.user.bio}\r\n                </Typography>\r\n            </Grid>\r\n            {/* This is the end of the Grid for the bio.*/ }\r\n            {/* Below is the grid to display the Button that opens the Dialog for the form for posts */}\r\n            <Grid \r\n                item \r\n                xs={12}\r\n                style={{\r\n                    textAlign: 'center',\r\n                    marginTop: 40,\r\n                }}\r\n            >\r\n                <Button \r\n                    color='primary' \r\n                    variant='outlined'  \r\n                    size='large'\r\n                    onClick={() => setOpenDialog(true)}\r\n                    startIcon={\r\n                        <Icon \r\n                            path={mdiPencil} \r\n                            size={1} \r\n                            title='Post Icon' \r\n                        />\r\n                    }\r\n                >\r\n                    Post \r\n                </Button>\r\n            </Grid>\r\n            {/* The Grid below will store the Dialog and its' content */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <Dialog \r\n                    open={openDialog} \r\n                    fullScreen\r\n                >\r\n                    <DialogContent>\r\n                        <AppBar \r\n                            color='primary' \r\n                        >\r\n                            <Toolbar>\r\n                               <Icon \r\n                                    style={{\r\n                                        cursor: 'pointer'\r\n                                    }}\r\n                                    path={mdiClose} \r\n                                    size={1} \r\n                                    title='Close icon' \r\n                                    aria-label='Close Dialog' \r\n                                    onClick={() => setOpenDialog(false)}\r\n                                />\r\n                                <Typography \r\n                                    variant='body1' \r\n                                    component='p' \r\n                                    style={{\r\n                                        margin: 'auto'\r\n                                    }}\r\n                                >\r\n                                    Create Post\r\n                                </Typography>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <AppBar \r\n                            color='primary' \r\n                        >\r\n                            <Tabs \r\n                                value={curTab}\r\n                                onChange={(e, newVal) => setTab(newVal)} \r\n                            >\r\n                                <Tab \r\n                                    {...a11yProps(0)} \r\n                                    label='Text' \r\n                                />\r\n                                <Tab \r\n                                    {...a11yProps(1)} \r\n                                    label='Photo' \r\n                                />\r\n                                <Tab \r\n                                    {...a11yProps(2)}\r\n                                    label='Video' \r\n                                />\r\n                            </Tabs>\r\n                        </AppBar>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfilePage);\r\n\r\n"]},"metadata":{},"sourceType":"module"}