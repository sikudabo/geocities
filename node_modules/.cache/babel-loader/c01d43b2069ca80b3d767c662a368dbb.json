{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport FnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtils, KeyboardDatePicker } from '@material-ui/pickers';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nexport default function Signup() {\n  _s();\n\n  const [username, setUsername] = useState(null); //Username for the user.\n\n  const [password, setPasssword] = useState(null); //Password for the user.\n\n  const [firstName, setFirstname] = useState(null); //First name of the user.\n\n  const [lastName, setLastname] = useState(null); //Last name of the user.\n\n  const [email, setEmail] = useState(null); //Email of the user. Will need some regex rules.\n\n  const [town, setTown] = useState(null); //The users hometown will come from a list of towns.\n\n  const [userState, setUserState] = useState(null); //This will be the home state that the user is from.\n\n  const [college, setCollege] = useState(null); //This will be the college the user attended. \"None\" if they didn't attend one. \n\n  const [birthdate, setBirthDate] = useState(null); //The user must select a birthdate. \n\n  const [interests, setInterests] = useState([]); //This array will store the interests the user has. \n\n  const [twitterHandle, setTwitterHandle] = useState(null); //The twitter handle for the user. \n\n  const [instaHandle, setInstaHandle] = useState(null); //Sets the Instagram handle for the user. \n\n  const [youtubeChannel, setYoutubeChannel] = useState(null); //Sets the Youtube channel for the user. \n\n  const [avatar, setAvatar] = useState(null); //This will store the Avatar for the user. \n\n  const [profileTheme, setProfileTheme] = useState(null); //This will set the profile theme color for the user. \n\n  const [agreeToTerms, setAgreeToTerms] = useState(false); //This will check to see if the user agrees to the terms of service. \n\n  const [bio, setBio] = useState(null); //This will store the mini bio the user creates for their profile.\n\n  const [currentLocation, setCurrentLocation] = useState({}); //Object that will store keys for the users current latitude and longitude. \n\n  useEffect(() => {\n    //First we will get the current Geolocation of the user if they've enabled location tracking. \n    if (\"geolocation\" in navigator) {\n      //If the user has enabled geolocation, get the current position and save latitude and longitude for currentLocation.\n      navigator.geolocation.getCurrentPosition(function (position) {\n        console.log(\"Latitude is :\", position.coords.latitude);\n        console.log(\"Longitude is :\", position.coords.longitude);\n        setCurrentLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, function (err) {\n        //Error callback for location tracking. Set currentPosition to null.\n        console.log(err.message);\n        setCurrentLocation(null);\n      });\n    } else {\n      //Else, if the user has not enabled Geolocation, set the currentLocation to null. \n      console.log('User has not given Geolocation permissions');\n      setCurrentLocation(null);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        align: \"center\",\n        children: \"Sign up today!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Signup, \"MSOjtYBS0epKXLmwOScSgAoNhtA=\");\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/Signup.js"],"names":["React","useState","useEffect","Grid","Typography","ValidatorForm","TextValidator","Select","Checkbox","TextField","FnsUtils","MuiPickersUtils","KeyboardDatePicker","Autocomplete","Signup","username","setUsername","password","setPasssword","firstName","setFirstname","lastName","setLastname","email","setEmail","town","setTown","userState","setUserState","college","setCollege","birthdate","setBirthDate","interests","setInterests","twitterHandle","setTwitterHandle","instaHandle","setInstaHandle","youtubeChannel","setYoutubeChannel","avatar","setAvatar","profileTheme","setProfileTheme","agreeToTerms","setAgreeToTerms","bio","setBio","currentLocation","setCurrentLocation","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","err","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtils,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function Signup() {\r\n    const [username, setUsername] = useState(null); //Username for the user.\r\n    const [password, setPasssword] = useState(null); //Password for the user.\r\n    const [firstName, setFirstname] = useState(null); //First name of the user.\r\n    const [lastName, setLastname] = useState(null); //Last name of the user.\r\n    const [email, setEmail] = useState(null); //Email of the user. Will need some regex rules.\r\n    const [town, setTown] = useState(null); //The users hometown will come from a list of towns.\r\n    const [userState, setUserState] = useState(null); //This will be the home state that the user is from.\r\n    const [college, setCollege] = useState(null); //This will be the college the user attended. \"None\" if they didn't attend one. \r\n    const [birthdate, setBirthDate] = useState(null); //The user must select a birthdate. \r\n    const [interests, setInterests] = useState([]); //This array will store the interests the user has. \r\n    const [twitterHandle, setTwitterHandle] = useState(null); //The twitter handle for the user. \r\n    const [instaHandle, setInstaHandle] = useState(null); //Sets the Instagram handle for the user. \r\n    const [youtubeChannel, setYoutubeChannel] = useState(null); //Sets the Youtube channel for the user. \r\n    const [avatar, setAvatar] = useState(null); //This will store the Avatar for the user. \r\n    const [profileTheme, setProfileTheme] = useState(null); //This will set the profile theme color for the user. \r\n    const [agreeToTerms, setAgreeToTerms] = useState(false); //This will check to see if the user agrees to the terms of service. \r\n    const [bio, setBio] = useState(null); //This will store the mini bio the user creates for their profile.\r\n    const [currentLocation, setCurrentLocation] = useState({}); //Object that will store keys for the users current latitude and longitude. \r\n\r\n    useEffect(() => {\r\n        //First we will get the current Geolocation of the user if they've enabled location tracking. \r\n        if(\"geolocation\" in navigator) {\r\n            //If the user has enabled geolocation, get the current position and save latitude and longitude for currentLocation.\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n                console.log(\"Latitude is :\", position.coords.latitude);\r\n                console.log(\"Longitude is :\", position.coords.longitude);\r\n                setCurrentLocation({\r\n                    latitude: position.coords.latitude,\r\n                    longitude: position.coords.longitude,\r\n                });\r\n              }, function(err) {\r\n                  //Error callback for location tracking. Set currentPosition to null.\r\n                  console.log(err.message);\r\n                  setCurrentLocation(null);\r\n              });\r\n        }\r\n        else {\r\n            //Else, if the user has not enabled Geolocation, set the currentLocation to null. \r\n            console.log('User has not given Geolocation permissions');\r\n            setCurrentLocation(null);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Grid \r\n            container \r\n        >\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <Typography \r\n                    variant='h6' \r\n                    component='h6' \r\n                    align='center'\r\n                >\r\n                    Sign up today!\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}