{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simeonikudabo/Downloads/geocities/src/components/CommunityPostsCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Icon from '@mdi/react';\nimport { mdiThumbUp, mdiThumbUpOutline, mdiComment, mdiCommentOutline, mdiChevronDown, mdiChevronUp, mdiDelete, mdiSend, mdiDotsVertical } from '@mdi/js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport * as _ from 'underscore';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Plyr from 'react-plyr';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 600,\n    margin: 'auto',\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.background.paper\n  },\n  media: {\n    height: 0,\n    padding: '56.25%'\n  },\n  image: {\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}));\n\nfunction GeoUserPostsCard(props) {\n  _s();\n\n  const classes = useStyles(); //Custom styles for the component\n\n  const formRef = useRef(null); //Ref for the validator form\n\n  const [expanded, setExpanded] = useState(false); //This expands the comments. \n\n  const [comment, setComment] = useState(''); //This variable holds the comment.\n\n  const [commentSending, setCommentSending] = useState(false); //This variable will disable the comment button.\n\n  const [likeSending, setLikeSending] = useState(false); //This variable will disable the like button.\n\n  const [commentDeleting, setCommentDeleting] = useState(false); //This variable and setter will handle disabling the delete button while a comment is being deleted.\n\n  const [commentLiking, setCommentLiking] = useState(false); //This variable and setter will handle disabling the comment like Button when the comment is being liked or unliked.\n\n  const [deletingPost, setDeletingPost] = useState(false); //Variable and setter that will disable the delete button on a post while the server is deleting the post.\n\n  const [anchorEl, setAnchorEl] = useState(null); //The anchor element for a menu item within a Card Post.\n\n  const history = useHistory();\n  useEffect(() => {\n    //Add the validation rule so that a comment is not empty. \n    ValidatorForm.addValidationRule('notEmpty', v => {\n      if (v.length < 1) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }, []);\n\n  function timeDifference(date2, dateString) {\n    //This function will return whether or not we display something like \"2 hrs ago\" \"20 min ago\" or the date string for a post\n    let date1 = Date.now();\n    let difference = date1 - date2;\n    let daysDifference = Math.floor(difference / 1000 / 60 / 60 / 24);\n    let hoursDifference = Math.floor(difference / 1000 / 60 / 60);\n    let minutesDifference = Math.floor(difference / 1000 / 60);\n    let secondsDifference = Math.floor(difference / 1000);\n\n    if (daysDifference > 0) {\n      return dateString;\n    } else if (hoursDifference > 0 && hoursDifference < 23) {\n      return `${hoursDifference} hr ago`;\n    } else if (minutesDifference > 0 && minutesDifference < 60) {\n      return `${minutesDifference} min ago`;\n    } else if (minutesDifference === 0) {\n      return `${secondsDifference} secs ago`;\n    } else {\n      return dateString;\n    }\n  }\n\n  function changeAnchorEl(e) {\n    //Function that will handle altering the anchorEl on menu open \n    setAnchorEl(e.currentTarget);\n  }\n\n  function handleMenuClose() {\n    //This will handle closing the share button menu.\n    setAnchorEl(null);\n  }\n\n  function handleLike() {\n    //This function will handle liking a post when a mainUser visits a geoUsers' page. \n    setLikeSending(true);\n    let likeType;\n\n    if (props.post.likes.includes(props.mainUser.uniqueUserId)) {\n      likeType = 'unlike';\n    } else if (!props.post.likes.includes(props.mainUser.uniqueUserId)) {\n      likeType = 'like';\n    }\n\n    let data = {\n      uniqueLikerId: props.mainUser.uniqueUserId,\n      uniquePostId: props.post.uniquePostId,\n      uniqueUserId: props.post.uniqueUserId,\n      username: props.mainUser.username,\n      likeType: likeType,\n      communityPost: true,\n      communityName: props.post.community\n    };\n    return axios({\n      method: 'POST',\n      url: 'http://10.162.4.11:3001/api/handle/geo/post/like',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      props.dispatch({\n        type: 'visitorPosts/updatePosts',\n        payload: response.data.posts\n      }); //Update the posts. \n\n      if (response.data.likeType === 'like') {\n        swal('Great!', 'Post was successfully liked!', 'success');\n        setLikeSending(false);\n      } else {\n        swal('Great!', 'Post was successfully unliked!', 'success');\n        setLikeSending(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error liking or unliking that post!', 'error');\n      setLikeSending(false);\n    });\n  }\n\n  async function sendComment() {\n    setCommentSending(true);\n    let formValid = await formRef.current.isFormValid();\n\n    if (!formValid) {\n      swal('Uh Oh!', 'You must enter some text to send that comment!', 'error');\n      setCommentSending(false);\n      return false;\n    } else {\n      let date = new Date();\n      let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n      let month = months[date.getMonth()];\n      let day = date.getDate();\n      let year = date.getFullYear();\n      let data = {\n        uniqueCommentId: Date.now() + 'comment' + props.mainUser.uniqueUserId + props.mainUser.username + Date.now(),\n        uniqueUserId: props.mainUser.uniqueUserId,\n        username: props.mainUser.username,\n        dateString: `${month} ${day}, ${year}`,\n        text: comment,\n        uniquePosterId: props.post.uniqueUserId,\n        uniquePostId: props.post.uniquePostId,\n        communityPost: true,\n        communityName: props.post.community\n      };\n      return axios({\n        method: 'POST',\n        url: 'http://10.162.4.11:3001/api/add/geo/comment',\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        props.dispatch({\n          type: 'visitorPosts/updatePosts',\n          payload: response.data.posts\n        });\n        swal('Great!', 'Successfully posted comment!', 'success');\n        setCommentSending(false);\n        setComment('');\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error sending that comment! Please try again.', 'error');\n        setCommentSending(false);\n      });\n    }\n  }\n\n  function deleteComment(uniqueCommentId) {\n    setCommentDeleting(true);\n    let data = {\n      uniquePostId: props.post.uniquePostId,\n      commentId: uniqueCommentId,\n      uniquePosterId: props.post.uniqueUserId\n    };\n    return axios({\n      method: 'POST',\n      url: 'http://10.162.4.11:3001/api/delete/comment',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      props.dispatch({\n        type: 'visitorPosts/updatePosts',\n        payload: response.data.posts\n      });\n      swal('Great!', 'Comment successfully deleted!', 'success');\n      setCommentDeleting(false);\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error deleting that comment!', 'error');\n      setCommentDeleting(false);\n    });\n  }\n\n  function handleUserPush(uniqueUserId) {\n    //Route that handles pushing to a new user when the avatar is clicked within comments. \n    history.push(`/geouser/${uniqueUserId}`);\n    history.go(0);\n  }\n\n  function handleCommentLike(uniqueCommentId, uniqueCommenterId, isLiked) {\n    setCommentLiking(true);\n    let likeType;\n\n    if (isLiked) {\n      likeType = 'unlike';\n    } else {\n      likeType = 'like';\n    }\n\n    let data = {\n      likeType: likeType,\n      commentId: uniqueCommentId,\n      uniqueCommenterId: uniqueCommenterId,\n      uniquePostPosterId: props.post.uniqueUserId,\n      uniqueLikerId: props.mainUser.uniqueUserId,\n      username: props.mainUser.username,\n      postType: 'personal',\n      uniquePostId: props.post.uniquePostId\n    };\n    return axios({\n      method: 'POST',\n      url: 'http://10.162.4.11:3001/api/handle/geo/comment/like',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      props.dispatch({\n        type: 'visitorPosts/updatePosts',\n        payload: response.data.posts\n      });\n      props.setter(response.data.geoUser);\n\n      if (response.data.likeType === 'like') {\n        swal('Great!', 'Comment successfully liked!', 'success');\n        setCommentLiking(false);\n      } else {\n        swal('Great!', 'Comment successfully unliked!', 'success');\n        setCommentLiking(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error liking or unliking that comment! Please try again.', 'error');\n      setCommentLiking(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    id: `${props.post.uniquePostId}`,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        zeroMinWidth: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          component: \"small\",\n          noWrap: true,\n          style: {\n            fontWeight: 'bold',\n            fontSize: 12\n          },\n          children: props.post.community\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }, this),\n      subheader: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          component: \"span\",\n          color: \"textSecondary\",\n          children: timeDifference(props.post.utcTime, props.post.dateString)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          component: \"small\",\n          color: \"textSecondary\",\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: e => history.push(`/geouser/${props.post.uniqueUserId}`),\n          children: props.post.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }, this),\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: `http://10.162.4.11:3001/api/get/avatar/by/community/name/${props.post.community}`,\n        title: `${props.post.username}`,\n        alt: `${props.post.username}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 21\n      }, this),\n      action: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            path: mdiDotsVertical,\n            size: 1,\n            title: \"Share button\",\n            \"aria-label\": \"Share button\",\n            onClick: changeAnchorEl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          open: Boolean(anchorEl),\n          anchorEl: anchorEl,\n          keepMounted: true,\n          onClose: handleMenuClose,\n          children: /*#__PURE__*/_jsxDEV(MenuItem, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Post link\",\n              color: \"primary\",\n              value: `http://192.168.0.9:3000/community/${props.post.community}#${props.post.uniquePostId}`,\n              readonly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.post.type === 'photo' && /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        src: `http://10.162.4.11:3001/api/get-photo/${props.post.src}`,\n        title: `Post by ${props.post.username}`,\n        alt: \"GeoCities photo post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.post.type === 'video' && /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Plyr, {\n          playsinline: true,\n          playsInline: true,\n          type: \"video\",\n          sources: [{\n            src: `http://10.162.4.11:3001/api/get-video/${props.post.src}`\n          }],\n          fullscreen: {\n            enable: true,\n            fallback: true,\n            iosNative: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [props.post.title && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h3\",\n          align: \"center\",\n          children: props.post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }, this), props.post.type === 'text' && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          children: props.post.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: (props.post.type === 'photo' || props.post.type === 'video') && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          children: props.post.caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        disabled: likeSending,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: props.post.likes.includes(props.mainUser.uniqueUserId) ? mdiThumbUp : mdiThumbUpOutline,\n          size: 1,\n          title: \"Post like button\",\n          \"aria-label\": \"Post like button\",\n          onClick: handleLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.post.likes.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: props.post.likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: () => setExpanded(!expanded),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: _.find(props.post.comments, comment => comment.uniqueUserId === props.mainUser.uniqueUserId) ? mdiComment : mdiCommentOutline,\n          size: 1,\n          title: \"Comment button\",\n          \"aria-label\": \"Comment button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.post.comments.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: props.post.comments.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }, this), (props.moderator === true || props.mainUser.uniqueUserId === props.post.uniqueUserId) && /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        \"aria-label\": \"Delete post button\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiDelete,\n          size: 1,\n          title: \"Delete post icon\",\n          \"aria-label\": \"Delete post icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          marginLeft: 'auto'\n        },\n        onClick: () => setExpanded(!expanded),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          path: expanded ? mdiChevronUp : mdiChevronDown,\n          size: 1,\n          title: expanded ? 'Expand less' : 'Expand more',\n          \"aria-label\": expanded ? 'Expand less' : 'Expand more'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: expanded,\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(ValidatorForm, {\n          ref: formRef,\n          onSubmit: e => e.preventDefault(),\n          children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Comment\",\n            placeholder: \"Add a comment...\",\n            variant: \"outlined\",\n            color: \"primary\",\n            helperText: \"Add a comment\",\n            value: comment,\n            onChange: e => setComment(e.target.value),\n            validators: ['notEmpty'],\n            errorMessages: ['You must enter some text to send a comment!'],\n            InputLabelProps: {\n              shrink: true\n            },\n            rows: 4,\n            multiline: true,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n              path: mdiSend,\n              size: 1,\n              title: \"Send icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 33\n            }, this),\n            \"aria-label\": \"Send comment button\",\n            disabled: commentSending,\n            onClick: sendComment,\n            children: commentSending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 47\n            }, this) : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          children: props.post.comments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                id: `${comment.uniqueCommentId}`,\n                alignItems: \"flex-start\",\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://10.162.4.11:3001/api/get/avatar/by/id/${comment.uniqueUserId}`,\n                    title: `${comment.username}`,\n                    alt: `${comment.username}`,\n                    onClick: e => handleUserPush(comment.uniqueUserId),\n                    style: {\n                      cursor: 'pointer'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"h6\",\n                      children: comment.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 614,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      component: \"span\",\n                      color: \"textSecondary\",\n                      children: timeDifference(comment.utcTime, comment.dateString)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 620,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 53\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    component: \"p\",\n                    children: comment.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: props.mainUser.uniqueUserId === comment.uniqueUserId && /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"primary\",\n                    onClick: () => deleteComment(comment.uniqueCommentId),\n                    disabled: commentDeleting,\n                    children: commentDeleting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 645,\n                      columnNumber: 76\n                    }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n                      path: mdiDelete,\n                      size: 1,\n                      title: \"Delete comment button\",\n                      \"aria-label\": \"Delete comment button\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 645,\n                      columnNumber: 115\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 640,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: props.mainUser !== null && /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"primary\",\n                    disabled: commentLiking,\n                    onClick: () => handleCommentLike(comment.uniqueCommentId, comment.uniqueUserId, comment.likes.includes(props.mainUser.uniqueUserId)),\n                    children: [!comment.likes.includes(props.mainUser.uniqueUserId) ? /*#__PURE__*/_jsxDEV(Icon, {\n                      path: mdiThumbUpOutline,\n                      size: 1,\n                      title: \"Comment like button\",\n                      \"aria-label\": \"Comment like button\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 656,\n                      columnNumber: 113\n                    }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n                      path: mdiThumbUp,\n                      size: 1,\n                      title: \"Comment like button\",\n                      \"aria-label\": \"Comment like button\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 656,\n                      columnNumber: 220\n                    }, this), comment.likes.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"p\",\n                      children: comment.likes.length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 658,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 41\n              }, this), index < props.post.comments.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GeoUserPostsCard, \"WT60ynPWpAqAG1BV/+JHexsywo4=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = GeoUserPostsCard;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user,\n    posts: state.visitorPostsReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(GeoUserPostsCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"GeoUserPostsCard\");","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/CommunityPostsCard.js"],"names":["React","useState","useRef","useEffect","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","Collapse","ValidatorForm","TextValidator","Button","Divider","IconButton","CircularProgress","Icon","mdiThumbUp","mdiThumbUpOutline","mdiComment","mdiCommentOutline","mdiChevronDown","mdiChevronUp","mdiDelete","mdiSend","mdiDotsVertical","makeStyles","axios","_","connect","swal","List","ListItem","ListItemAvatar","ListItemText","Plyr","Menu","MenuItem","TextField","useHistory","Grid","useStyles","theme","card","maxWidth","margin","padding","spacing","backgroundColor","palette","background","paper","media","height","image","maxHeight","GeoUserPostsCard","props","classes","formRef","expanded","setExpanded","comment","setComment","commentSending","setCommentSending","likeSending","setLikeSending","commentDeleting","setCommentDeleting","commentLiking","setCommentLiking","deletingPost","setDeletingPost","anchorEl","setAnchorEl","history","addValidationRule","v","length","timeDifference","date2","dateString","date1","Date","now","difference","daysDifference","Math","floor","hoursDifference","minutesDifference","secondsDifference","changeAnchorEl","e","currentTarget","handleMenuClose","handleLike","likeType","post","likes","includes","mainUser","uniqueUserId","data","uniqueLikerId","uniquePostId","username","communityPost","communityName","community","method","url","headers","then","response","dispatch","type","payload","posts","catch","err","console","log","message","sendComment","formValid","current","isFormValid","date","months","month","getMonth","day","getDate","year","getFullYear","uniqueCommentId","text","uniquePosterId","deleteComment","commentId","handleUserPush","push","go","handleCommentLike","uniqueCommenterId","isLiked","uniquePostPosterId","postType","setter","geoUser","fontWeight","fontSize","utcTime","cursor","Boolean","src","enable","fallback","iosNative","title","caption","find","comments","moderator","marginLeft","preventDefault","target","value","shrink","marginTop","map","index","mapStateToProps","state","userReducer","user","visitorPostsReducer"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Icon from '@mdi/react';\nimport { mdiThumbUp, mdiThumbUpOutline, mdiComment, mdiCommentOutline, mdiChevronDown, mdiChevronUp, mdiDelete, mdiSend, mdiDotsVertical } from '@mdi/js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport * as _ from 'underscore';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Plyr from 'react-plyr';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        maxWidth: 600,\n        margin: 'auto',\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n    },\n    media: {\n        height: 0,\n        padding: '56.25%',\n    },\n    image: {\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n}));\n\nfunction GeoUserPostsCard(props) {\n    const classes = useStyles(); //Custom styles for the component\n    const formRef = useRef(null); //Ref for the validator form\n    const [expanded, setExpanded] = useState(false); //This expands the comments. \n    const [comment, setComment] = useState(''); //This variable holds the comment.\n    const [commentSending, setCommentSending] = useState(false); //This variable will disable the comment button.\n    const [likeSending, setLikeSending] = useState(false); //This variable will disable the like button.\n    const [commentDeleting, setCommentDeleting] = useState(false); //This variable and setter will handle disabling the delete button while a comment is being deleted.\n    const [commentLiking, setCommentLiking] = useState(false); //This variable and setter will handle disabling the comment like Button when the comment is being liked or unliked.\n    const [deletingPost, setDeletingPost] = useState(false); //Variable and setter that will disable the delete button on a post while the server is deleting the post.\n    const [anchorEl, setAnchorEl] = useState(null); //The anchor element for a menu item within a Card Post.\n    const history = useHistory();\n\n    useEffect(() => {\n        //Add the validation rule so that a comment is not empty. \n        ValidatorForm.addValidationRule('notEmpty', v => {\n            if(v.length < 1) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }, []);\n\n    function timeDifference(date2, dateString) {\n        //This function will return whether or not we display something like \"2 hrs ago\" \"20 min ago\" or the date string for a post\n        let date1 = Date.now();\n        let difference = date1 - date2;\n        let daysDifference = Math.floor(difference/1000/60/60/24);\n        let hoursDifference = Math.floor(difference/1000/60/60);\n        let minutesDifference = Math.floor(difference/1000/60);\n        let secondsDifference = Math.floor(difference/1000);\n        if(daysDifference > 0) {\n            return dateString;\n        }\n        else if(hoursDifference > 0 && hoursDifference < 23) {\n            return `${hoursDifference} hr ago`;\n        }\n        else if(minutesDifference > 0 && minutesDifference < 60) {\n            return `${minutesDifference} min ago`;\n        }\n        else if(minutesDifference === 0) {\n            return `${secondsDifference} secs ago`\n        }\n        else {\n            return dateString;\n        }\n    }\n\n    function changeAnchorEl(e) {\n        //Function that will handle altering the anchorEl on menu open \n        setAnchorEl(e.currentTarget);\n    }\n\n    function handleMenuClose() {\n        //This will handle closing the share button menu.\n        setAnchorEl(null);\n    }\n\n    function handleLike() {\n        //This function will handle liking a post when a mainUser visits a geoUsers' page. \n        setLikeSending(true);\n        let likeType;\n        if(props.post.likes.includes(props.mainUser.uniqueUserId)) {\n            likeType = 'unlike';\n        }\n        else if(!props.post.likes.includes(props.mainUser.uniqueUserId)) {\n            likeType = 'like';\n        }\n        let data = {\n            uniqueLikerId: props.mainUser.uniqueUserId,\n            uniquePostId: props.post.uniquePostId,\n            uniqueUserId: props.post.uniqueUserId,\n            username: props.mainUser.username,\n            likeType: likeType,\n            communityPost: true,\n            communityName: props.post.community,\n        };\n\n        return axios({\n            method: 'POST',\n            url: 'http://10.162.4.11:3001/api/handle/geo/post/like',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts}); //Update the posts. \n            if(response.data.likeType === 'like') {\n                swal(\n                    'Great!',\n                    'Post was successfully liked!',\n                    'success',\n                );\n                setLikeSending(false);\n            }\n            else {\n                swal(\n                    'Great!',\n                    'Post was successfully unliked!',\n                    'success',\n                );\n                setLikeSending(false);\n            }\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error liking or unliking that post!',\n                'error',\n            );\n            setLikeSending(false);\n        });\n    }\n\n    async function sendComment() {\n        setCommentSending(true);\n        let formValid = await formRef.current.isFormValid();\n        if(!formValid) {\n            swal(\n                'Uh Oh!',\n                'You must enter some text to send that comment!',\n                'error',\n            );\n            setCommentSending(false);\n            return false;\n        }\n        else {\n            let date = new Date();\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n            let month = months[date.getMonth()];\n            let day = date.getDate();\n            let year = date.getFullYear();\n\n            let data = {\n                uniqueCommentId: Date.now() + 'comment' + props.mainUser.uniqueUserId + props.mainUser.username + Date.now(),\n                uniqueUserId: props.mainUser.uniqueUserId,\n                username: props.mainUser.username,\n                dateString: `${month} ${day}, ${year}`,\n                text: comment,\n                uniquePosterId: props.post.uniqueUserId,\n                uniquePostId: props.post.uniquePostId,\n                communityPost: true,\n                communityName: props.post.community,\n            };\n\n            return axios({\n                method: 'POST',\n                url: 'http://10.162.4.11:3001/api/add/geo/comment',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            }).then(response => {\n                props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\n                swal(\n                    'Great!',\n                    'Successfully posted comment!',\n                    'success',\n                );\n                setCommentSending(false);\n                setComment('');\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error sending that comment! Please try again.',\n                    'error',\n                );\n                setCommentSending(false);\n            });\n        }\n    }\n\n    function deleteComment(uniqueCommentId) {\n        setCommentDeleting(true); \n\n        let data = {\n            uniquePostId: props.post.uniquePostId,\n            commentId: uniqueCommentId,\n            uniquePosterId: props.post.uniqueUserId,\n        };\n\n        return axios({\n            method: 'POST',\n            url: 'http://10.162.4.11:3001/api/delete/comment',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\n            swal(\n                'Great!',\n                'Comment successfully deleted!',\n                'success',\n            );\n            setCommentDeleting(false);\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error deleting that comment!',\n                'error',\n            );\n            setCommentDeleting(false);\n        });\n    }\n\n    function handleUserPush(uniqueUserId) {\n        //Route that handles pushing to a new user when the avatar is clicked within comments. \n        history.push(`/geouser/${uniqueUserId}`);\n        history.go(0);\n    }\n\n    function handleCommentLike(uniqueCommentId, uniqueCommenterId, isLiked) {\n        setCommentLiking(true); \n        let likeType;\n        if(isLiked) {\n            likeType = 'unlike';\n        }\n        else {\n            likeType = 'like';\n        }\n\n        let data = {\n            likeType: likeType,\n            commentId: uniqueCommentId,\n            uniqueCommenterId: uniqueCommenterId,\n            uniquePostPosterId: props.post.uniqueUserId,\n            uniqueLikerId: props.mainUser.uniqueUserId,\n            username: props.mainUser.username,\n            postType: 'personal',\n            uniquePostId: props.post.uniquePostId,\n        };\n\n        return axios({\n            method: 'POST',\n            url: 'http://10.162.4.11:3001/api/handle/geo/comment/like',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\n            props.setter(response.data.geoUser);\n            if(response.data.likeType === 'like') {\n                swal(\n                    'Great!',\n                    'Comment successfully liked!',\n                    'success',\n                );\n                setCommentLiking(false);\n            }\n            else {\n                swal(\n                    'Great!',\n                    'Comment successfully unliked!',\n                    'success',\n                );\n                setCommentLiking(false);\n            }\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error liking or unliking that comment! Please try again.',\n                'error',\n            );\n            setCommentLiking(false);\n        });\n    }\n\n    return (\n        <Card \n            className={classes.card}\n            id={`${props.post.uniquePostId}`}\n        >\n            <CardHeader \n                title={\n                    <Grid \n                        item \n                        xs={12}\n                        zeroMinWidth \n                    >\n                        <Typography \n                            variant='subtitle1'\n                            component='small'\n                            noWrap\n                            style={{\n                                fontWeight: 'bold',\n                                fontSize: 12,\n                            }}\n                        >\n                            {props.post.community}\n                        </Typography>\n                    </Grid>\n                }\n                subheader={\n                    <React.Fragment>\n                        <Typography \n                            variant='subtitle1'\n                            component='span'\n                            color='textSecondary' \n                        >\n                            {timeDifference(props.post.utcTime, props.post.dateString)}\n                        </Typography>\n                        <br />\n                        <Typography \n                            variant='subtitle2' \n                            component='small' \n                            color='textSecondary'  \n                            style={{\n                                cursor: 'pointer',\n                            }}\n                            onClick={e => history.push(`/geouser/${props.post.uniqueUserId}`)}\n                        >\n                            {props.post.username}\n                        </Typography>\n                    </React.Fragment>\n                }\n                avatar={\n                    <Avatar \n                        src={`http://10.162.4.11:3001/api/get/avatar/by/community/name/${props.post.community}`}\n                        title={`${props.post.username}`}\n                        alt={`${props.post.username}`}\n                    />\n                }\n                action={\n                    <div>\n                        <IconButton>\n                            <Icon \n                                path={mdiDotsVertical} \n                                size={1} \n                                title='Share button' \n                                aria-label='Share button' \n                                onClick={changeAnchorEl}\n                            />\n                        </IconButton>\n                        <Menu \n                            open={Boolean(anchorEl)}\n                            anchorEl={anchorEl}\n                            keepMounted \n                            onClose={handleMenuClose}\n                        >\n                            <MenuItem>\n                                <TextField \n                                    label='Post link' \n                                    color='primary' \n                                    value={`http://192.168.0.9:3000/community/${props.post.community}#${props.post.uniquePostId}`}\n                                    readonly \n                                />\n                            </MenuItem>\n                        </Menu>\n                    </div>\n                }\n            />\n            <div>\n                {props.post.type === 'photo' &&\n                    <CardMedia \n                        component='img'\n                        src={`http://10.162.4.11:3001/api/get-photo/${props.post.src}`}\n                        title={`Post by ${props.post.username}`}\n                        alt='GeoCities photo post'\n                    />\n                }\n            </div>\n            <div>\n                {props.post.type === 'video' &&\n                    <CardContent>\n                        <Plyr \n                            playsinline={true}\n                            playsInline\n                            type='video'\n                            sources={[\n                                {\n                                    src: `http://10.162.4.11:3001/api/get-video/${props.post.src}`,\n                                }\n                            ]}\n                            fullscreen={{\n                                enable: true,\n                                fallback: true,\n                                iosNative: false,\n                            }}\n                        />\n                    </CardContent>\n                }\n            </div>\n            <CardContent>\n                <div>\n                    {props.post.title &&\n                        <Typography \n                            variant='h3' \n                            component='h3' \n                            align='center'\n                        >\n                            {props.post.title}\n                        </Typography>\n                    }\n                    {props.post.type === 'text' &&\n                        <Typography \n                            variant='body2' \n                            component='p' \n                        >\n                            {props.post.text}\n                        </Typography>\n                    }\n                </div>\n                <div>\n                    {(props.post.type === 'photo' || props.post.type === 'video') && \n                        <Typography \n                            variant='body2' \n                            component='p' \n                        >\n                            {props.post.caption}\n                        </Typography>\n                    }\n                </div>\n            </CardContent>\n            <CardActions>\n                <IconButton \n                    color='primary'\n                    disabled={likeSending}\n                >\n                    <Icon  \n                        path={props.post.likes.includes(props.mainUser.uniqueUserId) ? mdiThumbUp : mdiThumbUpOutline}\n                        size={1} \n                        title='Post like button'\n                        aria-label='Post like button'\n                        onClick={handleLike}\n                    />\n                    <div>\n                        {props.post.likes.length > 0 &&\n                            <Typography \n                                variant='body1' \n                                component='p' \n                            >\n                                {props.post.likes.length}\n                            </Typography>\n                        }\n                    </div>\n                </IconButton>\n                <IconButton \n                    color='primary'\n                    onClick={() => setExpanded(!expanded)}\n                >\n                    <Icon \n                        path={_.find(props.post.comments, comment => comment.uniqueUserId === props.mainUser.uniqueUserId) ? mdiComment : mdiCommentOutline} \n                        size={1}\n                        title='Comment button' \n                        aria-label='Comment button' \n                    />\n                    <div>\n                        {props.post.comments.length > 0 &&\n                            <Typography \n                                variant='body1' \n                                component='p' \n                            >\n                                {props.post.comments.length}\n                            </Typography>\n                        }\n                    </div>\n                </IconButton>\n                {(props.moderator === true || props.mainUser.uniqueUserId === props.post.uniqueUserId) &&\n                    <IconButton \n                        color='primary' \n                        aria-label='Delete post button'\n                    >\n                        <Icon \n                            path={mdiDelete}\n                            size={1}\n                            title='Delete post icon'\n                            aria-label='Delete post icon' \n                        />\n                    </IconButton>\n                }\n                <IconButton \n                    style={{\n                        marginLeft: 'auto' \n                    }}\n                    onClick={() => setExpanded(!expanded)}\n                >\n                    <Icon \n                        path={expanded ? mdiChevronUp : mdiChevronDown} \n                        size={1}\n                        title={expanded ? 'Expand less' : 'Expand more'} \n                        aria-label={expanded ? 'Expand less' : 'Expand more'} \n                    />\n                </IconButton>\n            </CardActions>\n            <Collapse \n                in={expanded} \n            >\n                <Divider />\n                <CardContent>\n                    <ValidatorForm \n                        ref={formRef} \n                        onSubmit={e => e.preventDefault()} \n                    >\n                        <TextValidator \n                            label='Comment' \n                            placeholder='Add a comment...' \n                            variant='outlined' \n                            color='primary' \n                            helperText='Add a comment' \n                            value={comment} \n                            onChange={e => setComment(e.target.value)} \n                            validators={['notEmpty']}\n                            errorMessages={['You must enter some text to send a comment!']}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            rows={4}\n                            multiline \n                            fullWidth \n                        />\n                        <Button \n                            color='primary' \n                            variant='outlined' \n                            startIcon={\n                                <Icon \n                                    path={mdiSend} \n                                    size={1} \n                                    title='Send icon' \n                                />\n                            }\n                            aria-label='Send comment button' \n                            disabled={commentSending}\n                            onClick={sendComment}\n                        >\n                            {commentSending ? <CircularProgress color='primary' /> : 'Send'}\n                        </Button>\n                    </ValidatorForm>\n                    <Divider />\n                    <div \n                        style={{\n                            marginTop: 10,\n                        }}\n                    >\n                        {props.post.comments.length > 0 &&\n                            <div>\n                                {props.post.comments.map((comment, index) => (\n                                    <div\n                                        key={index} \n                                    >\n                                        <ListItem \n                                            id={`${comment.uniqueCommentId}`}\n                                            alignItems='flex-start'\n                                        >\n                                            <ListItemAvatar>\n                                                <Avatar \n                                                    src={`http://10.162.4.11:3001/api/get/avatar/by/id/${comment.uniqueUserId}`}\n                                                    title={`${comment.username}`}\n                                                    alt={`${comment.username}`} \n                                                    onClick={e => handleUserPush(comment.uniqueUserId)}\n                                                    style={{\n                                                        cursor: 'pointer',\n                                                    }}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText \n                                                primary={\n                                                    <div>\n                                                        <Typography \n                                                            variant='h6' \n                                                            component='h6' \n                                                        >\n                                                            {comment.username}\n                                                        </Typography>\n                                                        <Typography \n                                                            variant='subtitle1' \n                                                            component='span' \n                                                            color='textSecondary'\n                                                        >\n                                                            {timeDifference(comment.utcTime, comment.dateString)}\n                                                        </Typography>\n                                                    </div>\n                                                }\n                                                secondary={\n                                                    <Typography \n                                                        variant='body2' \n                                                        component='p' \n                                                    >\n                                                        {comment.text}\n                                                    </Typography>\n                                                }\n                                            />\n                                            <div>\n                                                {(props.mainUser.uniqueUserId === comment.uniqueUserId) &&\n                                                    <IconButton \n                                                        color='primary'\n                                                        onClick={() => deleteComment(comment.uniqueCommentId)}\n                                                        disabled={commentDeleting}\n                                                    >\n                                                        {commentDeleting ? <CircularProgress color='primary' /> : <Icon path={mdiDelete} size={1} title='Delete comment button' aria-label='Delete comment button' />}\n                                                    </IconButton>\n                                                }\n                                            </div>\n                                            <div>\n                                                {props.mainUser !== null &&\n                                                    <IconButton \n                                                        color='primary' \n                                                        disabled={commentLiking}\n                                                        onClick={() => handleCommentLike(comment.uniqueCommentId, comment.uniqueUserId, comment.likes.includes(props.mainUser.uniqueUserId))}\n                                                    >\n                                                        {!comment.likes.includes(props.mainUser.uniqueUserId) ? <Icon path={mdiThumbUpOutline} size={1}  title='Comment like button' aria-label='Comment like button' /> : <Icon path={mdiThumbUp} size={1} title='Comment like button' aria-label='Comment like button' />}\n                                                        {comment.likes.length > 0 &&\n                                                            <Typography \n                                                                variant='body1' \n                                                                component='p' \n                                                            >\n                                                                {comment.likes.length}\n                                                            </Typography>\n                                                        }\n                                                    </IconButton>\n                                                }\n                                            </div>\n                                        </ListItem>\n                                        {index < props.post.comments.length - 1 &&\n                                            <Divider />\n                                        }\n                                    </div>\n                                ))}\n                            </div>\n                        }\n                    </div>\n                </CardContent>\n            </Collapse>\n        </Card>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        mainUser: state.userReducer.user,\n        posts: state.visitorPostsReducer.posts,\n    };\n}\n\nexport default connect(mapStateToProps)(GeoUserPostsCard);"]},"metadata":{},"sourceType":"module"}