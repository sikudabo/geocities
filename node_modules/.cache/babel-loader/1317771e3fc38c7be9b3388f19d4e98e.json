{"ast":null,"code":"import _regeneratorRuntime from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect,useRef}from'react';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import Paper from'@material-ui/core/Paper';import Tabs from'@material-ui/core/Tabs';import Tab from'@material-ui/core/Tab';import Avatar from'@material-ui/core/Avatar';import Backdrop from'@material-ui/core/Backdrop';import CircularProgress from'@material-ui/core/CircularProgress';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemText from'@material-ui/core/ListItemText';import ListItemAvatar from'@material-ui/core/ListItemAvatar';import Divider from'@material-ui/core/Divider';import Button from'@material-ui/core/Button';import axios from'axios';import swal from'sweetalert';import Dialog from'@material-ui/core/Dialog';import DialogContent from'@material-ui/core/DialogContent';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import Hidden from'@material-ui/core/Hidden';import*as _ from'underscore';import{connect}from'react-redux';import{useHistory,useParams}from'react-router-dom';import{makeStyles}from'@material-ui/core/styles';import IconButton from'@material-ui/core/IconButton';import Icon from'@mdi/react';import{mdiClose,mdiCamera,mdiVideo}from'@mdi/js';import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';import CommunityPostsCard from'./CommunityPostsCard';import NonUserCommunityPostsCard from'./NonUserCommunityPostsCard';import Resizer from'react-image-file-resizer';import TextField from'@material-ui/core/TextField';import Accordion from'@material-ui/core/Accordion';import AccordionSummary from'@material-ui/core/AccordionSummary';import AccordionDetails from'@material-ui/core/AccordionDetails';import ChevronDownIcon from'@material-ui/icons/ExpandMore';import CameraIcon from'@material-ui/icons/CameraAlt';import{SwatchesPicker}from'react-color';import Checkbox from'@material-ui/core/Checkbox';import FormControl from'@material-ui/core/FormControl';import FormLabel from'@material-ui/core/FormLabel';import FormControlLabel from'@material-ui/core/FormControlLabel';import FormGroup from'@material-ui/core/FormGroup';import Autocomplete,{createFilterOptions}from'@material-ui/lab/Autocomplete';function TabPanel(props){//This component will serve as the panel for each individual tab.\nvar children=props.children,value=props.value,index=props.index,other=_objectWithoutProperties(props,[\"children\",\"value\",\"index\"]);return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({role:\"tabpanel\",hidden:index!==value,id:\"tabpanel-\".concat(index),\"aria-label\":\"tab-\".concat(index),\"aria-labelledby\":\"tab-\".concat(index)},other),{},{style:{marginTop:100},children:value===index&&/*#__PURE__*/_jsx(Grid,{item:true,xs:true,style:{textAlign:'center'},children:children})}));}function a11yProps(index){return{id:\"tab-\".concat(index),'aria-controls':\"tabpanel-\".concat(index)};}var communityTopics=['Accounting','Activism','Animals And Pets','Art','Astrology','Athletes','Aviation','Bars','Baseball','Beauty And Makeup','Biking','Black Lives Matter','Brands/Products','Business','Careers','Cars And Motor Vehicles','Celebrity','College Baseball','College Basketball','College Football','Computer Science','Crafts And DYI','Crossfit','Crypto','Culture Race And Ethnicity','Dancing','Day Trading','Documentaries','Economics','Education','Electronics','Entertainment','Ethics And Philosophy','Family And Relationships','Fashion','Filming','Fitness And Nutrition','Food And Drink','Funny/Humor','Gaming','Gender','GeoCities','Greek Life','Hair','Health','History','Hobbies','Hockey','Home And Garden','Investing','International Culture','Internet Culture','Intramural Sports','Latin Culture','Marijuna','Marketplace And Deals','Mature Themes And Adult Content','Medical And Mental Health','Meditation',\"Men's Health\",'Military','Movies','Music','NBA','NFL','NHL','Nursing','Only Fans','Outdoors And Nature','Partying','People','Personal Connections','Photography','Podcasts And Streamers','Politics','Pop Culture','Programming','Public Policy','Reading Writing And Literature','Religion And Spirituality','Robinhood Trading','Rowing','Running','Science','Sexual Health And Orientation','Side Hustle','Sports','Soccer','Social Justice','Software Engineering','Streaming','Tabletop Games','Television','Television Personalities','Theatre','Track & Field','Volleyball',\"Women's Health\",'World News','Working Out/Gym','Work/Labor'];var userFilterOptions=createFilterOptions({matchFrom:'any',stringify:function stringify(option){return option.firstName+' '+option.lastName+' '+option.username;}});//Filter options to search for users to potentially block. \nfunction Community(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),community=_useState2[0],setCommunity=_useState2[1];//This variable and setter will manipulate community.\nvar useStyles=makeStyles(function(){return{root:{marginTop:100},centerContent:{margin:'auto',textAlign:'center'},nameGrid:{margin:'auto',textAlign:'center',marginTop:20},avatarLg:{height:168,width:168,margin:'auto'},avatarSm:{height:128,width:128,margin:'auto'},paper:{backgroundColor:community!==null?community.communityTheme:'rgb(0, 20, 60)'},closeIcon:{color:'rgb(255, 255, 255)'},input:{display:'none'}};});var classes=useStyles();//Custom styles for the component. \nvar history=useHistory();//Window history API.\nvar params=useParams();//Access url parameters. \nvar textFormRef=useRef(null);//Ref for validator form when we upload posts.\nvar linkFormRef=useRef(null);var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),joinSending=_useState4[0],setJoinSending=_useState4[1];//Will disable the button while we send a join or request join to the server.\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),postDialog=_useState6[0],setPostDialog=_useState6[1];//Will open and close the dialog to make a post.\nvar _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),curTab=_useState8[0],setTab=_useState8[1];//Sets the current tab in post upload dialog. \nvar _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),curTab2=_useState10[0],setTab2=_useState10[1];//For the second tab that displays posts, about (and settings if the user is not null and the uniqueUserId matches the mainUser, for moderation)\nvar _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),textPost=_useState12[0],setTextPost=_useState12[1];//Value for text post. \nvar _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),textPostTitle=_useState14[0],setTextPostTitle=_useState14[1];//Value for title.\nvar _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),photoPost=_useState16[0],setPhotoPost=_useState16[1];//Value for photo upload. \nvar _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),photoPostTitle=_useState18[0],setPhotoPostTitle=_useState18[1];//Value for photo post title. \nvar _useState19=useState(null),_useState20=_slicedToArray(_useState19,2),videoPost=_useState20[0],setVideoPost=_useState20[1];//Value for video post. \nvar _useState21=useState(''),_useState22=_slicedToArray(_useState21,2),videoPostTitle=_useState22[0],setVideoPostTitle=_useState22[1];//Video post title. \nvar _useState23=useState(''),_useState24=_slicedToArray(_useState23,2),linkPost=_useState24[0],setLinkPost=_useState24[1];//Value for the link in a link post. \nvar _useState25=useState(''),_useState26=_slicedToArray(_useState25,2),linkPostTitle=_useState26[0],setLinkPostTitle=_useState26[1];//Value for link post title. \nvar _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),posting=_useState28[0],setPosting=_useState28[1];//Will handle disabling buttons and bars when a post is being sent to the server.\nvar _useState29=useState(null),_useState30=_slicedToArray(_useState29,2),uploadPhoto=_useState30[0],setUploadPhoto=_useState30[1];//Will control any photo post photo that we upload to the server. \nvar _useState31=useState(''),_useState32=_slicedToArray(_useState31,2),photoCaption=_useState32[0],setPhotoCaption=_useState32[1];//Variable and setter for a caption for a photo upload. \nvar _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),photoUploading=_useState34[0],setPhotoUploading=_useState34[1];//Used to alter functionality when the photo post is being uploaded to the server. \nvar _useState35=useState(null),_useState36=_slicedToArray(_useState35,2),uploadVideo=_useState36[0],setUploadVideo=_useState36[1];//Variable and setter for a video to be uploaded \nvar _useState37=useState(null),_useState38=_slicedToArray(_useState37,2),videoUploading=_useState38[0],setVideoUploading=_useState38[1];//Variable and setter to disable button while video is uploading. \nvar _useState39=useState(null),_useState40=_slicedToArray(_useState39,2),videoCaption=_useState40[0],setVideoCaption=_useState40[1];//Variable and setter for the caption for a video post. \nvar _useState41=useState(''),_useState42=_slicedToArray(_useState41,2),postLink=_useState42[0],setPostLink=_useState42[1];//This variable will store the link post link. \nvar _useState43=useState(''),_useState44=_slicedToArray(_useState43,2),editTitleText=_useState44[0],setEditTitleText=_useState44[1];//Variable and setter to change the community title in settings. \nvar _useState45=useState(''),_useState46=_slicedToArray(_useState45,2),editDescriptionText=_useState46[0],setEditDescriptionText=_useState46[1];//Variable and setter to edit the community description text. \nvar _useState47=useState(null),_useState48=_slicedToArray(_useState47,2),avatarEdit=_useState48[0],setAvatarEdit=_useState48[1];//Getter and setter that will alter an avatar when the moderator updaetes it. \nvar _useState49=useState('#00143C'),_useState50=_slicedToArray(_useState49,2),themeEdit=_useState50[0],setThemeEdit=_useState50[1];//Variable and setter for the community theme.\nvar _useState51=useState([]),_useState52=_slicedToArray(_useState51,2),topics=_useState52[0],setTopics=_useState52[1];//Community topics.\nvar _useState53=useState(false),_useState54=_slicedToArray(_useState53,2),makingEdit=_useState54[0],setMakingEdit=_useState54[1];//Will disable buttons when we make an edit. \nvar _useState55=useState([]),_useState56=_slicedToArray(_useState55,2),allUsers=_useState56[0],setAllUsers=_useState56[1];//Variable and setter for the users to search when we want to block one. \nvar _useState57=useState(null),_useState58=_slicedToArray(_useState57,2),selectedUser=_useState58[0],setSelectedUser=_useState58[1];//Variable and setter for the user we choose to block\nvar _useState59=useState(''),_useState60=_slicedToArray(_useState59,2),newRule=_useState60[0],setNewRule=_useState60[1];//This is the variable and setter when a user adds a new rule. \nvar _useState61=useState(''),_useState62=_slicedToArray(_useState61,2),newReason=_useState62[0],setNewReason=_useState62[1];//Variable and setter for the new reason for a new rule. \nvar regularExpressions={urlRegex:/^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i};//This will store the regular expressions to make sure link posts have valid url's. \nuseEffect(function(){//Add validation rules \nValidatorForm.addValidationRule('titleLength',function(v){if(v.length>75){return false;}else{return true;}});//Rule for text or caption to be 3,000 characters or less. \nValidatorForm.addValidationRule('textLength',function(v){if(v.length>3000){return false;}else{return true;}});//Validation rule to ensure textPost and linkPost are not empty. \nValidatorForm.addValidationRule('requiredText',function(v){if(v.trim()===''){return false;}else{return true;}});//Validation rule will ensure links are valid \nValidatorForm.addValidationRule('validLink',function(v){if(!regularExpressions.urlRegex.test(v)){return false;}else{return true;}});//First we need to fetch the community with axios. \nif(true){return axios({method:'GET',url:\"http://192.168.0.17:3001/api/fetch/community/\".concat(params.communityName)}).then(function(response){if(response.data.community){setCommunity(response.data.community);//Set allUsers \nsetAllUsers(response.data.allUsers);props.dispatch({type:'ThemeChange',payload:response.data.community.communityTheme});//Update the theme to match the community theme.\nprops.dispatch({type:'visitorPosts/updatePosts',payload:response.data.posts});//Update the posts to match what a visitor viewing these posts will see.\n//Now determine if the mainUser is in the blockList, and re-route to the previous page if they are. \nif(props.mainUser!==null){if(_.find(response.data.community.blockList,function(person){return person.uniqueUserId===props.mainUser.uniqueUserId;})){swal('Uh Oh!','You are blocked from this community!','error');history.goBack(1);}}}else{swal('Uh Oh!','We could not find that community!','error');history.goBack(1);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error finding that community! Please try again.','error');history.goBack(1);});}},[]);function publicJoin(){//Function that will enable a member to join a public community. \nvar data=JSON.stringify({username:props.mainUser.username,uniqueUserId:props.mainUser.uniqueUserId,name:community.name});return axios({method:'POST',url:'http://192.168.0.17:3001/api/public/join/community',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){if(response.data.result==='success'){swal('Great!','Successfully joined community!','success');setJoinSending(false);setCommunity(response.data.community);}else{swal('Uh Oh!','There was an error with joining this community! Please try again','error');setJoinSending(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error joining this community! Please try again','error');setJoinSending(false);});}function privateJoinRequest(){//This function will handle sending a join notification to the moderator. \nsetJoinSending(true);var data=JSON.stringify({uniqueUserId:props.mainUser.uniqueUserId,username:props.mainUser.username,moderatorUniqueUserId:community.moderator.uniqueUserId,name:community.name});return axios({method:'POST',url:'http://192.168.0.17:3001/api/community/join/request',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){if(response.data==='duplicate'){swal('Uh Oh!','You have already sent a request to join this community!','error');setJoinSending(false);}else{swal('Great!','Community join request sent!','success');setJoinSending(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error sending a request to join this community! Please try again.','error');setJoinSending(false);});}function sendTextPost(){return _sendTextPost.apply(this,arguments);}function _sendTextPost(){_sendTextPost=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var isValid,date,months,month,day,year,dateString,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://Function that will handle uploading a text post to the server. \nsetPosting(true);isValid=textFormRef.current.isFormValid();if(isValid){_context.next=8;break;}swal('Uh Oh!','Make sure the form is filled out properly','error');setPosting(false);return _context.abrupt(\"return\",false);case 8:date=new Date();months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'];month=months[date.getMonth()];day=date.getDate();year=date.getFullYear();dateString=\"\".concat(month,\" \").concat(day,\", \").concat(year);data=JSON.stringify({text:textPost,title:textPostTitle,uniqueUserId:props.mainUser.uniqueUserId,username:props.mainUser.username,community:community.name,type:'text',dateString:dateString,uniquePostId:Date.now()+props.mainUser.username+'textpost'+'info'+community.name,context:'community',privacy:community.communityPrivacy,link:postLink?postLink:'',textType:'link'});return _context.abrupt(\"return\",axios({method:'post',url:'http://192.168.0.17:3001/api/add/community/text/post',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){if(response.data.result==='success'){props.dispatch({type:'visitorPosts/updatePosts',payload:response.data.posts});swal('Great!','Successfully uploaded text post!','success');setTextPost('');setTextPostTitle('');setPosting(false);setPostDialog(false);}else{swal('Uh Oh!','There was an error sending that text post!','error');setPosting(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error sending that text post! Please try again.','error');setPosting(false);}));case 16:case\"end\":return _context.stop();}}},_callee);}));return _sendTextPost.apply(this,arguments);}function sendLinkPost(){//This function will handle sending a post with a link URL to the server.\nsetPosting(true);var isValid=linkFormRef.current.isFormValid();if(!regularExpressions.urlRegex.test(postLink)){swal('Uh Oh!','You must enter a valid URL to create a link post','error');setPosting(false);return false;}else if(textPostTitle===''){swal('Uh Oh!','You must enter a title for all link posts.','error');setPosting(false);return false;}else if(!isValid){swal('Uh Oh!','Make sure the form is filled out properly','error');setPosting(false);return false;}else{var date=new Date();var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'];var month=months[date.getMonth()];var day=date.getDate();var year=date.getFullYear();var dateString=\"\".concat(month,\" \").concat(day,\", \").concat(year);var data=JSON.stringify({text:'',title:textPostTitle,link:postLink,uniqueUserId:props.mainUser.uniqueUserId,username:props.mainUser.username,community:community.name,type:'link',dateString:dateString,uniquePostId:Date.now()+props.mainUser.username+'textpost'+'info'+community.name,context:'community',privacy:community.communityPrivacy});return axios({method:'post',url:'http://192.168.0.17:3001/api/add/community/text/post',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){if(response.data.result==='success'){props.dispatch({type:'visitorPosts/updatePosts',payload:response.data.posts});swal('Great!','Successfully uploaded link post!','success');setTextPost('');setTextPostTitle('');setPosting(false);setPostDialog(false);}else{swal('Uh Oh!','There was an error sending that link post!','error');setPosting(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error sending that link post! Please try again.','error');setPosting(false);});}}function resizerFunction(file){//This is a wrapper for the file resizer \nreturn new Promise(function(resolve){Resizer.imageFileResizer(file,600,600,'JPEG',100,0,function(uri){resolve(uri);},'blob');});}function handlePhotoChange(_x){return _handlePhotoChange.apply(this,arguments);}function _handlePhotoChange(){_handlePhotoChange=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var file,resizedPhoto;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0://This function will handle passing a photo that is uploaded to the resizer function to rersize the photo\nfile=e.target.files[0];_context2.next=3;return resizerFunction(file);case 3:resizedPhoto=_context2.sent;setUploadPhoto(resizedPhoto);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _handlePhotoChange.apply(this,arguments);}function handleAvatarChange(_x2){return _handleAvatarChange.apply(this,arguments);}function _handleAvatarChange(){_handleAvatarChange=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e){var file,resizedPhoto;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:file=e.target.files[0];_context3.next=3;return resizerFunction(file);case 3:resizedPhoto=_context3.sent;setAvatarEdit(resizedPhoto);case 5:case\"end\":return _context3.stop();}}},_callee3);}));return _handleAvatarChange.apply(this,arguments);}function handlePhotoUpload(){//Function that will handle sending an uploaded photo to the server after resizing it.\n//Might need to make some edits here since the photo will be community-based\nsetPhotoUploading(true);if(!uploadPhoto){swal('Uh Oh!','You must select a photo to upload!','error');setPhotoUploading(false);}else{var data=new Date();var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'];var month=months[data.getMonth()];var day=data.getDate();var year=data.getFullYear();var dateString=\"\".concat(month,\" \").concat(day,\", \").concat(year);var fd=new FormData();fd.append('photo',uploadPhoto,'photo.jpg');fd.append('caption',photoCaption);fd.append('uniqueUserId',props.mainUser.uniqueUserId);fd.append('uniquePostId',Date.now()+props.mainUser.username+'photoupload'+props.mainUser.uniqueUserId);fd.append('username',props.mainUser.username);fd.append('dateString',dateString);fd.append('type','photo');fd.append('context','community');fd.append('link',\"http://192.168.0.9:3000/profile#\".concat(Date.now()).concat(props.mainUser.username,\"photoupload\").concat(props.mainUser.uniqueUserId));fd.append('community',community.name);//Name of the community that this post belongs to. \nfd.append('title','');fd.append('privacy',community.communityPrivacy);fd.append('text','');return axios({method:'POST',url:'http://192.168.0.17:3001/api/upload/photo',data:fd,headers:{'Content-Type':'multipart/form-data'}}).then(function(response){if(response.data.posts){props.dispatch({type:'visitorPosts/updatePosts',payload:response.data.posts});swal('Great!','Successfully uploaded photo!','success');setPhotoCaption('');setUploadPhoto(null);setPostDialog(false);setPhotoUploading(false);}else{swal('Uh Oh!','There was an error uploading that photo!','error');setPhotoUploading(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error uploading that photo!','error');setPhotoUploading(false);});}}function handleVideoChange(e){//This function will handle setting the uploadVideo variable to the valua of the file. \nsetUploadVideo(e.target.files[0]);}function handleVideoUpload(){//Function that will handle sending an uploaded video to the server.\nsetVideoUploading(true);if(!uploadVideo){swal('Uh Oh!','You must select a video to upload!','error');setVideoUploading(false);}else{var data=new Date();var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'];var month=months[data.getMonth()];var day=data.getDate();var year=data.getFullYear();var dateString=\"\".concat(month,\" \").concat(day,\", \").concat(year);var ext=uploadVideo.name.split('.').pop().toString();//This will get the extension name of the video \next='video.'+ext;var fd=new FormData();fd.append('photo',uploadVideo,ext);//Keep the name \"photo\" for the server upload although it is technically a video!\nfd.append('caption',videoCaption);fd.append('uniqueUserId',props.mainUser.uniqueUserId);fd.append('uniquePostId',Date.now()+props.mainUser.username+'videoupload'+props.mainUser.uniqueUserId);fd.append('username',props.mainUser.username);fd.append('dateString',dateString);fd.append('type','video');fd.append('context','community');fd.append('link',\"http://192.168.0.9:3000/profile#\".concat(Date.now()).concat(props.mainUser.username,\"videoupload\").concat(props.mainUser.uniqueUserId));fd.append('community',community.name);fd.append('communityPost',true);fd.append('title','');fd.append('privacy',community.communityPrivacy);fd.append('text','');return axios({method:'POST',url:'http://192.168.0.17:3001/api/upload/photo',data:fd,headers:{'Content-Type':'multipart/form-data'}}).then(function(response){if(response.data.posts){props.dispatch({type:'visitorPosts/updatePosts',payload:response.data.posts});swal('Great!','Successfully uploaded video!','success');setVideoCaption('');setUploadVideo(null);setPostDialog(false);setVideoUploading(false);}else{swal('Uh Oh!','There was an error uploading that video!','error');setVideoUploading(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error uploading that video!','error');setVideoUploading(false);});}}function leaveCommunity(){//This function will remove a member from a community if they are within it. \nsetJoinSending(true);var data=JSON.stringify({username:props.mainUser.username,uniqueUserId:props.mainUser.uniqueUserId,name:community.name});return axios({method:'POST',url:'http://192.168.0.17:3001/api/leave/community',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){if(response.data.result==='success'){swal('Great!','You have successfully left this community','success');setCommunity(response.data.community);setJoinSending(false);}else{swal('Uh Oh!','There was an error leaving this community! Please try again.','error');setJoinSending(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error leaving this community! Please try again.','error');setJoinSending(false);});}function updateTitle(){//This function will call the server to update a community title. \nif(editTitleText.length<10){swal('Uh Oh!','The title of the community must be at least 10 characters long!','error');return false;}else if(editTitleText.length>75){swal('Uh Oh!','The community title cannot be more than 75 characters long','error');return false;}else{var data={community:community.name,title:editTitleText};return axios({method:'POST',url:'http://192.168.0.17:3001/api/update/community/title',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){setMakingEdit(false);setEditTitleText('');setCommunity(response.data.community);swal('Great!','Successfully udated community.','success');}).catch(function(err){console.log(err.message);setMakingEdit(false);swal('Uh Oh!','There was an error editing the community title','error');});}}function updateDescription(){//This function will handle updating a community description. \nsetMakingEdit(true);if(editDescriptionText.length<10){setMakingEdit(false);swal('Uh Oh!','The community description must be at least 10 characters long!','error');return false;}else if(editDescriptionText.length>300){setMakingEdit(false);swal('Uh Oh!','The community description can only be up to 300 characters long','error');return false;}else{var data={description:editDescriptionText,community:community.name};return axios({method:'POST',url:'http://192.168.0.17:3001/api/update/community/description',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){setCommunity(response.data.community);setMakingEdit(false);setEditDescriptionText('');swal('Great!','Successfully updated the community description!','success');}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error updating the community description!','error');setMakingEdit(false);});}}function updateAvatar(){//This function will handle updating the avatar for the user. \nsetMakingEdit(true);if(avatarEdit===null){swal('Uh Oh!','You must select a photo to update the community avatar!','error');setMakingEdit(false);return false;}else{var fd=new FormData();fd.append('community',community.name);fd.append('filename',community.avatar);fd.append('avatar',avatarEdit,'avataredit.jpg');return axios({method:'POST',url:'http://192.168.0.17:3001/api/update/community/avatar',data:fd,headers:{'Content-Type':'multipart/form-data'}}).then(function(response){swal('Great!','Successfully updated the community avatar photo!','success');setCommunity(response.data.community);setAvatarEdit(null);setMakingEdit(false);}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error updating the avatar for your community!','error');setMakingEdit(false);});}}function updateTheme(){//This function will handle updating the theme for a community. \nsetMakingEdit(true);var data={community:community.name,theme:themeEdit};return axios({method:'POST',url:'http://192.168.0.17:3001/api/update/community/theme',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){setCommunity(response.data.community);props.dispatch({type:'ThemeChange',payload:response.data.community.communityTheme});//Update the theme to match the community theme.\nswal('Great!','You successfully udated the community theme color!','success');setMakingEdit(false);}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error updating the community theme color!','error');setMakingEdit(false);});}function updatePrivacy(){setMakingEdit(true);var thisPrivacy;if(community.communityPrivacy==='public'){thisPrivacy='private';}else{thisPrivacy='public';}var data={communityPrivacy:thisPrivacy,community:community.name};return axios({method:'POST',url:'http://192.168.0.17:3001/api/update/community/privacy',data:JSON.stringify(data),headers:{'Content-Type':'application/json'}}).then(function(response){setCommunity(response.data.community);swal('Great!','You successfully updated the community privacy!','success');setMakingEdit(false);}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error updating the community privacy','error');setMakingEdit(false);});}function handleTopicsChange(e){//This function will add topics to the topics array. It will remove the topic if it is unchecked.\nif(e.target.checked){if(topics.length<=9){setTopics(function(topics){return[].concat(_toConsumableArray(topics),[e.target.value]);});}else{swal('Uh Oh!','You can only select up to 10 topics!','error');}}else if(!e.target.checked){setTopics(topics.filter(function(topic){return topic!==e.target.value;}));}}function updateTopics(){//This function will handle updating the topics within a community. \nsetMakingEdit(true);if(topics.length<1){swal('Uh Oh!','You must select at least one relevant topic for this community!','error');setMakingEdit(false);return false;}else{var data=JSON.stringify({topics:topics,community:community.name});return axios({method:'POST',url:'http://192.168.0.17:3001/api/update/community/topics',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){setCommunity(response.data.community);setTopics([]);swal('Great!','You successfully updated the topics for your community!','success');setMakingEdit(false);}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error updating the community topics!','error');setMakingEdit(false);});}}function blockUser(uniqueUserId,username){//This function will handle blocking a user.\nif(uniqueUserId===community.moderator.uniqueUserId){swal('Uh Oh','You cannot block yourself from a community you moderate!','error');return false;}else{var data=JSON.stringify({username:username,uniqueUserId:uniqueUserId,community:community.name});return axios({method:'POST',url:'http://192.168.0.17:3001/api/block/community/user',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){swal('Great!','You successfully blocked this user from your community','success');setCommunity(response.data.community);}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error blocking this user from the community!','error');});}}function unBlockUser(uniqueUserId,username){//This function will handle unblocking a user from the community. TODO: Disable Button while updating.\nsetMakingEdit(true);var data=JSON.stringify({uniqueUserId:uniqueUserId,username:username,community:community.name});return axios({method:'POST',url:'http://192.168.0.17:3001/api/unblock/community/user',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){swal('Great!','You successfully unblocked that user from your community!','success');setCommunity(response.data.community);setMakingEdit(false);}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error trying to unblock that user from your community!','error');setMakingEdit(false);});}function deleteRule(rule){//This function will be responsible for deleting a rule. \nsetMakingEdit(true);var data=JSON.stringify({rule:rule,community:community.name});return axios({method:'POST',url:'http://192.168.0.17:3001/api/delete/community/rule',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){swal('Great!','You successfully deleted that rule from your community!','success');setCommunity(response.data.community);setMakingEdit(false);}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error deleting that rule from the community!','error');setMakingEdit(false);});}function addRule(){//This function will handle adding a new rule to the community.\nsetMakingEdit(true);if(newRule.trim()===''){swal('Uh Oh!','You must enter a new rule!','error');setMakingEdit(false);return false;}else if(newRule.length>100){swal('Uh Oh!','The rule cannot be longer than 100 characters!','error');setMakingEdit(false);return false;}else if(newReason.trim()===''){swal('Uh Oh!','You must enter a reason for your rule!','error');setMakingEdit(false);return false;}else if(newReason.length>300){swal('Uh Oh!','The reason for your rule cannot be greater than 300 characters!','error');setMakingEdit(false);return false;}else{var data=JSON.stringify({rule:newRule,reason:newReason,community:community.name});return axios({method:'POST',url:'http://192.168.0.17:3001/api/add/community/rule',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){swal('Great!','You successfully added a new community rule!','success');setCommunity(response.data.community);setMakingEdit(false);setNewRule('');setNewReason('');}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error adding that new rule to the community!','error');setMakingEdit(false);});}}if(community!==null){var _jsx2,_jsx3;return/*#__PURE__*/_jsxs(Grid,{className:classes.root,container:true,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,className:classes.centerContent,children:[/*#__PURE__*/_jsx(Hidden,{smDown:true,children:/*#__PURE__*/_jsx(Avatar,{className:classes.avatarLg,src:\"http://192.168.0.17:3001/api/get-photo/\".concat(community.avatar),alt:\"\".concat(community.name,\" avatar\"),title:\"\".concat(community.name,\" avatar\"),variant:\"square\"})}),/*#__PURE__*/_jsx(Hidden,{mdUp:true,children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.17:3001/api/get-photo/\".concat(community.avatar),className:classes.avatarSm,title:\"\".concat(community.name,\" avatar\"),alt:\"\".concat(community.name,\" avatar\"),variant:\"square\"})})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.nameGrid,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:community.name})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.nameGrid,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",justify:\"left\",children:community.title})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,style:{margin:'auto',textAlign:'center',marginTop:20},children:[props.mainUser!==null&&!_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;})&&community.communityPrivacy==='public'&&community.moderator.uniqueUserId!==props.mainUser.uniqueUserId&&/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",onClick:publicJoin,disabled:joinSending,children:joinSending?/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}):'join'}),props.mainUser!==null&&!_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;})&&community.communityPrivacy==='private'&&community.moderator.uniqueUserId!==props.mainUser.uniqueUserid&&/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",onClick:privateJoinRequest,disabled:joinSending,children:joinSending?/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}):'join'}),props.mainUser!==null&&_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;})&&community.moderator.uniqueUserId!==props.mainUser.uniqueUserId&&/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"outlined\",onClick:leaveCommunity,disabled:joinSending,children:joinSending?/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}):'leave'}),props.mainUser===null&&/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:function onClick(e){return history.push('/');},children:\"Sign up or log in!\"}),props.mainUser===null&&community.communityPrivacy==='private'&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"This community is private\"})}),props.mainUser!==null&&!_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;})&&community.communityPrivacy==='private'&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"This community is private\"})}),props.mainUser!==null&&_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;})&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,style:{marginTop:20,marginBottom:20},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",style:{margin:'auto'},onClick:function onClick(e){return history.push(\"/community/chat/\".concat(community.name));},children:\"Chat\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"outlined\",onClick:function onClick(e){return setPostDialog(true);},children:\"Post\"})})]})]}),props.mainUser!==null&&_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;})&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Dialog,{open:postDialog,fullScreen:true,children:/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(AppBar,{color:\"primary\",hidden:posting,children:[/*#__PURE__*/_jsx(Icon,{path:mdiClose,size:1,title:\"Dialog close\",style:{cursor:'pointer'},onClick:function onClick(){return setPostDialog(false);}}),/*#__PURE__*/_jsxs(Tabs,{value:curTab,onChange:function onChange(e,newVal){return setTab(newVal);},centered:true,children:[/*#__PURE__*/_jsx(Tab,_objectSpread(_objectSpread({},a11yProps(0)),{},{label:\"Text\",disabled:posting})),/*#__PURE__*/_jsx(Tab,_objectSpread(_objectSpread({},a11yProps(1)),{},{label:\"Photo\",disabled:posting})),/*#__PURE__*/_jsx(Tab,_objectSpread(_objectSpread({},a11yProps(2)),{},{label:\"Video\",disabled:posting})),/*#__PURE__*/_jsx(Tab,_objectSpread(_objectSpread({},a11yProps(3)),{},{label:\"Link\",disabled:posting}))]})]}),/*#__PURE__*/_jsx(TabPanel,{index:0,value:curTab,children:/*#__PURE__*/_jsxs(ValidatorForm,{ref:textFormRef,onSubmit:function onSubmit(e){return e.preventDefault();},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",component:\"small\",color:textPostTitle.length>75?'error':'default',align:\"center\",children:[textPostTitle.length,\"/75\"]}),/*#__PURE__*/_jsx(TextValidator,{label:\"Post title\",placeholder:\"Enter a title for your post of 75 characters or less\",value:textPostTitle,onChange:function onChange(e){return setTextPostTitle(e.target.value);},helperText:\"Enter a title for this text post\",validators:['titleLength'],errorMessages:['Title can only be up to 75 characters'],InputLabelProps:{shrink:true},color:\"primary\",variant:\"outlined\",fullWidth:true}),/*#__PURE__*/_jsxs(Typography,{style:{marginTop:30},variant:\"body1\",component:\"small\",color:textPost.length>3000?'error':'default',align:\"center\",children:[textPost.length,\"/3000\"]}),/*#__PURE__*/_jsx(TextValidator,(_jsx2={label:\"Text post\",placeholder:\"Share a text post!\",value:textPost,onChange:function onChange(e){return setTextPost(e.target.value);},helperText:\"Enter a text post of up to 3,000 characters long!\",validators:['requiredText','textLength'],errorMessages:['Must enter some text!','Text post cannot be more than 3,000 characters long!'],variant:\"outlined\",InputLabelProps:{shrink:true},color:\"primary\"},_defineProperty(_jsx2,\"variant\",\"outlined\"),_defineProperty(_jsx2,\"rows\",3),_defineProperty(_jsx2,\"multiline\",true),_defineProperty(_jsx2,\"required\",true),_defineProperty(_jsx2,\"fullWidth\",true),_jsx2)),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:sendTextPost,disabled:posting,children:posting?/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}):'Upload'})]})}),/*#__PURE__*/_jsxs(TabPanel,{index:1,value:curTab,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",children:\"Post a photo\"}),/*#__PURE__*/_jsxs(\"label\",{\"html-for\":\"photoPost\",children:[/*#__PURE__*/_jsx(\"input\",{className:classes.input,type:\"file\",accept:\"image/jpg, image/jpeg, image/png\",id:\"photoPost\",name:\"photoPost\",onChange:handlePhotoChange,required:true}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",component:\"span\",\"aria-label\":\"Photo picker button\",children:/*#__PURE__*/_jsx(Icon,{path:mdiCamera,size:1,title:\"Photo upload icon\",\"aria-label\":\"Photo upload icon\"})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(TextField,{label:\"Caption\",placeholder:\"Enter a caption for your photo\",variant:\"outlined\",color:\"primary\",value:photoCaption,onChange:function onChange(e){return setPhotoCaption(e.target.value);},InputLabelProps:{shrink:true},rows:4,multiline:true,required:true,style:{marginTop:40},fullWidth:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{style:{marginTop:30},color:\"primary\",variant:\"outlined\",onClick:handlePhotoUpload,disabled:photoUploading,children:photoUploading?/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}):'Upload Photo'})]}),/*#__PURE__*/_jsxs(TabPanel,{index:2,value:curTab,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",children:\"Post a video\"}),/*#__PURE__*/_jsxs(\"label\",{\"html-for\":\"videoPost\",children:[/*#__PURE__*/_jsx(\"input\",{className:classes.input,type:\"file\",accept:\"video/mp4, video/mov\",id:\"videoPost\",name:\"videoPost\",onChange:handleVideoChange,required:true}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",component:\"span\",\"aria-label\":\"Video picker button\",children:/*#__PURE__*/_jsx(Icon,{path:mdiVideo,size:1,title:\"Video upload icon\",\"aria-label\":\"Video upload icon\"})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(TextField,{label:\"Caption\",placeholder:\"Enter a caption for your video\",variant:\"outlined\",color:\"primary\",value:videoCaption,onChange:function onChange(e){return setVideoCaption(e.target.value);},InputLabelProps:{shrink:true},rows:4,multiline:true,required:true,style:{marginTop:40},fullWidth:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{style:{marginTop:30},color:\"primary\",variant:\"outlined\",onClick:handleVideoUpload,disabled:videoUploading,children:videoUploading?/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}):'Upload Video'})]}),/*#__PURE__*/_jsx(TabPanel,{index:3,value:curTab,children:/*#__PURE__*/_jsxs(ValidatorForm,{ref:linkFormRef,onSubmit:function onSubmit(e){return e.preventDefault();},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",component:\"small\",color:textPostTitle.length>75?'error':'default',align:\"center\",children:[textPostTitle.length,\"/75\"]}),/*#__PURE__*/_jsx(TextValidator,{label:\"Post title\",placeholder:\"Enter a title for your post of 75 characters or less\",value:textPostTitle,onChange:function onChange(e){return setTextPostTitle(e.target.value);},helperText:\"Enter a title for this text post\",validators:['requiredText','titleLength'],errorMessages:['Must enter a title for all link posts','Title can only be up to 75 characters'],InputLabelProps:{shrink:true},color:\"primary\",variant:\"outlined\",fullWidth:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(TextValidator,(_jsx3={label:\"Link\",placeholder:\"Share a valid link!\",value:postLink,onChange:function onChange(e){return setPostLink(e.target.value);},helperText:\"Enter a valid url link.\",validators:['requiredText','validLink'],errorMessages:['Must enter a link!','The link that you enter must be formatted properly!'],variant:\"outlined\",InputLabelProps:{shrink:true},color:\"primary\"},_defineProperty(_jsx3,\"variant\",\"outlined\"),_defineProperty(_jsx3,\"required\",true),_defineProperty(_jsx3,\"fullWidth\",true),_jsx3)),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:sendLinkPost,disabled:posting,children:posting?/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}):'Upload'})]})})]})})}),(community.communityPrivacy==='public'||props.mainUser!==null&&_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;}))&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Paper,{className:classes.paper,style:{marginTop:10},children:/*#__PURE__*/_jsxs(Tabs,{value:curTab2,onChange:function onChange(e,newVal){return setTab2(newVal);},centered:true,style:{color:'rgb(255, 255, 255)'},children:[/*#__PURE__*/_jsx(Tab,_objectSpread({label:\"Posts\"},a11yProps(0))),/*#__PURE__*/_jsx(Tab,_objectSpread({label:\"About\"},a11yProps(1))),props.mainUser!==null&&community.moderator.uniqueUserId===props.mainUser.uniqueUserId&&/*#__PURE__*/_jsx(Tab,_objectSpread({label:\"Settings\"},a11yProps(2)))]})}),/*#__PURE__*/_jsxs(TabPanel,{value:0,index:curTab2,children:[props.posts.length<1&&/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"No posts\"}),props.posts.length>0&&/*#__PURE__*/_jsx(\"div\",{children:props.posts.map(function(post,index){return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'left'},children:[props.mainUser!==null&&/*#__PURE__*/_jsx(CommunityPostsCard,{post:post,id:post.uniquePostId,moderator:props.mainUser.uniqueUserId===community.moderator.uniqueUserId}),props.mainUser===null&&/*#__PURE__*/_jsx(NonUserCommunityPostsCard,{post:post,id:post.uniquePostId}),index<props.posts.length-1&&/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:20}})]},index);})})]}),/*#__PURE__*/_jsx(TabPanel,{value:1,index:curTab2,children:/*#__PURE__*/_jsxs(\"div\",{style:{margin:'auto',maxWidth:600,textAlign:'center'},children:[/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{style:{cursor:'pointer'},onClick:function onClick(e){return history.push(\"/geouser/\".concat(community.moderator.uniqueUserId));},alignItems:\"flex-start\",children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.17:3001/api/get/avatar/by/id/\".concat(community.moderator.uniqueUserId),title:\"\".concat(community.moderator.username),alt:\"\".concat(community.moderator.username),style:{cursor:'pointer'}})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",children:\"Moderator\"}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",component:\"span\",color:\"textSecondary\",children:community.moderator.username})]})})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"Description\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",children:community.description})]})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",component:\"p\",align:\"center\",children:[community.members.length,\" members\"]})})})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"Topics\"}),/*#__PURE__*/_jsx(List,{children:community.topics.map(function(topic,index){return/*#__PURE__*/_jsx(ListItem,{alignItems:\"flexStart\",children:/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",align:\"center\",children:topic})})})},index.toString());})})]}),community.rules.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"Rules\"}),community.rules.map(function(item,index){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Accordion,{style:{marginBottom:index<community.rules.length-1?20:0},children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ChevronDownIcon,{}),children:item.rule}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",children:item.reason})})]})},index);})]})]})}),/*#__PURE__*/_jsxs(TabPanel,{value:2,index:curTab2,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h4\",align:\"center\",children:\"Settings\"})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",component:\"small\",color:editTitleText.length<10||editTitleText.length>75?'error':'default',align:\"center\",children:[editTitleText.length,\"/75\"]}),/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",color:\"primary\",label:\"Community title\",helperText:\"Change the community title. Must be between 10 and 75 characters long\",placeholder:community.title,value:editTitleText,onChange:function onChange(e){return setEditTitleText(e.target.value);},InputLabelProps:{shrink:true},fullWidth:true}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:updateTitle,disabled:makingEdit,children:makingEdit?/*#__PURE__*/_jsx(CircularProgress,{}):'Update title'})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:30},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",component:\"small\",color:editDescriptionText.length<10||editDescriptionText.length>300?'error':'default',align:\"center\",children:[editDescriptionText.length,\"/300\"]}),/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",color:\"primary\",label:\"Community descriptiom\",helperText:\"Change the community description. Must be between 10 and 300 characters long\",placeholder:community.description,value:editDescriptionText,onChange:function onChange(e){return setEditDescriptionText(e.target.value);},InputLabelProps:{shrink:true},rows:3,multiline:true,fullWidth:true}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:updateDescription,disabled:makingEdit,children:makingEdit?/*#__PURE__*/_jsx(CircularProgress,{}):'Update title'})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:40},children:[/*#__PURE__*/_jsx(Typography,{className:classes.topMarg,variant:\"body1\",component:\"p\",children:\"Update community avatar photo!\"}),/*#__PURE__*/_jsxs(\"label\",{className:classes.topMarg,\"html-for\":\"avatar\",style:{margin:'auto'},children:[/*#__PURE__*/_jsx(\"input\",{className:classes.input,id:\"avatar\",name:\"avatar \",type:\"file\",accept:\"image/jpeg, image/jpg, image/png\",onChange:handleAvatarChange,required:true}),/*#__PURE__*/_jsx(Button,{component:\"span\",color:\"primary\",variant:\"contained\",children:/*#__PURE__*/_jsx(CameraIcon,{})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",style:{marginTop:15},onClick:updateAvatar,disabled:makingEdit,children:makingEdit?/*#__PURE__*/_jsx(CircularProgress,{}):'Update Avatar'})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:40},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",component:\"small\",children:[\"Select a theme color for this community \",themeEdit,\"!\"]}),/*#__PURE__*/_jsx(SwatchesPicker,{color:themeEdit,onChange:function onChange(color){return setThemeEdit(color.hex);},colors:[['#00143C','#2471A3','#3498DB'],['#641E16','#C0392B','#E74C3C'],['#0E6655','#45B39D','#58D68D'],['#5B2C6F','#8E44AD','#C39BD3'],['#BA4A00','#DC7633','#E67E22'],['#000000','#34495E','#7F8C8D']]}),/*#__PURE__*/_jsx(Button,{style:{marginTop:20},variant:\"contained\",color:\"primary\",disabled:makingEdit,onClick:updateTheme,children:makingEdit?/*#__PURE__*/_jsx(CircularProgress,{}):'Update Community Theme'})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:40},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",disabled:makingEdit,onClick:updatePrivacy,children:community.communityPrivacy==='public'?'Make community private':'Make community public'})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:40},children:[/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",children:[/*#__PURE__*/_jsx(FormLabel,{component:\"legend\",children:\"Select at least 1 community topic. You can choose up to 10 (required)\"}),/*#__PURE__*/_jsx(FormGroup,{column:true,children:communityTopics.map(function(topic,index){return/*#__PURE__*/_jsx(FormControlLabel,{value:topic,onChange:handleTopicsChange,label:topic,labelPlacement:\"end\",control:/*#__PURE__*/_jsx(Checkbox,{color:\"primary\",checked:topics.includes(topic)})},index.toString());})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{style:{marginTop:20},variant:\"contained\",color:\"primary\",onClick:updateTopics,disabled:makingEdit,children:makingEdit?/*#__PURE__*/_jsx(CircularProgress,{}):'Update community topics'})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:40},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"Block User\"}),/*#__PURE__*/_jsx(Autocomplete,{value:selectedUser,filterOptions:userFilterOptions,options:allUsers,getOptionLabel:function getOptionLabel(option){return option.firstName+' '+option.lastName;},renderOption:function renderOption(option){return/*#__PURE__*/_jsxs(ListItem,{alignItems:\"flex-start\",onClick:function onClick(){return blockUser(option.uniqueUserId,option.username);},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.17:3001/api/get-photo/\".concat(option.avatar),alt:\"\".concat(option.username),title:\"\".concat(option.username)})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",children:option.username}),secondary:/*#__PURE__*/_jsxs(Typography,{component:\"small\",color:\"textSecondary\",children:[option.firstName,\" \",option.lastName]})})]});},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{color:\"primary\",variant:\"outlined\",label:\"Block user\",placeholder:\"Search users\",helperText:\"Search for a GeoCities user to block\",InputLabelProps:{shrink:true},fullWidth:true,required:true}));}})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:40},children:community.blockList.length>0&&/*#__PURE__*/_jsx(List,{children:community.blockList.map(function(user,index){return/*#__PURE__*/_jsxs(ListItem,{alignItems:\"flexStart\",children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.17:3001/api/get/avatar/by/id/\".concat(user.uniqueUserId),title:\"\".concat(user.username),alt:\"\".concat(user.username)})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(e){return unBlockUser(user.uniqueUserId,user.username);},disabled:makingEdit,children:makingEdit?/*#__PURE__*/_jsx(CircularProgress,{}):'Unblock user'})]},index);})})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:40},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"Delete rules\"}),community.rules.length>0&&/*#__PURE__*/_jsx(List,{children:community.rules.map(function(item,index){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(ListItem,{alignItems:\"flex-start\",style:{marginBottom:index<community.rules.length-1?15:0},children:[/*#__PURE__*/_jsx(ListItemText,{secondary:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",color:\"textSecondary\",component:\"span\",children:item.rule})}),/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:function onClick(e){return deleteRule(item.rule);},disabled:makingEdit,children:\"delete rule\"})]},index)});})})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:40},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"Create new rule\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:20},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",component:\"small\",color:newRule.length>100?'error':'default',align:\"center\",children:[newRule.length,\"/100\"]}),/*#__PURE__*/_jsx(TextField,{value:newRule,onChange:function onChange(e){return setNewRule(e.target.value);},label:\"Add new rule\",placeholder:\"Add a new rule for the community\",helperText:\"New rule can be a max of 100-characters\",color:\"primary\",variant:\"outlined\",InputLabelProps:{shrink:true},fullWidth:true}),/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",component:\"small\",color:newReason.length>300?'error':'default',align:\"center\",style:{marginTop:35},children:[newReason.length,\"/300\"]}),/*#__PURE__*/_jsx(TextField,{value:newReason,onChange:function onChange(e){return setNewReason(e.target.value);},label:\"Add a reason for the rule\",placeholder:\"You must enter a reason for this rule\",helperText:\"The reason can be up to 300 characters long\",color:\"primary\",variant:\"outlined\",InputLabelProps:{shrink:true},multiline:true,row:4,fullWidth:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{style:{marginTop:20},color:\"primary\",variant:\"contained\",disabled:makingEdit,onClick:addRule,children:makingEdit?/*#__PURE__*/_jsx(CircularProgress,{}):'Add rule'})]})]})]})]})]});}else{//If the community is null, simply return a Backdrop with a CircularProgress inside \nreturn/*#__PURE__*/_jsx(Backdrop,{open:true,children:/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"})});}}function mapStateToProps(state){return{mainUser:state.userReducer.user,primary:state.userThemeReducer.primary,posts:state.visitorPostsReducer.posts};}export default connect(mapStateToProps)(Community);","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/Community.js"],"names":["React","useState","useEffect","useRef","Grid","Typography","Paper","Tabs","Tab","Avatar","Backdrop","CircularProgress","List","ListItem","ListItemText","ListItemAvatar","Divider","Button","axios","swal","Dialog","DialogContent","AppBar","Toolbar","Hidden","_","connect","useHistory","useParams","makeStyles","IconButton","Icon","mdiClose","mdiCamera","mdiVideo","ValidatorForm","TextValidator","CommunityPostsCard","NonUserCommunityPostsCard","Resizer","TextField","Accordion","AccordionSummary","AccordionDetails","ChevronDownIcon","CameraIcon","SwatchesPicker","Checkbox","FormControl","FormLabel","FormControlLabel","FormGroup","Autocomplete","createFilterOptions","TabPanel","props","children","value","index","other","marginTop","textAlign","a11yProps","id","communityTopics","userFilterOptions","matchFrom","stringify","option","firstName","lastName","username","Community","community","setCommunity","useStyles","root","centerContent","margin","nameGrid","avatarLg","height","width","avatarSm","paper","backgroundColor","communityTheme","closeIcon","color","input","display","classes","history","params","textFormRef","linkFormRef","joinSending","setJoinSending","postDialog","setPostDialog","curTab","setTab","curTab2","setTab2","textPost","setTextPost","textPostTitle","setTextPostTitle","photoPost","setPhotoPost","photoPostTitle","setPhotoPostTitle","videoPost","setVideoPost","videoPostTitle","setVideoPostTitle","linkPost","setLinkPost","linkPostTitle","setLinkPostTitle","posting","setPosting","uploadPhoto","setUploadPhoto","photoCaption","setPhotoCaption","photoUploading","setPhotoUploading","uploadVideo","setUploadVideo","videoUploading","setVideoUploading","videoCaption","setVideoCaption","postLink","setPostLink","editTitleText","setEditTitleText","editDescriptionText","setEditDescriptionText","avatarEdit","setAvatarEdit","themeEdit","setThemeEdit","topics","setTopics","makingEdit","setMakingEdit","allUsers","setAllUsers","selectedUser","setSelectedUser","newRule","setNewRule","newReason","setNewReason","regularExpressions","urlRegex","addValidationRule","v","length","trim","test","method","url","communityName","then","response","data","dispatch","type","payload","posts","mainUser","find","blockList","person","uniqueUserId","goBack","catch","err","console","log","message","publicJoin","JSON","name","headers","result","privateJoinRequest","moderatorUniqueUserId","moderator","sendTextPost","isValid","current","isFormValid","date","Date","months","month","getMonth","day","getDate","year","getFullYear","dateString","text","title","uniquePostId","now","context","privacy","communityPrivacy","link","textType","sendLinkPost","resizerFunction","file","Promise","resolve","imageFileResizer","uri","handlePhotoChange","e","target","files","resizedPhoto","handleAvatarChange","handlePhotoUpload","fd","FormData","append","handleVideoChange","handleVideoUpload","ext","split","pop","toString","leaveCommunity","updateTitle","updateDescription","description","updateAvatar","avatar","updateTheme","theme","updatePrivacy","thisPrivacy","handleTopicsChange","checked","filter","topic","updateTopics","blockUser","unBlockUser","deleteRule","rule","addRule","reason","members","member","uniqueUserid","push","marginBottom","cursor","newVal","preventDefault","shrink","map","post","maxWidth","rules","item","topMarg","hex","includes","user","mapStateToProps","state","userReducer","primary","userThemeReducer","visitorPostsReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Avatar from '@material-ui/core/Avatar';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Hidden from '@material-ui/core/Hidden';\nimport * as _ from 'underscore';\nimport { connect } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom'; \nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiClose, mdiCamera, mdiVideo } from '@mdi/js';\nimport PropTypes from 'prop-types';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport CommunityPostsCard from './CommunityPostsCard';\nimport NonUserCommunityPostsCard from './NonUserCommunityPostsCard';\nimport Resizer from 'react-image-file-resizer';\nimport TextField from '@material-ui/core/TextField';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ChevronDownIcon from '@material-ui/icons/ExpandMore';\nimport CameraIcon from '@material-ui/icons/CameraAlt';\nimport { SwatchesPicker } from 'react-color';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\n\n\nfunction TabPanel(props) {\n    //This component will serve as the panel for each individual tab.\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div \n            role='tabpanel'\n            hidden={index !== value} \n            id={`tabpanel-${index}`}\n            aria-label={`tab-${index}`}\n            aria-labelledby={`tab-${index}`}\n            {...other}\n            style={{\n                marginTop: 100,\n            }}\n        >\n            {value === index &&\n                <Grid \n                    item \n                    xs\n                    style={{\n                        textAlign: 'center',\n                    }}\n                >\n                    {children}\n                </Grid>\n            }\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    value: PropTypes.any.isRequired,\n    index: PropTypes.any.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `tab-${index}`,\n        'aria-controls': `tabpanel-${index}`,\n    };\n}\n\nconst communityTopics = [\n    'Accounting', 'Activism', 'Animals And Pets', 'Art', 'Astrology', 'Athletes', 'Aviation', 'Bars', 'Baseball', 'Beauty And Makeup', 'Biking', 'Black Lives Matter', 'Brands/Products', 'Business', 'Careers', 'Cars And Motor Vehicles', \n    'Celebrity', 'College Baseball', 'College Basketball', 'College Football', 'Computer Science', 'Crafts And DYI', 'Crossfit', 'Crypto', 'Culture Race And Ethnicity', 'Dancing', 'Day Trading', 'Documentaries','Economics',\n    'Education', 'Electronics', 'Entertainment', 'Ethics And Philosophy', 'Family And Relationships', 'Fashion', 'Filming', 'Fitness And Nutrition', 'Food And Drink', 'Funny/Humor',\n    'Gaming', 'Gender', 'GeoCities', 'Greek Life', 'Hair', 'Health', 'History', 'Hobbies', 'Hockey', 'Home And Garden', 'Investing', 'International Culture', 'Internet Culture', 'Intramural Sports', 'Latin Culture', 'Marijuna', 'Marketplace And Deals',\n    'Mature Themes And Adult Content', 'Medical And Mental Health', 'Meditation', \"Men's Health\", 'Military', 'Movies', 'Music', 'NBA', 'NFL', 'NHL', 'Nursing', 'Only Fans',\n    'Outdoors And Nature', 'Partying', 'People', 'Personal Connections', 'Photography', 'Podcasts And Streamers', 'Politics', 'Pop Culture', 'Programming', 'Public Policy', 'Reading Writing And Literature', \n    'Religion And Spirituality', 'Robinhood Trading', 'Rowing', 'Running', 'Science', 'Sexual Health And Orientation', 'Side Hustle', 'Sports', 'Soccer', 'Social Justice', 'Software Engineering', 'Streaming', 'Tabletop Games', 'Television', 'Television Personalities', 'Theatre', 'Track & Field', 'Volleyball',\n    \"Women's Health\", 'World News', 'Working Out/Gym', 'Work/Labor',\n];\n\nconst userFilterOptions = createFilterOptions({\n    matchFrom: 'any',\n    stringify: option => option.firstName + ' ' + option.lastName + ' ' + option.username,\n}); //Filter options to search for users to potentially block. \n\n\nfunction Community(props) {\n    const [community, setCommunity] = useState(null); //This variable and setter will manipulate community.\n    const useStyles = makeStyles(() => ({\n        root: {\n            marginTop: 100,\n        },\n        centerContent: {\n            margin: 'auto',\n            textAlign: 'center',\n        },\n        nameGrid: {\n            margin: 'auto',\n            textAlign: 'center',\n            marginTop: 20,\n        },\n        avatarLg: {\n            height: 168,\n            width: 168,\n            margin: 'auto',\n        },\n        avatarSm: {\n            height: 128,\n            width: 128,\n            margin: 'auto',\n        },\n        paper: {\n            backgroundColor: community !== null ? community.communityTheme : 'rgb(0, 20, 60)',\n        },\n        closeIcon: {\n            color: 'rgb(255, 255, 255)',\n        },\n        input: {\n            display: 'none',\n        },\n    }));\n    const classes = useStyles(); //Custom styles for the component. \n    const history = useHistory(); //Window history API.\n    const params = useParams(); //Access url parameters. \n    const textFormRef = useRef(null); //Ref for validator form when we upload posts.\n    const linkFormRef = useRef(null);\n    const [joinSending, setJoinSending] = useState(false); //Will disable the button while we send a join or request join to the server.\n    const [postDialog, setPostDialog] = useState(false); //Will open and close the dialog to make a post.\n    const [curTab, setTab] = useState(0); //Sets the current tab in post upload dialog. \n    const [curTab2, setTab2] = useState(0); //For the second tab that displays posts, about (and settings if the user is not null and the uniqueUserId matches the mainUser, for moderation)\n    const [textPost, setTextPost] = useState(''); //Value for text post. \n    const [textPostTitle, setTextPostTitle] = useState(''); //Value for title.\n    const [photoPost, setPhotoPost] = useState(null); //Value for photo upload. \n    const [photoPostTitle, setPhotoPostTitle] = useState(''); //Value for photo post title. \n    const [videoPost, setVideoPost] = useState(null); //Value for video post. \n    const [videoPostTitle, setVideoPostTitle] = useState(''); //Video post title. \n    const [linkPost, setLinkPost] = useState(''); //Value for the link in a link post. \n    const [linkPostTitle, setLinkPostTitle] = useState(''); //Value for link post title. \n    const [posting, setPosting] = useState(false); //Will handle disabling buttons and bars when a post is being sent to the server.\n    const [uploadPhoto, setUploadPhoto] = useState(null); //Will control any photo post photo that we upload to the server. \n    const [photoCaption, setPhotoCaption] = useState('');//Variable and setter for a caption for a photo upload. \n    const [photoUploading, setPhotoUploading] = useState(false); //Used to alter functionality when the photo post is being uploaded to the server. \n    const [uploadVideo, setUploadVideo] = useState(null); //Variable and setter for a video to be uploaded \n    const [videoUploading, setVideoUploading] = useState(null); //Variable and setter to disable button while video is uploading. \n    const [videoCaption, setVideoCaption] = useState(null); //Variable and setter for the caption for a video post. \n    const [postLink, setPostLink] = useState(''); //This variable will store the link post link. \n    const [editTitleText, setEditTitleText] = useState(''); //Variable and setter to change the community title in settings. \n    const [editDescriptionText, setEditDescriptionText] = useState(''); //Variable and setter to edit the community description text. \n    const [avatarEdit, setAvatarEdit] = useState(null); //Getter and setter that will alter an avatar when the moderator updaetes it. \n    const [themeEdit, setThemeEdit] = useState('#00143C'); //Variable and setter for the community theme.\n    const [topics, setTopics] = useState([]); //Community topics.\n    const [makingEdit, setMakingEdit] = useState(false); //Will disable buttons when we make an edit. \n    const [allUsers, setAllUsers] = useState([]); //Variable and setter for the users to search when we want to block one. \n    const [selectedUser, setSelectedUser] = useState(null); //Variable and setter for the user we choose to block\n    const [newRule, setNewRule] = useState(''); //This is the variable and setter when a user adds a new rule. \n    const [newReason, setNewReason] = useState(''); //Variable and setter for the new reason for a new rule. \n    const regularExpressions = {\n        urlRegex: /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i,\n    }; //This will store the regular expressions to make sure link posts have valid url's. \n\n\n    useEffect(() => {\n        //Add validation rules \n        ValidatorForm.addValidationRule('titleLength', v => {\n            if(v.length > 75) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n\n        //Rule for text or caption to be 3,000 characters or less. \n        ValidatorForm.addValidationRule('textLength', v => {\n            if(v.length > 3000) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n\n        //Validation rule to ensure textPost and linkPost are not empty. \n        ValidatorForm.addValidationRule('requiredText', v => {\n            if(v.trim() === '') {\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n\n        //Validation rule will ensure links are valid \n        ValidatorForm.addValidationRule('validLink', v => {\n            if(!regularExpressions.urlRegex.test(v)) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n\n        //First we need to fetch the community with axios. \n        if(true) {\n            return axios({\n                method: 'GET',\n                url: `http://192.168.0.17:3001/api/fetch/community/${params.communityName}`,\n            }).then(response => {\n                if(response.data.community) {\n                    setCommunity(response.data.community);\n                    //Set allUsers \n                    setAllUsers(response.data.allUsers);\n                    props.dispatch({type: 'ThemeChange', payload: response.data.community.communityTheme}); //Update the theme to match the community theme.\n                    props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts}); //Update the posts to match what a visitor viewing these posts will see.\n                    //Now determine if the mainUser is in the blockList, and re-route to the previous page if they are. \n                    if(props.mainUser !== null) {\n                        if(_.find(response.data.community.blockList, person => person.uniqueUserId === props.mainUser.uniqueUserId)) {\n                            swal(\n                                'Uh Oh!',\n                                'You are blocked from this community!',\n                                'error',\n                            );\n                            history.goBack(1);\n                        }\n                    }\n                }\n                else {\n                    swal(\n                        'Uh Oh!',\n                        'We could not find that community!',\n                        'error',\n                    );\n                    history.goBack(1);\n                }\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error finding that community! Please try again.',\n                    'error',\n                );\n                history.goBack(1);\n            });\n        }\n    }, []);\n\n    function publicJoin() {\n        //Function that will enable a member to join a public community. \n        let data = JSON.stringify({\n            username: props.mainUser.username,\n            uniqueUserId: props.mainUser.uniqueUserId,\n            name: community.name,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'http://192.168.0.17:3001/api/public/join/community',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            if(response.data.result === 'success') {\n                swal(\n                    'Great!',\n                    'Successfully joined community!',\n                    'success',\n                );\n                setJoinSending(false);\n                setCommunity(response.data.community);\n            }\n            else {\n                swal(\n                    'Uh Oh!',\n                    'There was an error with joining this community! Please try again',\n                    'error',\n                );\n                setJoinSending(false);\n            }\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error joining this community! Please try again',\n                'error',\n            );\n            setJoinSending(false);\n        });\n    }\n\n    function privateJoinRequest() {\n        //This function will handle sending a join notification to the moderator. \n        setJoinSending(true);\n        let data = JSON.stringify({\n            uniqueUserId: props.mainUser.uniqueUserId,\n            username: props.mainUser.username,\n            moderatorUniqueUserId: community.moderator.uniqueUserId,\n            name: community.name,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'http://192.168.0.17:3001/api/community/join/request',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            if(response.data === 'duplicate') {\n                swal(\n                    'Uh Oh!',\n                    'You have already sent a request to join this community!',\n                    'error',\n                );\n                setJoinSending(false);\n            }\n            else {\n                swal(\n                    'Great!',\n                    'Community join request sent!',\n                    'success',\n                );\n                setJoinSending(false);\n            }\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error sending a request to join this community! Please try again.',\n                'error',\n            );\n            setJoinSending(false);\n        });\n    }\n\n    async function sendTextPost() {\n        //Function that will handle uploading a text post to the server. \n        setPosting(true); \n        let isValid = textFormRef.current.isFormValid();\n        if(!isValid) {\n            swal(\n                'Uh Oh!',\n                'Make sure the form is filled out properly',\n                'error',\n            );\n            setPosting(false);\n            return false;\n        }\n        else {\n            let date = new Date();\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n            let month = months[date.getMonth()];\n            let day = date.getDate();\n            let year = date.getFullYear();\n            let dateString = `${month} ${day}, ${year}`;\n            let data = JSON.stringify({\n                text: textPost,\n                title: textPostTitle,\n                uniqueUserId: props.mainUser.uniqueUserId,\n                username: props.mainUser.username,\n                community: community.name,\n                type: 'text',\n                dateString: dateString,\n                uniquePostId: Date.now() + props.mainUser.username + 'textpost' + 'info' + community.name,\n                context: 'community',\n                privacy: community.communityPrivacy,\n                link: postLink ? postLink : '',\n                textType: 'link',\n            });\n\n            return axios({\n                method: 'post',\n                url: 'http://192.168.0.17:3001/api/add/community/text/post',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                if(response.data.result === 'success') {\n                    props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\n                    swal(\n                        'Great!',\n                        'Successfully uploaded text post!',\n                        'success',\n                    );\n                    setTextPost('');\n                    setTextPostTitle('');\n                    setPosting(false);\n                    setPostDialog(false);\n                }\n                else {\n                    swal(\n                        'Uh Oh!',\n                        'There was an error sending that text post!',\n                        'error',\n                    );\n                    setPosting(false);\n                }\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error sending that text post! Please try again.',\n                    'error',\n                );\n                setPosting(false);\n            });\n        }\n    }\n\n    function sendLinkPost() {\n        //This function will handle sending a post with a link URL to the server.\n        setPosting(true); \n        let isValid = linkFormRef.current.isFormValid();\n\n        if(!regularExpressions.urlRegex.test(postLink)) {\n            swal(\n                'Uh Oh!',\n                'You must enter a valid URL to create a link post',\n                'error',\n            ); \n            setPosting(false);\n            return false;\n        }\n\n        else if(textPostTitle === '') {\n            swal(\n                'Uh Oh!',\n                'You must enter a title for all link posts.',\n                'error',\n            );\n            setPosting(false);\n            return false;\n        }\n\n        else if(!isValid) {\n            swal(\n                'Uh Oh!',\n                'Make sure the form is filled out properly',\n                'error',\n            );\n            setPosting(false);\n            return false;\n        }\n        else {\n            let date = new Date();\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n            let month = months[date.getMonth()];\n            let day = date.getDate();\n            let year = date.getFullYear();\n            let dateString = `${month} ${day}, ${year}`;\n            let data = JSON.stringify({\n                text: '',\n                title: textPostTitle,\n                link: postLink,\n                uniqueUserId: props.mainUser.uniqueUserId,\n                username: props.mainUser.username,\n                community: community.name,\n                type: 'link',\n                dateString: dateString,\n                uniquePostId: Date.now() + props.mainUser.username + 'textpost' + 'info' + community.name,\n                context: 'community',\n                privacy: community.communityPrivacy,\n            });\n\n            return axios({\n                method: 'post',\n                url: 'http://192.168.0.17:3001/api/add/community/text/post',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                if(response.data.result === 'success') {\n                    props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\n                    swal(\n                        'Great!',\n                        'Successfully uploaded link post!',\n                        'success',\n                    );\n                    setTextPost('');\n                    setTextPostTitle('');\n                    setPosting(false);\n                    setPostDialog(false);\n                }\n                else {\n                    swal(\n                        'Uh Oh!',\n                        'There was an error sending that link post!',\n                        'error',\n                    );\n                    setPosting(false);\n                }\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error sending that link post! Please try again.',\n                    'error',\n                );\n                setPosting(false);\n            });\n        }\n    }\n\n    function resizerFunction(file) {\n        //This is a wrapper for the file resizer \n        return new Promise(resolve => {\n            Resizer.imageFileResizer(\n                file,\n                600,\n                600,\n                'JPEG',\n                100,\n                0,\n                uri => {\n                    resolve(uri);\n                },\n                'blob',\n            );\n        });\n    }\n\n    async function handlePhotoChange(e) {\n        //This function will handle passing a photo that is uploaded to the resizer function to rersize the photo\n        let file = e.target.files[0];\n        let resizedPhoto = await resizerFunction(file);\n        setUploadPhoto(resizedPhoto);\n    }\n\n    async function handleAvatarChange(e) {\n        let file = e.target.files[0];\n        let resizedPhoto = await resizerFunction(file);\n        setAvatarEdit(resizedPhoto);\n    }\n\n    function handlePhotoUpload() {\n        //Function that will handle sending an uploaded photo to the server after resizing it.\n        //Might need to make some edits here since the photo will be community-based\n        setPhotoUploading(true);\n\n        if(!uploadPhoto) {\n            swal(\n                'Uh Oh!',\n                'You must select a photo to upload!',\n                'error',\n            );\n            setPhotoUploading(false);\n        }\n        else {\n            let data = new Date();\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n            let month = months[data.getMonth()];\n            let day = data.getDate();\n            let year = data.getFullYear();\n            let dateString = `${month} ${day}, ${year}`;\n            let fd = new FormData();\n            fd.append('photo', uploadPhoto, 'photo.jpg');\n            fd.append('caption', photoCaption);\n            fd.append('uniqueUserId', props.mainUser.uniqueUserId);\n            fd.append('uniquePostId', Date.now() + props.mainUser.username + 'photoupload' + props.mainUser.uniqueUserId);\n            fd.append('username', props.mainUser.username);\n            fd.append('dateString', dateString);\n            fd.append('type', 'photo');\n            fd.append('context', 'community');\n            fd.append('link', `http://192.168.0.9:3000/profile#${Date.now()}${props.mainUser.username}photoupload${props.mainUser.uniqueUserId}`);\n            fd.append('community', community.name); //Name of the community that this post belongs to. \n            fd.append('title', '');\n            fd.append('privacy', community.communityPrivacy);\n            fd.append('text', '');\n\n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/upload/photo',\n                data: fd,\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            }).then(response => {\n                if(response.data.posts) {\n                    props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\n                    swal(\n                        'Great!',\n                        'Successfully uploaded photo!',\n                        'success',\n                    );\n                    setPhotoCaption('');\n                    setUploadPhoto(null);\n                    setPostDialog(false);\n                    setPhotoUploading(false);\n                }\n                else {\n                    swal(\n                        'Uh Oh!',\n                        'There was an error uploading that photo!',\n                        'error',\n                    );\n                    setPhotoUploading(false);\n                }\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error uploading that photo!',\n                    'error',\n                );\n                setPhotoUploading(false);\n            });\n        }\n    }\n\n    function handleVideoChange(e) {\n        //This function will handle setting the uploadVideo variable to the valua of the file. \n        setUploadVideo(e.target.files[0]);\n    }\n\n    function handleVideoUpload() {\n        //Function that will handle sending an uploaded video to the server.\n        setVideoUploading(true);\n\n        if(!uploadVideo) {\n            swal(\n                'Uh Oh!',\n                'You must select a video to upload!',\n                'error',\n            );\n            setVideoUploading(false);\n        }\n        else {\n            let data = new Date();\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n            let month = months[data.getMonth()];\n            let day = data.getDate();\n            let year = data.getFullYear();\n            let dateString = `${month} ${day}, ${year}`;\n            let ext = uploadVideo.name.split('.').pop().toString(); //This will get the extension name of the video \n            ext = 'video.' + ext;\n            let fd = new FormData();\n            fd.append('photo', uploadVideo, ext); //Keep the name \"photo\" for the server upload although it is technically a video!\n            fd.append('caption', videoCaption);\n            fd.append('uniqueUserId', props.mainUser.uniqueUserId);\n            fd.append('uniquePostId', Date.now() + props.mainUser.username + 'videoupload' + props.mainUser.uniqueUserId);\n            fd.append('username', props.mainUser.username);\n            fd.append('dateString', dateString);\n            fd.append('type', 'video');\n            fd.append('context', 'community');\n            fd.append('link', `http://192.168.0.9:3000/profile#${Date.now()}${props.mainUser.username}videoupload${props.mainUser.uniqueUserId}`);\n            fd.append('community', community.name);\n            fd.append('communityPost', true);\n            fd.append('title', '');\n            fd.append('privacy', community.communityPrivacy);\n            fd.append('text', '');\n\n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/upload/photo',\n                data: fd,\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            }).then(response => {\n                if(response.data.posts) {\n                    props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\n                    swal(\n                        'Great!',\n                        'Successfully uploaded video!',\n                        'success',\n                    );\n                    setVideoCaption('');\n                    setUploadVideo(null);\n                    setPostDialog(false);\n                    setVideoUploading(false);\n                }\n                else {\n                    swal(\n                        'Uh Oh!',\n                        'There was an error uploading that video!',\n                        'error',\n                    );\n                    setVideoUploading(false);\n                }\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error uploading that video!',\n                    'error',\n                );\n                setVideoUploading(false);\n            });\n        }\n    }\n\n    function leaveCommunity() {\n        //This function will remove a member from a community if they are within it. \n        setJoinSending(true);\n        let data = JSON.stringify({\n            username: props.mainUser.username,\n            uniqueUserId: props.mainUser.uniqueUserId,\n            name: community.name,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'http://192.168.0.17:3001/api/leave/community',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            if(response.data.result === 'success') {\n                swal(\n                    'Great!',\n                    'You have successfully left this community',\n                    'success',\n                );\n                setCommunity(response.data.community);\n                setJoinSending(false);\n            }\n            else {\n                swal(\n                    'Uh Oh!',\n                    'There was an error leaving this community! Please try again.',\n                    'error',\n                );\n                setJoinSending(false);\n            }\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error leaving this community! Please try again.',\n                'error',\n            );\n            setJoinSending(false);\n        });\n    }\n\n    function updateTitle() {\n        //This function will call the server to update a community title. \n        if(editTitleText.length < 10) {\n            swal(\n                'Uh Oh!',\n                'The title of the community must be at least 10 characters long!',\n                'error',\n            );\n            return false;\n        }\n        else if(editTitleText.length > 75) {\n            swal(\n                'Uh Oh!',\n                'The community title cannot be more than 75 characters long',\n                'error',\n            );\n            return false;\n        }\n        else {\n            let data = {\n                community: community.name,\n                title: editTitleText,\n            };\n\n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/update/community/title',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                setMakingEdit(false);\n                setEditTitleText('');\n                setCommunity(response.data.community);\n                swal(\n                    'Great!',\n                    'Successfully udated community.',\n                    'success',\n                );\n            }).catch(err => {\n                console.log(err.message);\n                setMakingEdit(false);\n                swal(\n                    'Uh Oh!',\n                    'There was an error editing the community title',\n                    'error',\n                );\n            });\n        }\n    }\n\n    function updateDescription() {\n        //This function will handle updating a community description. \n        setMakingEdit(true);\n        \n        if(editDescriptionText.length < 10) {\n            setMakingEdit(false);\n            swal(\n                'Uh Oh!',\n                'The community description must be at least 10 characters long!',\n                'error',\n            ); \n            return false;\n        }\n        else if(editDescriptionText.length > 300) {\n            setMakingEdit(false);\n            swal(\n                'Uh Oh!',\n                'The community description can only be up to 300 characters long',\n                'error',\n            );\n            return false;\n        }\n        else {\n            let data = {\n                description: editDescriptionText,\n                community: community.name,\n            }\n\n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/update/community/description',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                setCommunity(response.data.community);\n                setMakingEdit(false);\n                setEditDescriptionText('');\n                swal(\n                    'Great!',\n                    'Successfully updated the community description!',\n                    'success',\n                );\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error updating the community description!',\n                    'error',\n                );\n                setMakingEdit(false);\n            });\n        }\n    }\n\n    function updateAvatar() {\n        //This function will handle updating the avatar for the user. \n        setMakingEdit(true);\n\n        if(avatarEdit === null) {\n            swal(\n                'Uh Oh!',\n                'You must select a photo to update the community avatar!',\n                'error',\n            );\n            setMakingEdit(false);\n            return false;\n        }\n        else {\n            let fd = new FormData();\n            fd.append('community', community.name);\n            fd.append('filename', community.avatar);\n            fd.append('avatar', avatarEdit, 'avataredit.jpg');\n\n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/update/community/avatar',\n                data: fd,\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            }).then(response => {\n                swal(\n                    'Great!',\n                    'Successfully updated the community avatar photo!',\n                    'success',\n                );\n                setCommunity(response.data.community);\n                setAvatarEdit(null);\n                setMakingEdit(false);\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error updating the avatar for your community!',\n                    'error',\n                );\n                setMakingEdit(false);\n            });\n        }\n    }\n\n    function updateTheme() {\n        //This function will handle updating the theme for a community. \n        setMakingEdit(true);\n\n        let data = {\n            community: community.name,\n            theme: themeEdit,\n        };\n\n        return axios({\n            method: 'POST',\n            url: 'http://192.168.0.17:3001/api/update/community/theme',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            setCommunity(response.data.community);\n            props.dispatch({type: 'ThemeChange', payload: response.data.community.communityTheme}); //Update the theme to match the community theme.\n            swal(\n                'Great!',\n                'You successfully udated the community theme color!',\n                'success',\n            );\n            setMakingEdit(false);\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error updating the community theme color!',\n                'error',\n            );\n            setMakingEdit(false);\n        });\n    }\n\n    function updatePrivacy() {\n        setMakingEdit(true);\n        \n        let thisPrivacy;\n        \n        if(community.communityPrivacy === 'public') {\n            thisPrivacy = 'private';\n        }\n        else {\n            thisPrivacy = 'public';\n        }\n\n        let data = {\n            communityPrivacy: thisPrivacy,\n            community: community.name,\n        };\n\n        return axios({\n            method: 'POST',\n            url: 'http://192.168.0.17:3001/api/update/community/privacy',\n            data: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            setCommunity(response.data.community);\n            swal(\n                'Great!',\n                'You successfully updated the community privacy!',\n                'success',\n            );\n            setMakingEdit(false);\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error updating the community privacy',\n                'error',\n            );\n            setMakingEdit(false);\n        });\n    }\n\n    function handleTopicsChange(e) {\n        //This function will add topics to the topics array. It will remove the topic if it is unchecked.\n        if(e.target.checked) {\n            if(topics.length <= 9) {\n                setTopics(topics => [...topics, e.target.value]);\n            }\n            else {\n                swal(\n                    'Uh Oh!',\n                    'You can only select up to 10 topics!',\n                    'error',\n                );\n            }\n        }\n        else if(!e.target.checked) {\n            setTopics(topics.filter(topic => topic !== e.target.value));\n        }\n    }\n\n    function updateTopics() {\n        //This function will handle updating the topics within a community. \n        setMakingEdit(true);\n\n        if(topics.length < 1) {\n            swal(\n                'Uh Oh!',\n                'You must select at least one relevant topic for this community!',\n                'error',\n            );\n            setMakingEdit(false);\n            return false;\n        }\n        else {\n            let data = JSON.stringify({\n                topics: topics,\n                community: community.name,\n            });\n\n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/update/community/topics',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                setCommunity(response.data.community);\n                setTopics([]);\n                swal(\n                    'Great!',\n                    'You successfully updated the topics for your community!',\n                    'success',\n                );\n                setMakingEdit(false);\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error updating the community topics!',\n                    'error',\n                );\n                setMakingEdit(false);\n            });\n        }\n    }\n\n    function blockUser(uniqueUserId, username) {\n        //This function will handle blocking a user.\n        if(uniqueUserId === community.moderator.uniqueUserId) {\n            swal(\n                'Uh Oh',\n                'You cannot block yourself from a community you moderate!',\n                'error',\n            );\n            return false;\n        }\n        else {\n            let data = JSON.stringify({\n                username: username,\n                uniqueUserId: uniqueUserId,\n                community: community.name,\n            });\n    \n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/block/community/user',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                swal(\n                    'Great!',\n                    'You successfully blocked this user from your community',\n                    'success',\n                );\n    \n                setCommunity(response.data.community);\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error blocking this user from the community!',\n                    'error',\n                );\n            });\n        }\n    }\n\n    function unBlockUser(uniqueUserId, username) {\n        //This function will handle unblocking a user from the community. TODO: Disable Button while updating.\n        setMakingEdit(true);\n\n        let data = JSON.stringify({\n            uniqueUserId: uniqueUserId,\n            username: username,\n            community: community.name,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'http://192.168.0.17:3001/api/unblock/community/user',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            swal(\n                'Great!',\n                'You successfully unblocked that user from your community!',\n                'success',\n            )\n            setCommunity(response.data.community);\n            setMakingEdit(false);\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error trying to unblock that user from your community!',\n                'error',\n            );\n            setMakingEdit(false);\n        });\n    }\n\n    function deleteRule(rule) {\n        //This function will be responsible for deleting a rule. \n        setMakingEdit(true);\n\n        let data = JSON.stringify({\n            rule: rule,\n            community: community.name,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'http://192.168.0.17:3001/api/delete/community/rule',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then(response => {\n            swal(\n                'Great!',\n                'You successfully deleted that rule from your community!',\n                'success',\n            );\n            setCommunity(response.data.community);\n            setMakingEdit(false);\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error deleting that rule from the community!',\n                'error',\n            );\n            setMakingEdit(false);\n        });\n    }\n\n    function addRule() {\n        //This function will handle adding a new rule to the community.\n        setMakingEdit(true);\n\n        if(newRule.trim() === '') {\n            swal(\n                'Uh Oh!',\n                'You must enter a new rule!',\n                'error',\n            );\n            setMakingEdit(false);\n            return false;\n        }\n        else if(newRule.length > 100) {\n            swal(\n                'Uh Oh!',\n                'The rule cannot be longer than 100 characters!',\n                'error',\n            );\n            setMakingEdit(false);\n            return false;\n        }\n        else if(newReason.trim() === '') {\n            swal(\n                'Uh Oh!',\n                'You must enter a reason for your rule!',\n                'error',\n            );\n            setMakingEdit(false);\n            return false;\n        }\n        else if(newReason.length > 300) {\n            swal(\n                'Uh Oh!',\n                'The reason for your rule cannot be greater than 300 characters!',\n                'error',\n            );\n            setMakingEdit(false);\n            return false;\n        }\n        else {\n            let data = JSON.stringify({\n                rule: newRule,\n                reason: newReason,\n                community: community.name,\n            });\n\n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/add/community/rule',\n                data: data, \n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            }).then(response => {\n                swal(\n                    'Great!',\n                    'You successfully added a new community rule!',\n                    'success',\n                );\n                setCommunity(response.data.community);\n                setMakingEdit(false);\n                setNewRule('');\n                setNewReason('');\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error adding that new rule to the community!',\n                    'error',\n                );\n                setMakingEdit(false);\n            }); \n        }\n    }\n\n    if(community !== null) {\n        return (\n            <Grid \n                className={classes.root} \n                container \n            >\n                <Grid \n                    item \n                    xs={12} \n                    className={classes.centerContent} \n                >\n                    <Hidden \n                        smDown \n                    >\n                        <Avatar \n                            className={classes.avatarLg} \n                            src={`http://192.168.0.17:3001/api/get-photo/${community.avatar}`}\n                            alt={`${community.name} avatar`}\n                            title={`${community.name} avatar`}\n                            variant='square'\n                        />\n                    </Hidden>\n                    <Hidden \n                        mdUp \n                    >\n                        <Avatar \n                            src={`http://192.168.0.17:3001/api/get-photo/${community.avatar}`}\n                            className={classes.avatarSm} \n                            title={`${community.name} avatar`}\n                            alt={`${community.name} avatar`}\n                            variant='square'\n                        />\n                    </Hidden>\n                </Grid>\n                {/* The grid below will store the name of the community */}\n                <Grid \n                    item \n                    xs={12} \n                    className={classes.nameGrid} \n                >\n                    <Typography \n                        variant='h6' \n                        component='h6' \n                        align='center' \n                    >\n                        {community.name}\n                    </Typography>\n                </Grid>\n                {/* End of the grid to display the community name */}\n                {/* Below is the Grid to display the title of the community */}\n                <Grid \n                    item \n                    xs={12}\n                    className={classes.nameGrid} \n                >\n                    <Typography \n                        variant='body1' \n                        component='p'\n                        justify='left' \n                    >\n                        {community.title}\n                    </Typography>\n                </Grid>\n                {/* End of the Grid to display the title of the community */}\n                {/* Now create a button for the user if they are logged in, not a member, and the community is public */}\n                <Grid \n                    item \n                    xs={12}\n                    style={{\n                        margin: 'auto',\n                        textAlign: 'center',\n                        marginTop: 20,\n                    }}\n                >\n                    {/* Button if the user is logged in, not a member, and the community is public */}\n                    {(props.mainUser !== null && !_.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.communityPrivacy === 'public' && community.moderator.uniqueUserId !== props.mainUser.uniqueUserId) &&\n                        <Button \n                            color='primary' \n                            variant='contained' \n                            onClick={publicJoin}\n                            disabled={joinSending}\n                        >\n                            {joinSending ? <CircularProgress color='primary' /> : 'join'}\n                        </Button>\n                    }\n                    {/* Below is the Button if the user is logged in, not a member, and the community is private */}\n                    {(props.mainUser !== null && !_.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.communityPrivacy === 'private' && community.moderator.uniqueUserId !== props.mainUser.uniqueUserid) &&\n                        <Button \n                            color='primary' \n                            variant='contained' \n                            onClick={privateJoinRequest}\n                            disabled={joinSending}\n                        >\n                            {joinSending ? <CircularProgress color='primary' /> : 'join'}\n                        </Button>\n                    }\n                    {(props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.moderator.uniqueUserId !==  props.mainUser.uniqueUserId) &&\n                        <Button \n                            color='primary'\n                            variant='outlined' \n                            onClick={leaveCommunity}\n                            disabled={joinSending}\n                        >\n                            {joinSending ? <CircularProgress color='primary' /> : 'leave'}\n                        </Button>\n                    }\n                    {/* Below, we will add a button to route someone who is not signed up or logged in to the sign up page */}\n                    {props.mainUser === null &&\n                        <Button \n                            color='primary' \n                            onClick={e => history.push('/')}\n                        >\n                            Sign up or log in!\n                        </Button>\n                    }\n                    {(props.mainUser === null && community.communityPrivacy === 'private') &&\n                        <Grid \n                            item \n                            xs={12} \n                        >\n                            <Typography \n                                variant='h6' \n                                component='h6' \n                                align='center' \n                            >\n                                This community is private\n                            </Typography>\n                        </Grid>\n                    }\n                    {(props.mainUser !== null && !_.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.communityPrivacy === 'private') && \n                        <Grid \n                            item \n                            xs={12} \n                        >\n                            <Typography \n                                variant='h6' \n                                component='h6' \n                                align='center' \n                            >\n                                This community is private\n                            </Typography>\n                        </Grid>\n                    }\n                    {/*Now I will have two buttons in two grids for members of the community to either chat or post content to the community */}\n                    {(props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId)) &&\n                        <div>\n                            <Grid \n                                item \n                                xs={12} \n                                style={{\n                                    marginTop: 20,\n                                    marginBottom: 20,\n                                }}\n                            >\n                                <Button \n                                    variant='contained' \n                                    color='primary' \n                                    style={{\n                                        margin: 'auto',\n                                    }}\n                                    onClick={e => history.push(`/community/chat/${community.name}`)}\n                                >\n                                    Chat \n                                </Button>\n                            </Grid>\n                            <Grid \n                                item \n                                xs={12} \n                            >\n                                <Button \n                                    color='primary' \n                                    variant='outlined' \n                                    onClick={e => setPostDialog(true)}\n                                >\n                                    Post \n                                </Button>\n                            </Grid>\n                        </div>\n                    }\n                    {/* This is the end of the two Grids for a the chat Button and the Post button */}\n                    {/*Below create the Dialog that will open when the user tries to make a post. Only show when a user is part of the community */}\n                </Grid>\n                {(props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId)) &&\n                    <Grid \n                        item \n                        xs={12} \n                    >\n                        <Dialog \n                            open={postDialog} \n                            fullScreen\n                        >\n                            <DialogContent>\n                                <AppBar \n                                    color='primary'\n                                    hidden={posting}\n                                >\n                                    <Icon \n                                        path={mdiClose} \n                                        size={1} \n                                        title='Dialog close' \n                                        style={{\n                                            cursor: 'pointer'\n                                        }}\n                                        onClick={() => setPostDialog(false)}\n                                    />\n                                    <Tabs \n                                        value={curTab}\n                                        onChange={(e, newVal) => setTab(newVal)} \n                                        centered\n                                    >\n                                        <Tab \n                                            {...a11yProps(0)} \n                                            label='Text' \n                                            disabled={posting}\n                                        />\n                                        <Tab \n                                            {...a11yProps(1)} \n                                            label='Photo' \n                                            disabled={posting}\n                                        />\n                                        <Tab \n                                            {...a11yProps(2)}\n                                            label='Video' \n                                            disabled={posting}\n                                        />\n                                        <Tab \n                                            {...a11yProps(3)}\n                                            label='Link'\n                                            disabled={posting} \n                                        />\n                                    </Tabs>\n                                </AppBar>\n                                <TabPanel \n                                    index={0}\n                                    value={curTab}\n                                >\n                                    <ValidatorForm\n                                        ref={textFormRef} \n                                        onSubmit={e => e.preventDefault()}\n                                    >\n                                        <Typography \n                                            variant='body1' \n                                            component='small' \n                                            color={textPostTitle.length > 75 ? 'error' : 'default'}\n                                            align='center' \n                                        >\n                                            {textPostTitle.length}/75\n                                        </Typography>\n                                        <TextValidator \n                                            label='Post title'\n                                            placeholder='Enter a title for your post of 75 characters or less'\n                                            value={textPostTitle}\n                                            onChange={e => setTextPostTitle(e.target.value)}\n                                            helperText='Enter a title for this text post'\n                                            validators={['titleLength']}\n                                            errorMessages={['Title can only be up to 75 characters']}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            color='primary'\n                                            variant='outlined'\n                                            fullWidth\n                                        />\n                                        <Typography \n                                            style={{\n                                                marginTop: 30,\n                                            }}\n                                            variant='body1' \n                                            component='small'\n                                            color={textPost.length > 3000 ? 'error' : 'default'}\n                                            align='center' \n                                        >\n                                            {textPost.length}/3000\n                                        </Typography>\n                                        <TextValidator \n                                            label='Text post'\n                                            placeholder='Share a text post!'\n                                            value={textPost}\n                                            onChange={e => setTextPost(e.target.value)}\n                                            helperText='Enter a text post of up to 3,000 characters long!'\n                                            validators={['requiredText', 'textLength']}\n                                            errorMessages={['Must enter some text!', 'Text post cannot be more than 3,000 characters long!']}\n                                            variant='outlined' \n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            color='primary' \n                                            variant='outlined' \n                                            rows={3}\n                                            multiline \n                                            required \n                                            fullWidth \n                                        />\n                                        <Button \n                                            variant='contained' \n                                            color='primary' \n                                            onClick={sendTextPost}\n                                            disabled={posting}\n                                        >\n                                            {posting ? <CircularProgress color='primary' /> : 'Upload'}\n                                        </Button>\n                                    </ValidatorForm>\n                                </TabPanel>\n                                <TabPanel \n                                    index={1} \n                                    value={curTab} \n                                >\n                                    <Typography \n                                        variant='h6' \n                                        component='h6' \n                                    >\n                                        Post a photo\n                                    </Typography>\n                                    <label \n                                        html-for='photoPost' \n                                    >\n                                        <input \n                                            className={classes.input}\n                                            type='file'\n                                            accept='image/jpg, image/jpeg, image/png' \n                                            id='photoPost'\n                                            name='photoPost' \n                                            onChange={handlePhotoChange} \n                                            required \n                                        />\n                                        <Button \n                                            variant='contained' \n                                            color='primary' \n                                            component='span' \n                                            aria-label='Photo picker button'\n                                        >\n                                            <Icon \n                                                path={mdiCamera} \n                                                size={1} \n                                                title='Photo upload icon' \n                                                aria-label='Photo upload icon' \n                                            />\n                                        </Button>\n                                    </label>\n                                    <br/>\n                                    <TextField \n                                        label='Caption'\n                                        placeholder='Enter a caption for your photo' \n                                        variant='outlined' \n                                        color='primary' \n                                        value={photoCaption} \n                                        onChange={e => setPhotoCaption(e.target.value)} \n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        rows={4}\n                                        multiline\n                                        required\n                                        style={{\n                                            marginTop: 40,\n                                        }}\n                                        fullWidth\n                                    />\n                                    <br/>\n                                    <Button \n                                        style={{\n                                            marginTop: 30,\n                                        }}\n                                        color='primary' \n                                        variant='outlined' \n                                        onClick={handlePhotoUpload}\n                                        disabled={photoUploading}\n                                    >\n                                        {photoUploading ? <CircularProgress color='primary' /> : 'Upload Photo'}\n                                    </Button>\n                                </TabPanel>\n                                <TabPanel \n                                    index={2} \n                                    value={curTab} \n                                >\n                                    <Typography \n                                        variant='h6' \n                                        component='h6' \n                                    >\n                                        Post a video\n                                    </Typography>\n                                    <label \n                                        html-for='videoPost' \n                                    >\n                                        <input \n                                            className={classes.input}\n                                            type='file'\n                                            accept='video/mp4, video/mov'\n                                            id='videoPost'\n                                            name='videoPost' \n                                            onChange={handleVideoChange} \n                                            required \n                                        />\n                                        <Button \n                                            variant='contained' \n                                            color='primary' \n                                            component='span' \n                                            aria-label='Video picker button'\n                                        >\n                                            <Icon \n                                                path={mdiVideo} \n                                                size={1} \n                                                title='Video upload icon' \n                                                aria-label='Video upload icon' \n                                            />\n                                        </Button>\n                                    </label>\n                                    <br/>\n                                    <TextField \n                                        label='Caption'\n                                        placeholder='Enter a caption for your video' \n                                        variant='outlined' \n                                        color='primary' \n                                        value={videoCaption} \n                                        onChange={e => setVideoCaption(e.target.value)} \n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        rows={4}\n                                        multiline\n                                        required\n                                        style={{\n                                            marginTop: 40,\n                                        }}\n                                        fullWidth\n                                    />\n                                    <br/>\n                                    <Button \n                                        style={{\n                                            marginTop: 30,\n                                        }}\n                                        color='primary' \n                                        variant='outlined' \n                                        onClick={handleVideoUpload}\n                                        disabled={videoUploading}\n                                    >\n                                        {videoUploading ? <CircularProgress color='primary' /> : 'Upload Video'}\n                                    </Button>\n                                </TabPanel>\n                                <TabPanel \n                                    index={3}\n                                    value={curTab}\n                                >\n                                    <ValidatorForm\n                                        ref={linkFormRef} \n                                        onSubmit={e => e.preventDefault()}\n                                    >\n                                        <Typography \n                                            variant='body1' \n                                            component='small' \n                                            color={textPostTitle.length > 75 ? 'error' : 'default'}\n                                            align='center' \n                                        >\n                                            {textPostTitle.length}/75\n                                        </Typography>\n                                        <TextValidator \n                                            label='Post title'\n                                            placeholder='Enter a title for your post of 75 characters or less'\n                                            value={textPostTitle}\n                                            onChange={e => setTextPostTitle(e.target.value)}\n                                            helperText='Enter a title for this text post'\n                                            validators={['requiredText', 'titleLength']}\n                                            errorMessages={['Must enter a title for all link posts', 'Title can only be up to 75 characters']}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            color='primary'\n                                            variant='outlined'\n                                            fullWidth\n                                        />\n                                        <br></br>\n                                        <TextValidator \n                                            label='Link'\n                                            placeholder='Share a valid link!'\n                                            value={postLink}\n                                            onChange={e => setPostLink(e.target.value)}\n                                            helperText='Enter a valid url link.'\n                                            validators={['requiredText', 'validLink']}\n                                            errorMessages={['Must enter a link!', 'The link that you enter must be formatted properly!']}\n                                            variant='outlined' \n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            color='primary' \n                                            variant='outlined'\n                                            required \n                                            fullWidth \n                                        />\n                                        <Button \n                                            variant='contained' \n                                            color='primary' \n                                            onClick={sendLinkPost}\n                                            disabled={posting}\n                                        >\n                                            {posting ? <CircularProgress color='primary' /> : 'Upload'}\n                                        </Button>\n                                    </ValidatorForm>\n                                </TabPanel>\n                            </DialogContent>\n                        </Dialog>\n                    </Grid>\n                }\n                {/*End of the Grid for the dialog box for posts if the user is logged in and a member of the community */}\n                {/* Below add the tabpanel for posts, about, and settings (only render settings if moderator is visiting page) */}\n                {(community.communityPrivacy === 'public' || (props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId))) &&\n                    <Grid \n                        item \n                        xs={12} \n                    >\n                        <Paper \n                            className={classes.paper}\n                            style={{\n                                marginTop: 10,\n                            }}\n                        >\n                            <Tabs \n                                value={curTab2} \n                                onChange={(e, newVal) => setTab2(newVal)}\n                                centered\n                                style={{\n                                    color: 'rgb(255, 255, 255)',\n                                }}\n                            >\n                                <Tab \n                                    label='Posts' \n                                    {...a11yProps(0)} \n                                />\n                                <Tab \n                                    label='About' \n                                    {...a11yProps(1)} \n                                />\n                                {(props.mainUser !== null && community.moderator.uniqueUserId === props.mainUser.uniqueUserId) &&\n                                    <Tab \n                                        label='Settings' \n                                        {...a11yProps(2)} \n                                    />\n                                }\n                            </Tabs>\n                        </Paper>\n                        {/* Now begin the tab for posts. Have the CommunityPostsCard ONLY for users who are logged in */}\n                        <TabPanel \n                            value={0} \n                            index={curTab2} \n                        >\n                            {props.posts.length < 1 && \n                                <Typography \n                                    variant='h6' \n                                    component='h6' \n                                    align='center' \n                                >\n                                    No posts \n                                </Typography>\n                            }\n                            {props.posts.length > 0 && \n                                <div>\n                                    {props.posts.map((post, index) => (\n                                        <div \n                                            style={{\n                                                textAlign: 'left',\n                                            }}\n                                            key={index}\n                                        >\n                                            {props.mainUser !== null &&       \n                                                <CommunityPostsCard\n                                                    post={post}\n                                                    id={post.uniquePostId}\n                                                    moderator={props.mainUser.uniqueUserId === community.moderator.uniqueUserId}\n                                                />\n                                            }\n                                            {props.mainUser === null &&\n                                                <NonUserCommunityPostsCard \n                                                    post={post}\n                                                    id={post.uniquePostId}\n                                                />\n                                            }\n                                            {index < props.posts.length - 1 &&\n                                                <div \n                                                    style={{\n                                                        marginBottom: 20,\n                                                    }}\n                                                />\n                                            }\n                                        </div>\n                                    ))}\n                                </div>\n                            }\n                        </TabPanel>\n                        {/* This is the end of the tab for posts. Now, we need a tab for the about section of the community*/}\n                        <TabPanel \n                            value={1}\n                            index={curTab2} \n                        >\n                            <div \n                                style={{\n                                    margin: 'auto',\n                                    maxWidth: 600,\n                                    textAlign: 'center',\n                                }}\n                            >\n                                <List>\n                                    {/* First list item that shows the community moderator */}\n                                    <ListItem\n                                        style={{\n                                            cursor: 'pointer',\n                                        }}\n                                        onClick={e => history.push(`/geouser/${community.moderator.uniqueUserId}`)}\n                                        alignItems='flex-start'\n                                    >\n                                        <ListItemAvatar>\n                                            <Avatar \n                                                src={`http://192.168.0.17:3001/api/get/avatar/by/id/${community.moderator.uniqueUserId}`}\n                                                title={`${community.moderator.username}`}\n                                                alt={`${community.moderator.username}`} \n                                                style={{\n                                                    cursor: 'pointer',\n                                                }}\n                                            />\n                                        </ListItemAvatar>\n                                        <ListItemText \n                                            primary={\n                                                <div>\n                                                    <Typography \n                                                        variant='h6' \n                                                        component='h6' \n                                                    >\n                                                        Moderator \n                                                    </Typography>\n                                                    <Typography \n                                                        variant='subtitle1' \n                                                        component='span' \n                                                        color='textSecondary'\n                                                    >\n                                                        {community.moderator.username}\n                                                    </Typography>\n                                                </div>\n                                            }\n                                        />\n                                    </ListItem>\n                                    <Divider />\n                                    {/* End of the community moderator list item */}\n                                    {/* Begin the community description section */} \n                                    <ListItem>\n                                        <div>\n                                            <Typography \n                                                variant='h6'\n                                                component='h6' \n                                                align='center' \n                                            >\n                                                Description\n                                            </Typography>\n                                            <br></br>\n                                            <Typography \n                                                variant='body1' \n                                                component='p' \n                                            >\n                                                {community.description}\n                                            </Typography>\n                                        </div>\n                                    </ListItem>\n                                    <Divider />\n                                    {/* End of the section for the community description */}\n                                    {/* Begin the ListItem for the number of members in the community */}\n                                    <ListItem>\n                                        <ListItemText \n                                            primary={\n                                                <div>\n                                                    <Typography \n                                                        variant='body1' \n                                                        component='p'\n                                                        align='center' \n                                                    >\n                                                        {community.members.length} members \n                                                    </Typography>\n                                                </div>\n                                            }\n                                        />\n                                    </ListItem>\n                                    <Divider />\n                                    {/* End of ListItem showing the number of users in a community */}\n                                    {/* Begin the section showing a list of topics within the community */}\n                                    <Typography \n                                        variant='h6' \n                                        component='h6' \n                                        align='center' \n                                    >\n                                        Topics\n                                    </Typography>\n                                    <List>\n                                        {community.topics.map((topic, index) => (\n                                            <ListItem \n                                                key={index.toString()} \n                                                alignItems='flexStart' \n                                            >\n                                                <ListItemText \n                                                    primary={\n                                                        <div>\n                                                            <Typography \n                                                                variant='body1' \n                                                                component='p'\n                                                                align='center' \n                                                            >\n                                                                {topic}\n                                                            </Typography>\n                                                        </div>\n                                                    }\n                                                />\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                    {/* End of the section for the community topics */}\n                                </List>\n                                {/* End of the list, but add community rules below */}\n                                {community.rules.length > 0 &&\n                                    <div>\n                                        <Divider />\n                                        <Typography \n                                            variant='h6' \n                                            component='h6' \n                                            align='center' \n                                        >\n                                            Rules \n                                        </Typography>\n                                        {community.rules.map((item, index) => (\n                                            <div \n                                                key={index} \n                                            >\n                                                <Accordion\n                                                    style={{\n                                                        marginBottom: index < community.rules.length - 1 ? 20 : 0,\n                                                    }}\n                                                >\n                                                    <AccordionSummary\n                                                        expandIcon={<ChevronDownIcon />}\n                                                    >\n                                                        {item.rule}\n                                                    </AccordionSummary>\n                                                    <AccordionDetails>\n                                                        <Typography \n                                                            variant='body1' \n                                                            component='p' \n                                                        >\n                                                            {item.reason}\n                                                        </Typography>\n                                                    </AccordionDetails>\n                                                </Accordion>\n                                            </div>\n                                        ))}\n                                    </div>\n                                }\n                            </div>\n                        </TabPanel>\n                        {/* This is the end of the tab panel for the about section. Now it is time to add the  tab panel for the settings, which only the moderator can see. */}\n                        <TabPanel \n                            value={2} \n                            index={curTab2} \n                        >\n                            <div>\n                                <Typography \n                                    variant='h4' \n                                    component='h4'\n                                    align='center' \n                                >\n                                    Settings \n                                </Typography>\n                            </div>\n                            <Divider />\n                            <div>\n                                <Typography \n                                    variant='subtitle2' \n                                    component='small' \n                                    color={(editTitleText.length < 10 || editTitleText.length > 75) ? 'error' : 'default'}\n                                    align='center'\n                                >\n                                    {editTitleText.length}/75\n                                </Typography>\n                                <TextField \n                                    variant='outlined' \n                                    color='primary' \n                                    label='Community title' \n                                    helperText='Change the community title. Must be between 10 and 75 characters long' \n                                    placeholder={community.title}\n                                    value={editTitleText} \n                                    onChange={e => setEditTitleText(e.target.value)} \n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    fullWidth \n                                />\n                                <Button \n                                    variant='contained' \n                                    color='primary' \n                                    onClick={updateTitle}\n                                    disabled={makingEdit}\n                                >\n                                    {makingEdit ? <CircularProgress /> : 'Update title'}\n                                </Button>\n                            </div>\n                            <Divider />\n                            <div \n                                style={{\n                                    marginTop: 30,\n                                }}\n                            >\n                                <Typography \n                                    variant='subtitle2'\n                                    component='small'\n                                    color={(editDescriptionText.length < 10 || editDescriptionText.length > 300) ? 'error' : 'default'}\n                                    align='center' \n                                >\n                                    {editDescriptionText.length}/300\n                                </Typography>\n                                <TextField \n                                    variant='outlined' \n                                    color='primary' \n                                    label='Community descriptiom' \n                                    helperText='Change the community description. Must be between 10 and 300 characters long' \n                                    placeholder={community.description}\n                                    value={editDescriptionText} \n                                    onChange={e => setEditDescriptionText(e.target.value)} \n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    rows={3}\n                                    multiline\n                                    fullWidth \n                                />\n                                <Button \n                                    variant='contained' \n                                    color='primary' \n                                    onClick={updateDescription}\n                                    disabled={makingEdit}\n                                >\n                                    {makingEdit ? <CircularProgress /> : 'Update title'}\n                                </Button>\n                            </div>\n                            <Divider />\n                            <div \n                                style={{\n                                    marginTop: 40,\n                                }}\n                            >\n                                <Typography \n                                className={classes.topMarg} \n                                variant='body1' \n                                component='p'\n                                >\n                                    Update community avatar photo!\n                                </Typography>\n                                <label \n                                    className={classes.topMarg}\n                                    html-for='avatar' \n                                    style={{\n                                        margin: 'auto',\n                                    }}\n                                >\n                                    <input \n                                        className={classes.input}\n                                        id='avatar'\n                                        name='avatar ' \n                                        type='file'\n                                        accept='image/jpeg, image/jpg, image/png'\n                                        onChange={handleAvatarChange}\n                                        required \n                                    />\n                                    <Button \n                                        component='span'\n                                        color='primary' \n                                        variant='contained' \n                                    >\n                                        <CameraIcon />\n                                    </Button>\n                                </label>\n                                <br/>\n                                <Button \n                                    variant='contained' \n                                    color='primary' \n                                    style={{\n                                        marginTop: 15,\n                                    }}\n                                    onClick={updateAvatar}\n                                    disabled={makingEdit}\n                                >\n                                    {makingEdit ? <CircularProgress /> : 'Update Avatar'}\n                                </Button>\n                            </div>\n                            <Divider />\n                            <div \n                                style={{\n                                    marginTop: 40,\n                                }}\n                            >\n                                <Typography \n                                    variant='subtitle2'\n                                    component='small' \n                                >\n                                    Select a theme color for this community {themeEdit}!\n                                </Typography>\n                                <SwatchesPicker \n                                    color={themeEdit} \n                                    onChange={color => setThemeEdit(color.hex)} \n                                    colors={[\n                                        ['#00143C', '#2471A3', '#3498DB'],\n                                        ['#641E16', '#C0392B', '#E74C3C'],\n                                        ['#0E6655', '#45B39D', '#58D68D'],\n                                        ['#5B2C6F', '#8E44AD', '#C39BD3'],\n                                        ['#BA4A00', '#DC7633', '#E67E22'],\n                                        ['#000000', '#34495E', '#7F8C8D'],\n                                    ]}\n                                />\n                                <Button \n                                    style={{\n                                        marginTop: 20,\n                                    }}\n                                    variant='contained' \n                                    color='primary' \n                                    disabled={makingEdit} \n                                    onClick={updateTheme}\n                                >\n                                    {makingEdit ? <CircularProgress /> : 'Update Community Theme'} \n                                </Button>\n                            </div>\n                            <Divider /> \n                            <div \n                                style={{\n                                    marginTop: 40,\n                                }}\n                            >\n                                <Button \n                                    variant='contained'\n                                    color='primary' \n                                    disabled={makingEdit} \n                                    onClick={updatePrivacy} \n                                >\n                                    {community.communityPrivacy === 'public' ? 'Make community private' : 'Make community public'}\n                                </Button>\n                            </div>\n                            <Divider />\n                            <div \n                                style={{\n                                    marginTop: 40,\n                                }}\n                            >\n                                <FormControl\n                                    component='fieldset' \n                                >\n                                    <FormLabel \n                                        component='legend' \n                                    >\n                                        Select at least 1 community topic. You can choose up to 10 (required)\n                                    </FormLabel>\n                                    <FormGroup \n                                        column \n                                    >\n                                        {communityTopics.map((topic, index) => (\n                                            <FormControlLabel \n                                                key={index.toString()}\n                                                value={topic}\n                                                onChange={handleTopicsChange}\n                                                label={topic}\n                                                labelPlacement='end' \n                                                control={\n                                                    <Checkbox \n                                                        color='primary' \n                                                        checked={topics.includes(topic)}\n                                                    />\n                                                }\n                                            />\n                                        ))}\n                                    </FormGroup>\n                                </FormControl>\n                                <br />\n                                <Button \n                                    style={{\n                                        marginTop: 20,\n                                    }}\n                                    variant='contained' \n                                    color='primary' \n                                    onClick={updateTopics} \n                                    disabled={makingEdit} \n                                >\n                                    {makingEdit ? <CircularProgress /> : 'Update community topics'}\n                                </Button>\n                            </div>\n                            <Divider />\n                            <div \n                                style={{\n                                    marginTop: 40,\n                                }}\n                            >\n                                <Typography \n                                    variant='h6' \n                                    component='h6' \n                                    align='center' \n                                >\n                                    Block User\n                                </Typography>\n                                <Autocomplete \n                                    value={selectedUser}\n                                    filterOptions={userFilterOptions}\n                                    options={allUsers}\n                                    getOptionLabel={option => option.firstName + ' ' + option.lastName}\n                                    renderOption={option => (\n                                        <ListItem \n                                            alignItems='flex-start' \n                                            onClick={() => blockUser(option.uniqueUserId, option.username)}\n                                        >\n                                            <ListItemAvatar>\n                                                <Avatar \n                                                    src={`http://192.168.0.17:3001/api/get-photo/${option.avatar}`}\n                                                    alt={`${option.username}`}\n                                                    title={`${option.username}`} \n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText \n                                                primary={\n                                                    <Typography \n                                                        variant='h6' \n                                                        component='h6' \n                                                    >\n                                                        {option.username}\n                                                    </Typography>\n                                                }\n                                                secondary={\n                                                    <Typography \n                                                        component='small'\n                                                        color='textSecondary' \n                                                    >\n                                                        {option.firstName} {option.lastName}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    )}\n                                    renderInput={params => (\n                                        <TextField \n                                            {...params} \n                                            color='primary'\n                                            variant='outlined' \n                                            label='Block user' \n                                            placeholder='Search users'\n                                            helperText='Search for a GeoCities user to block'\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            fullWidth \n                                            required \n                                        />\n                                    )}\n                                />\n                            </div>\n                            <Divider />\n                            <div \n                                style={{\n                                    marginTop: 40,\n                                }}\n                            >\n                                {community.blockList.length > 0 &&\n                                    <List>\n                                        {community.blockList.map((user, index) => (\n                                            <ListItem \n                                                key={index}\n                                                alignItems='flexStart' \n                                            >\n                                                <ListItemAvatar>\n                                                    <Avatar \n                                                        src={`http://192.168.0.17:3001/api/get/avatar/by/id/${user.uniqueUserId}`}\n                                                        title={`${user.username}`}\n                                                        alt={`${user.username}`} \n                                                    />\n                                                </ListItemAvatar>\n                                                <Button \n                                                    variant='contained' \n                                                    color='primary' \n                                                    onClick={e => unBlockUser(user.uniqueUserId, user.username)}\n                                                    disabled={makingEdit}\n                                                >\n                                                    {makingEdit ? <CircularProgress /> : 'Unblock user'}\n                                                </Button>\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                }\n                            </div>\n                            <Divider />\n                            {/* End of the section for unblocking a user. Now we need a section that can help us delete rules */}\n                            <div \n                                style={{\n                                    marginTop: 40,\n                                }}\n                            >\n                                <Typography \n                                    variant='h6' \n                                    component='h6' \n                                    align='center' \n                                >\n                                    Delete rules \n                                </Typography>\n                                {community.rules.length > 0 &&\n                                    <List>\n                                        {community.rules.map((item, index) => (\n                                            <div>\n                                                <ListItem \n                                                    key={index} \n                                                    alignItems='flex-start' \n                                                    style={{\n                                                        marginBottom: index < community.rules.length - 1 ? 15 : 0,\n                                                    }}\n                                                >\n                                                    <ListItemText \n                                                        secondary={\n                                                            <Typography \n                                                                variant='subtitle1' \n                                                                color='textSecondary' \n                                                                component='span' \n                                                            >\n                                                                {item.rule}\n                                                            </Typography>\n                                                        }\n                                                    />\n                                                    <Button \n                                                        color='primary' \n                                                        onClick={e => deleteRule(item.rule)}\n                                                        disabled={makingEdit}\n                                                    >\n                                                        delete rule \n                                                    </Button>\n                                                </ListItem>\n                                            </div>\n                                        ))}\n                                    </List>\n                                }\n                            </div>\n                            <Divider />\n                            {/* End of the section for deleting rules. Now we need to create the section to ADD rules */}\n                            <div \n                                style={{\n                                    marginTop: 40,\n                                }}\n                            >\n                                <Typography \n                                    variant='h6' \n                                    component='h6' \n                                    align='center' \n                                >\n                                    Create new rule \n                                </Typography>\n                                <div \n                                    style={{\n                                        marginTop: 20,\n                                    }}\n                                >\n                                    <Typography \n                                        variant='subtitle2' \n                                        component='small' \n                                        color={newRule.length > 100 ? 'error' : 'default'} \n                                        align='center'\n                                    >\n                                        {newRule.length}/100\n                                    </Typography>\n                                    <TextField \n                                        value={newRule}\n                                        onChange={e => setNewRule(e.target.value)}\n                                        label='Add new rule' \n                                        placeholder='Add a new rule for the community'\n                                        helperText='New rule can be a max of 100-characters' \n                                        color='primary' \n                                        variant='outlined' \n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        fullWidth \n                                    />\n                                    <Typography \n                                        variant='subtitle2' \n                                        component='small' \n                                        color={newReason.length > 300 ? 'error' : 'default'} \n                                        align='center' \n                                        style={{\n                                            marginTop: 35,\n                                        }}\n                                    >\n                                        {newReason.length}/300\n                                    </Typography>\n                                    <TextField \n                                        value={newReason} \n                                        onChange={e => setNewReason(e.target.value)} \n                                        label='Add a reason for the rule'\n                                        placeholder='You must enter a reason for this rule' \n                                        helperText='The reason can be up to 300 characters long'\n                                        color='primary' \n                                        variant='outlined' \n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        multiline \n                                        row={4} \n                                        fullWidth \n                                    />\n                                    <br />\n                                    <Button \n                                        style={{\n                                            marginTop: 20,\n                                        }}\n                                        color='primary' \n                                        variant='contained' \n                                        disabled={makingEdit} \n                                        onClick={addRule}\n                                    >\n                                        {makingEdit ? <CircularProgress /> : 'Add rule'}\n                                    </Button>\n                                </div>\n                            </div>\n                        </TabPanel>\n                    </Grid>\n                }\n                {/* End of the Grid for the main sections of the community page */}\n            </Grid>\n        );\n    }\n    else {\n        //If the community is null, simply return a Backdrop with a CircularProgress inside \n        return (\n            <Backdrop \n                open={true} \n            >\n                <CircularProgress \n                    color='primary' \n                />\n            </Backdrop>\n        );\n    }  \n}\n\nfunction mapStateToProps(state) {\n    return {\n        mainUser: state.userReducer.user,\n        primary: state.userThemeReducer.primary,\n        posts: state.visitorPostsReducer.posts,\n    };\n}\n\nexport default connect(mapStateToProps)(Community);"]},"metadata":{},"sourceType":"module"}