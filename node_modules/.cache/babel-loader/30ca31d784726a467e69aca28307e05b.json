{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport Icon from '@mdi/react';\nimport { mdiCheckBold, mdiPencil, mdiClose } from '@mdi/js';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction TabPanel(props) {\n  //This component will serve as the panel for each individual tab\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    hidden: value !== index,\n    role: \"tabpanel\",\n    id: `tabpanel-${index}`,\n    \"aria-label\": `tab-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    style: {\n      marginTop: 100\n    },\n    children: value === index && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.any.isRequired,\n  index: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`\n  };\n}\n\nfunction ProfilePage(props) {\n  _s();\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: 20\n    },\n    profileAvatar: {\n      height: 128,\n      width: 128,\n      margin: 'auto'\n    },\n    profileAvatarLg: {\n      height: 168,\n      width: 168,\n      margin: 'auto'\n    },\n    usernameDisplay: {\n      marginTop: 40,\n      margin: 'auto'\n    },\n    statsInfo: {\n      marginTop: 40,\n      textAlign: 'center'\n    },\n    paper: {\n      backgroundColor: props.user.profileTheme,\n      color: 'rgb(255, 255, 255)'\n    }\n  }));\n  const history = useHistory(); //The history API to access the brower history. \n\n  const classes = useStyles(); //Custom styling.\n\n  const [openDialog, setOpenDialog] = useState(false); //Variable and setter to open and close dialog.\n\n  const [curTab, setTab] = useState(0); //Variable and setter to control proper tab.\n\n  const [curTab2, setTab2] = useState(0);\n  const [textPost, setTextPost] = useState(''); //Variable and setter for text post control\n\n  const [posting, setPosting] = useState(false); //Hides dialog AppBar and tabs when a post is posting to the server\n\n  let posts = [];\n  useEffect(() => {\n    //First, if the user doesn't exist in state, re-route to the login page.\n    if (!props.user) {\n      history.push('/');\n    } else if (props.user) {\n      //Else, we make an axios call to request the user (an updated version of the user)\n      //props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/grab/user/${props.user.uniqueUserId}`\n      }).then(response => {\n        if (response.data.user) {\n          props.dispatch({\n            type: 'user/updateUser',\n            payload: response.data.user\n          });\n          props.dispatch({\n            type: 'ThemeChange',\n            payload: response.data.user.profileTheme\n          });\n          posts = response.data.posts;\n        } else if (response.data === 'user not found') {\n          swal('Uh Oh!', 'We could not find your profile!', 'error');\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error retreiving your profile. Please try again!', 'error');\n        history.push('/');\n      });\n    }\n  }, []);\n\n  function handleTextPost() {\n    //Function that handles submitting a text post to the server. \n    setPosting(true);\n\n    if (!textPost) {\n      swal('Uh Oh!', 'You must enter some text', 'error');\n      setPosting(false);\n    } else {\n      let months = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sept', 'oct', 'nov', 'dec'];\n      let date = new Date();\n      let year = date.getFullYear();\n      let month = months[date.getMonth()];\n      let day = date.getDate();\n      let data = JSON.stringify({\n        uniquePostId: Date.now() + props.user.uniqueUserId + props.username,\n        uniqueUserId: props.user.uniqueUserId,\n        username: props.user.username,\n        type: 'text',\n        context: 'personal',\n        text: textPost,\n        dateString: `${month} ${day}, ${year}`,\n        link: '',\n        title: '',\n        community: '',\n        caption: '',\n        src: '',\n        privacy: props.user.profilePrivacy\n      });\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.9:3001/api/upload/text/link/post',\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.data === 'success') {\n          swal('Great!', 'Post was successfully uploaded!', 'success');\n          setPosting(false);\n          setTextPost('');\n          setOpenDialog(false);\n        } else {\n          swal('Uh Oh!', 'There was an error uploading that post! Please try again.', 'error');\n          setPosting(false);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error uploading that post! Please try again.', 'error');\n        setPosting(false);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.root,\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          mdUp: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.profileAvatar,\n            src: `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`,\n            title: `${props.user.username}`,\n            alt: `${props.user.username}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.profileAvatarLg,\n            src: `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`,\n            title: `${props.user.username}`,\n            alt: `${props.user.username}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h4\",\n        align: \"center\",\n        className: classes.usernameDisplay,\n        children: props.user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), props.user.isVerified && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiCheckBold,\n          size: 1,\n          title: \"Verified\",\n          style: {\n            color: 'rgb(0, 128, 0)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), \" Verified\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      spacing: 1,\n      className: classes.statsInfo,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          children: \"Followers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: props.user.followers.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          children: \"Following\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: props.user.following.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          children: \"Karma\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: props.user.karma\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        style: {\n          fontWeight: 'bold',\n          marginTop: 30\n        },\n        children: [props.user.firstName, \" \", props.user.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: 40,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        component: \"small\",\n        justify: \"start\",\n        align: \"left\",\n        children: props.user.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center',\n        marginTop: 40\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        size: \"large\",\n        onClick: () => setOpenDialog(true),\n        startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiPencil,\n          size: 1,\n          title: \"Post Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 25\n        }, this),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDialog,\n        fullScreen: true,\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            color: \"primary\",\n            hidden: posting,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              path: mdiClose,\n              size: 1,\n              title: \"Dialog close\",\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => setOpenDialog(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n              value: curTab,\n              onChange: (e, newVal) => setTab(newVal),\n              centered: true,\n              children: [/*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(0),\n                label: \"Text\",\n                disabled: posting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(1),\n                label: \"Photo\",\n                disabled: posting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(2),\n                label: \"Video\",\n                disabled: posting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            index: 0,\n            value: curTab,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Text Post\",\n              placeholder: \"Post a status!\",\n              color: \"primary\",\n              variant: \"outlined\",\n              InputLabelProps: {\n                shrink: true\n              },\n              \"aria-label\": \"Text Post Field\",\n              rows: 4,\n              onChange: e => setTextPost(e.target.value),\n              value: textPost,\n              helperText: \"Enter a status update!\",\n              multiline: true,\n              fullWidth: true,\n              disabled: posting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginTop: 20\n              },\n              color: \"primary\",\n              variant: \"outlined\",\n              disabled: posting,\n              onClick: handleTextPost,\n              children: posting ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 44\n              }, this) : 'post'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            index: 1,\n            value: curTab,\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            index: 2,\n            value: curTab,\n            children: \"Videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: curTab2,\n          onChange: (e, newVal) => setTab2(newVal),\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Posts\",\n            ...a11yProps(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"About\",\n            ...a11yProps(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Events\",\n            ...a11yProps(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: 40\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: 0,\n        index: curTab2,\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: 1,\n        index: curTab2,\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: 2,\n        index: curTab2,\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfilePage, \"vvlHfl2Y2e3oOzmsIMdGhAML9h8=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c2 = ProfilePage;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    primary: state.userThemeReducer.primary\n  };\n}\n\nexport default connect(mapStateToProps)(ProfilePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ProfilePage\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/ProfilePage.js"],"names":["React","useState","useEffect","Grid","Avatar","Typography","connect","axios","useHistory","swal","makeStyles","Hidden","Box","Icon","mdiCheckBold","mdiPencil","mdiClose","Button","Dialog","DialogContent","AppBar","Paper","Tab","Tabs","PropTypes","TextField","Backdrop","CircularProgress","TabPanel","props","children","value","index","other","marginTop","textAlign","propTypes","node","any","isRequired","a11yProps","id","ProfilePage","useStyles","theme","root","profileAvatar","height","width","margin","profileAvatarLg","usernameDisplay","statsInfo","paper","backgroundColor","user","profileTheme","color","history","classes","openDialog","setOpenDialog","curTab","setTab","curTab2","setTab2","textPost","setTextPost","posting","setPosting","posts","push","method","url","uniqueUserId","then","response","data","dispatch","type","payload","catch","err","console","log","message","handleTextPost","months","date","Date","year","getFullYear","month","getMonth","day","getDate","JSON","stringify","uniquePostId","now","username","context","text","dateString","link","title","community","caption","src","privacy","profilePrivacy","headers","avatar","isVerified","followers","length","following","karma","fontWeight","firstName","lastName","bio","cursor","e","newVal","shrink","target","mapStateToProps","state","userReducer","primary","userThemeReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from '@material-ui/core/Box';\r\nimport Icon from '@mdi/react';\r\nimport { mdiCheckBold, mdiPencil, mdiClose } from '@mdi/js';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction TabPanel(props) {\r\n    //This component will serve as the panel for each individual tab\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div \r\n            hidden={value !== index}\r\n            role='tabpanel' \r\n            id={`tabpanel-${index}`}\r\n            aria-label={`tab-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n            style={{\r\n                marginTop: 100,\r\n            }}\r\n        >\r\n            {value === index && \r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    style={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    {children}\r\n                </Grid>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    value: PropTypes.any.isRequired,\r\n    index: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `tab-${index}`,\r\n        'aria-controls': `tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\n\r\nfunction ProfilePage(props) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            marginTop: 20,\r\n        },\r\n        profileAvatar: {\r\n            height: 128,\r\n            width: 128,\r\n            margin: 'auto',\r\n        },\r\n        profileAvatarLg: {\r\n            height: 168,\r\n            width: 168,\r\n            margin: 'auto',\r\n        },\r\n        usernameDisplay: {\r\n            marginTop: 40,\r\n            margin: 'auto',\r\n        },\r\n        statsInfo: {\r\n            marginTop: 40,\r\n            textAlign: 'center',\r\n        },\r\n        paper: {\r\n            backgroundColor: props.user.profileTheme,\r\n            color: 'rgb(255, 255, 255)',\r\n        },\r\n    }));\r\n    const history = useHistory(); //The history API to access the brower history. \r\n    const classes = useStyles(); //Custom styling.\r\n    const [openDialog, setOpenDialog] = useState(false); //Variable and setter to open and close dialog.\r\n    const [curTab, setTab] = useState(0); //Variable and setter to control proper tab.\r\n    const [curTab2, setTab2] = useState(0);\r\n    const [textPost, setTextPost] = useState(''); //Variable and setter for text post control\r\n    const [posting, setPosting] = useState(false); //Hides dialog AppBar and tabs when a post is posting to the server\r\n    let posts = [];\r\n\r\n    \r\n    useEffect(() => {\r\n        //First, if the user doesn't exist in state, re-route to the login page.\r\n        if(!props.user) {\r\n            history.push('/');\r\n        }\r\n        else if(props.user) {\r\n            //Else, we make an axios call to request the user (an updated version of the user)\r\n            //props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/grab/user/${props.user.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.user) {\r\n                    props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\r\n                    posts = response.data.posts;\r\n                }\r\n                else if(response.data === 'user not found') {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find your profile!',\r\n                        'error',\r\n                    );\r\n                    history.push('/');\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error retreiving your profile. Please try again!',\r\n                    'error',\r\n                );\r\n                history.push('/');\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function handleTextPost() {\r\n        //Function that handles submitting a text post to the server. \r\n        setPosting(true);\r\n        if(!textPost) {\r\n            swal(\r\n                'Uh Oh!',\r\n                'You must enter some text',\r\n                'error',\r\n            );\r\n\r\n            setPosting(false);\r\n        }\r\n        else {\r\n            let months = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sept', 'oct', 'nov', 'dec'];\r\n            let date = new Date();\r\n            let year = date.getFullYear();\r\n            let month = months[date.getMonth()];\r\n            let day = date.getDate();\r\n\r\n            let data = JSON.stringify({\r\n                uniquePostId: Date.now() + props.user.uniqueUserId + props.username,\r\n                uniqueUserId: props.user.uniqueUserId,\r\n                username: props.user.username,\r\n                type: 'text', \r\n                context: 'personal',\r\n                text: textPost,\r\n                dateString: `${month} ${day}, ${year}`,\r\n                link: '',\r\n                title: '',\r\n                community: '',\r\n                caption: '',\r\n                src: '',\r\n                privacy: props.user.profilePrivacy,\r\n            });\r\n\r\n            return axios({\r\n                method: 'POST',\r\n                url: 'http://192.168.0.9:3001/api/upload/text/link/post',\r\n                data: data,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then(response => {\r\n                if(response.data === 'success') {\r\n                    swal(\r\n                        'Great!',\r\n                        'Post was successfully uploaded!',\r\n                        'success',\r\n                    );\r\n                    setPosting(false);\r\n                    setTextPost('');\r\n                    setOpenDialog(false);\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'There was an error uploading that post! Please try again.',\r\n                        'error',\r\n                    )\r\n                    setPosting(false);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error uploading that post! Please try again.',\r\n                    'error',\r\n                );\r\n                setPosting(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid \r\n            className={classes.root}\r\n            container \r\n        >\r\n            <Grid \r\n                item \r\n                container \r\n                xs={12}\r\n            >\r\n                <Grid \r\n                    item \r\n                    xs={12}\r\n                >\r\n                    {/* Below is the avatar for xs and sm screens at 128x128 pixels */}\r\n                    <Hidden \r\n                        mdUp \r\n                    >\r\n                        <Avatar \r\n                            className={classes.profileAvatar} \r\n                            src={`http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`} \r\n                            title={`${props.user.username}`} \r\n                            alt={`${props.user.username}`} \r\n                        />\r\n                    </Hidden>\r\n                    {/* Below will be the avatar for medium screen and up devices */ }\r\n                    <Hidden \r\n                        smDown \r\n                    >\r\n                        <Avatar \r\n                            className={classes.profileAvatarLg}\r\n                            src={`http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`} \r\n                            title={`${props.user.username}`} \r\n                            alt={`${props.user.username}`} \r\n                        />\r\n                    </Hidden>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <Typography \r\n                    variant='h4' \r\n                    component='h4' \r\n                    align='center'\r\n                    className={classes.usernameDisplay} \r\n                >\r\n                    {props.user.username}\r\n                </Typography>\r\n                {props.user.isVerified &&\r\n                    <Typography \r\n                        variant='body1'\r\n                        component='p' \r\n                    >\r\n                        <Icon \r\n                            path={mdiCheckBold} \r\n                            size={1} \r\n                            title='Verified' \r\n                            style={{\r\n                                color: 'rgb(0, 128, 0)'\r\n                            }}\r\n                        /> Verified \r\n                    </Typography>\r\n                }\r\n            </Grid>\r\n            {/* Below will be the Grid to display Followers, Following, and Karma */}\r\n            <Grid \r\n                item \r\n                container \r\n                xs={12} \r\n                spacing={1}\r\n                className={classes.statsInfo}\r\n            >\r\n                <Grid \r\n                    item \r\n                    xs={4} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        Followers \r\n                    </Typography>\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                    >\r\n                        {props.user.followers.length}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={4} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        Following \r\n                    </Typography>\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                    >\r\n                        {props.user.following.length}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={4} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        Karma \r\n                    </Typography>\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                    >\r\n                        {props.user.karma}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            {/* End of the Grid for Followers, Following, and Karma */}\r\n            {/* Below is the Grid to display the users' first and last name */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n                style={{\r\n                    textAlign: 'center',\r\n                }}\r\n            >\r\n                <Typography \r\n                    variant='body1' \r\n                    component='p' \r\n                    style={{\r\n                        fontWeight: 'bold',\r\n                        marginTop: 30,\r\n                    }}\r\n                >\r\n                    {props.user.firstName} {props.user.lastName}\r\n                </Typography>\r\n            </Grid>\r\n            {/* End of the Grid to display the users first and last name */}\r\n            {/* Below is the Grid that stores the users BIO */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n                style={{\r\n                    marginTop: 40,\r\n                    textAlign: 'center',\r\n                }}\r\n            >\r\n                <Typography \r\n                    variant='body2' \r\n                    component='small' \r\n                    justify='start'\r\n                    align='left'\r\n                >\r\n                    {props.user.bio}\r\n                </Typography>\r\n            </Grid>\r\n            {/* This is the end of the Grid for the bio.*/ }\r\n            {/* Below is the grid to display the Button that opens the Dialog for the form for posts */}\r\n            <Grid \r\n                item \r\n                xs={12}\r\n                style={{\r\n                    textAlign: 'center',\r\n                    marginTop: 40,\r\n                }}\r\n            >\r\n                <Button \r\n                    color='primary' \r\n                    variant='outlined'  \r\n                    size='large'\r\n                    onClick={() => setOpenDialog(true)}\r\n                    startIcon={\r\n                        <Icon \r\n                            path={mdiPencil} \r\n                            size={1} \r\n                            title='Post Icon' \r\n                        />\r\n                    }\r\n                >\r\n                    Post \r\n                </Button>\r\n            </Grid>\r\n            {/* The Grid below will store the Dialog and its' content */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <Dialog \r\n                    open={openDialog} \r\n                    fullScreen\r\n                >\r\n                    <DialogContent>\r\n                        <AppBar \r\n                            color='primary'\r\n                            hidden={posting}\r\n                        >\r\n                            <Icon \r\n                                path={mdiClose} \r\n                                size={1} \r\n                                title='Dialog close' \r\n                                style={{\r\n                                    cursor: 'pointer'\r\n                                }}\r\n                                onClick={() => setOpenDialog(false)}\r\n                            />\r\n                            <Tabs \r\n                                value={curTab}\r\n                                onChange={(e, newVal) => setTab(newVal)} \r\n                                centered\r\n                            >\r\n                                <Tab \r\n                                    {...a11yProps(0)} \r\n                                    label='Text' \r\n                                    disabled={posting}\r\n                                />\r\n                                <Tab \r\n                                    {...a11yProps(1)} \r\n                                    label='Photo' \r\n                                    disabled={posting}\r\n                                />\r\n                                <Tab \r\n                                    {...a11yProps(2)}\r\n                                    label='Video' \r\n                                    disabled={posting}\r\n                                />\r\n                            </Tabs>\r\n                        </AppBar>\r\n                        <TabPanel \r\n                            index={0}\r\n                            value={curTab}\r\n                        >\r\n                            <TextField \r\n                                label='Text Post' \r\n                                placeholder='Post a status!' \r\n                                color='primary'\r\n                                variant='outlined' \r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                aria-label='Text Post Field' \r\n                                rows={4} \r\n                                onChange={e => setTextPost(e.target.value)}\r\n                                value={textPost} \r\n                                helperText='Enter a status update!' \r\n                                multiline\r\n                                fullWidth \r\n                                disabled={posting}\r\n                            />\r\n                            <Button \r\n                                style={{\r\n                                    marginTop: 20,\r\n                                }}\r\n                                color='primary' \r\n                                variant='outlined' \r\n                                disabled={posting}\r\n                                onClick={handleTextPost}\r\n                            >\r\n                                {posting ? <CircularProgress /> : 'post'}\r\n                            </Button>\r\n                        </TabPanel>\r\n                        <TabPanel \r\n                            index={1} \r\n                            value={curTab} \r\n                        >\r\n                            Photos \r\n                        </TabPanel>\r\n                        <TabPanel \r\n                            index={2} \r\n                            value={curTab} \r\n                        >\r\n                            Videos \r\n                        </TabPanel>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Grid>\r\n            {/* Below will begin the tab panels for the posts, about, and events tabs */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <Paper \r\n                    className={classes.paper}\r\n                >\r\n                    <Tabs \r\n                        value={curTab2} \r\n                        onChange={(e, newVal) => setTab2(newVal)}\r\n                        centered\r\n                    >\r\n                        <Tab \r\n                            label='Posts' \r\n                            {...a11yProps(0)} \r\n                        />\r\n                        <Tab \r\n                            label='About' \r\n                            {...a11yProps(1)} \r\n                        />\r\n                        <Tab \r\n                            label='Events' \r\n                            {...a11yProps(2)} \r\n                        />\r\n                    </Tabs>\r\n                </Paper>\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    style={{\r\n                        marginTop: 40\r\n                    }}\r\n                />\r\n                <TabPanel \r\n                    value={0} \r\n                    index={curTab2} \r\n                >\r\n                    Posts\r\n                </TabPanel>\r\n                <TabPanel \r\n                    value={1} \r\n                    index={curTab2} \r\n                >\r\n                    About\r\n                </TabPanel>\r\n                <TabPanel \r\n                    value={2} \r\n                    index={curTab2} \r\n                >\r\n                    Events\r\n                </TabPanel>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfilePage);\r\n\r\n"]},"metadata":{},"sourceType":"module"}