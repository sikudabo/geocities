{"ast":null,"code":"import _regeneratorRuntime from\"c:/Users/bobma/Downloads/excite-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"c:/Users/bobma/Downloads/excite-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"c:/Users/bobma/Downloads/excite-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useRef,useEffect}from'react';import Card from'@material-ui/core/Card';import CardContent from'@material-ui/core/CardContent';import CardActions from'@material-ui/core/CardActions';import Box from'@material-ui/core/Box';import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';import Typography from'@material-ui/core/Typography';import Button from'@material-ui/core/Button';import axios from'axios';import swal from'sweetalert';import Backdrop from'@material-ui/core/Backdrop';import CircularProgress from'@material-ui/core/CircularProgress';import{makeStyles}from'@material-ui/core/styles';var useStyles=makeStyles(function(theme){return{root:{textAlign:'center',padding:theme.spacing(2)},card:{maxWidth:450,margin:'auto'},signUpBtn:{backgroundColor:'rgb(255, 255, 255)',color:'rgb(0, 32, 91)',marginLeft:'auto'}};});export default function Login(props){var classes=useStyles();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),open=_useState6[0],setOpen=_useState6[1];var formRef=useRef(null);var regularExpressions={usernameExpression:/^\\w+$/,alphaStartRe:/^[A-Za-z]+$/};useEffect(function(){//The validation rule below ensures a username and password have at least 6 characters.\nValidatorForm.addValidationRule('enoughCharacters',function(value){if(value.length<6){return false;}else{return true;}});//The validation rule below ensures that a username only containers letters, numbers and underscores.\nValidatorForm.addValidationRule('usernameRe',function(value){if(!regularExpressions.usernameExpression.test(value)){return false;}else{return true;}});ValidatorForm.addValidationRule('alphaStartRe',function(value){if(!regularExpressions.alphaStartRe.test(value.charAt(0))){return false;}else{return true;}});},[]);function handleUsernameChange(e){setUsername(e.target.value);}function handlePasswordChange(e){setPassword(e.target.value);}function enterPress(e){/*This function will handle an \"enter\" key press. If the user presses enter \r\n        while they are in the password TextField box, they will trigger the \r\n        sendLoginData function \r\n        */if(e.charCode===13){sendLoginData();}}function preventSpace(e){//This function will prevent spaces when the user enters a username.\n//It is triggered with an onKeyDown event.\nif(e.keyCode===32){e.preventDefault();return;}}function sendLoginData(){return _sendLoginData.apply(this,arguments);}function _sendLoginData(){_sendLoginData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var isValid,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return formRef.current.isFormValid();case 2:isValid=_context.sent;if(isValid){_context.next=6;break;}swal('Uh oh','Make sure you filled out the log in form properly!','error');return _context.abrupt(\"return\",false);case 6:if(!(username.length<6)){_context.next=12;break;}swal('Uh oh!','Username must be at least 6 characters long!','error');setOpen(false);return _context.abrupt(\"return\");case 12:if(!(password.length<6)){_context.next=18;break;}swal('Uh oh!','Password must be at least 6 characters long!','error');setOpen(false);return _context.abrupt(\"return\");case 18:data=JSON.stringify({username:username,password:password});return _context.abrupt(\"return\",axios({method:'post',data:data,url:'http://192.168.0.9:3001/api/login',headers:{'Content-Type':'application/json'}}).then(function(response){if(response.data==='success'){setOpen(false);swal('Great!','Successfully logged in','success');}else if(response.data==='user not found'){setOpen(false);swal('Uh oh!','We could not find that username! Please try again. If you forgot your username, press the \"FORGOT USERNAME OR PASSWORD\" button below.','error');}else if(response.data==='invalid password'){setOpen(false);swal('Uh oh!','That password was invalid. Please try again. If you forgot your password, press the \"FORGOT USERNAME OR PASSWORD\" button below.','error');}}).catch(function(err){setOpen(false);console.log(err.message);swal('Uh oh!','There was an error logging you in. Please try again!','error');}));case 20:case\"end\":return _context.stop();}}},_callee);}));return _sendLoginData.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsxs(Backdrop,{open:open,children:[/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}),/*#__PURE__*/_jsx(Box,{mt:2,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"textSecondary\",component:\"p\",children:\"Logging in\"})})]}),/*#__PURE__*/_jsxs(Card,{className:classes.card,hidden:open,children:[/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{mb:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",children:\"Welcome to GeoCities!\"}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",component:\"span\",children:\"Log in\"})]}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(ValidatorForm,{ref:formRef,onSubmit:function onSubmit(e){return e.preventDefault();},children:[/*#__PURE__*/_jsx(Box,{mb:3,children:/*#__PURE__*/_jsx(TextValidator,{variant:\"outlined\",label:\"Username\",placeholder:\"Username\",color:\"primary\",value:username,onChange:handleUsernameChange,onKeyDown:preventSpace,type:\"username\",helperText:\"Username must be at least 6 characters\",validators:['enoughCharacters','usernameRe','alphaStartRe','required'],errorMessages:['Username must be at least 6 characters','Username can only contain letters, numbers and underscores','Username must start with a letter','Must enter a username'],fullWidth:true,required:true})}),/*#__PURE__*/_jsx(TextValidator,{variant:\"outlined\",label:\"Password\",placeholder:\"Password\",color:\"primary\",value:password,onChange:handlePasswordChange,onKeyPress:enterPress,type:\"password\",helperText:\"Password must be at least 6 characters\",validators:['enoughCharacters','required'],errorMessages:['Password must be at least 6 characters','Must enter a password'],fullWidth:true,required:true})]})})]}),/*#__PURE__*/_jsxs(CardActions,{children:[/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",onClick:sendLoginData,children:\"Log in\"}),/*#__PURE__*/_jsx(Button,{className:classes.signUpBtn,variant:\"contained\",style:{marginLeft:'auto'},children:\"Sign up\"})]}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Button,{color:\"primary\",children:\"Forgot username or password?\"})})})]})]});}","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/Login.js"],"names":["React","useState","useRef","useEffect","Card","CardContent","CardActions","Box","ValidatorForm","TextValidator","Typography","Button","axios","swal","Backdrop","CircularProgress","makeStyles","useStyles","theme","root","textAlign","padding","spacing","card","maxWidth","margin","signUpBtn","backgroundColor","color","marginLeft","Login","props","classes","username","setUsername","password","setPassword","open","setOpen","formRef","regularExpressions","usernameExpression","alphaStartRe","addValidationRule","value","length","test","charAt","handleUsernameChange","e","target","handlePasswordChange","enterPress","charCode","sendLoginData","preventSpace","keyCode","preventDefault","current","isFormValid","isValid","data","JSON","stringify","method","url","headers","then","response","catch","err","console","log","message"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Box from '@material-ui/core/Box';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        textAlign: 'center',\r\n        padding: theme.spacing(2),\r\n    },\r\n    card: {\r\n        maxWidth: 450,\r\n        margin: 'auto',\r\n    },\r\n    signUpBtn: {\r\n        backgroundColor: 'rgb(255, 255, 255)',\r\n        color: 'rgb(0, 32, 91)',\r\n        marginLeft: 'auto',\r\n    },\r\n}));\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const formRef = useRef(null);\r\n    const regularExpressions = {\r\n        usernameExpression: /^\\w+$/,\r\n        alphaStartRe: /^[A-Za-z]+$/,\r\n    }\r\n\r\n    useEffect(() => {\r\n        //The validation rule below ensures a username and password have at least 6 characters.\r\n        ValidatorForm.addValidationRule('enoughCharacters', value => {\r\n            if(value.length < 6) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n\r\n        //The validation rule below ensures that a username only containers letters, numbers and underscores.\r\n        ValidatorForm.addValidationRule('usernameRe', value => {\r\n            if(!regularExpressions.usernameExpression.test(value)) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n\r\n        ValidatorForm.addValidationRule('alphaStartRe', value => {\r\n            if(!regularExpressions.alphaStartRe.test(value.charAt(0))) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n\r\n    }, []);\r\n\r\n    function handleUsernameChange(e) {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    function handlePasswordChange(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    function enterPress(e) {\r\n        /*This function will handle an \"enter\" key press. If the user presses enter \r\n        while they are in the password TextField box, they will trigger the \r\n        sendLoginData function \r\n        */\r\n        if(e.charCode === 13) {\r\n            sendLoginData();\r\n        }\r\n    }\r\n\r\n    function preventSpace(e) {\r\n        //This function will prevent spaces when the user enters a username.\r\n        //It is triggered with an onKeyDown event.\r\n        if(e.keyCode === 32) {\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function sendLoginData() {\r\n        //This function will handle sending the login data to the server with axios \r\n        \r\n        let isValid = await formRef.current.isFormValid();\r\n        if(!isValid) {\r\n            swal(\r\n                'Uh oh',\r\n                'Make sure you filled out the log in form properly!',\r\n                'error',\r\n            );\r\n            return false;\r\n        }\r\n        if(username.length < 6) {\r\n            swal(\r\n                'Uh oh!',\r\n                'Username must be at least 6 characters long!',\r\n                'error',\r\n            );\r\n            setOpen(false);\r\n            return;\r\n        }\r\n        else if(password.length < 6) {\r\n            swal(\r\n                'Uh oh!',\r\n                'Password must be at least 6 characters long!',\r\n                'error',\r\n            );\r\n            setOpen(false);\r\n            return;\r\n        }\r\n        else {\r\n            let data = JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            });\r\n\r\n            return axios({\r\n                method: 'post',\r\n                data: data,\r\n                url: 'http://192.168.0.9:3001/api/login',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }).then(response => {\r\n                if(response.data === 'success') {\r\n                    setOpen(false);\r\n                    swal(\r\n                        'Great!',\r\n                        'Successfully logged in',\r\n                        'success',\r\n                    );\r\n                }\r\n                else if(response.data === 'user not found') {\r\n                    setOpen(false);\r\n                    swal(\r\n                        'Uh oh!',\r\n                        'We could not find that username! Please try again. If you forgot your username, press the \"FORGOT USERNAME OR PASSWORD\" button below.',\r\n                        'error',\r\n                    );\r\n                }\r\n                else if(response.data === 'invalid password') {\r\n                    setOpen(false);\r\n                    swal(\r\n                        'Uh oh!',\r\n                        'That password was invalid. Please try again. If you forgot your password, press the \"FORGOT USERNAME OR PASSWORD\" button below.',\r\n                        'error',\r\n                    );\r\n                }\r\n            }).catch(err => {\r\n                setOpen(false);\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh oh!',\r\n                    'There was an error logging you in. Please try again!',\r\n                    'error',\r\n                )\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={classes.root} \r\n        >\r\n            <Backdrop \r\n                open={open}\r\n            >\r\n                <CircularProgress \r\n                    color='primary' \r\n                />\r\n                <Box \r\n                    mt={2} \r\n                >\r\n                    <Typography \r\n                        variant='body1'\r\n                        color='textSecondary' \r\n                        component='p' \r\n                    >\r\n                        Logging in\r\n                    </Typography>\r\n                </Box>\r\n            </Backdrop>\r\n            <Card \r\n                className={classes.card}\r\n                hidden={open}\r\n            >\r\n                <CardContent>\r\n                    <Box \r\n                        mb={4} \r\n                    >\r\n                        <Typography \r\n                            variant='h6'\r\n                            component='h6' \r\n                        >\r\n                            Welcome to GeoCities!\r\n                        </Typography>\r\n                        <Typography \r\n                            variant='subtitle1' \r\n                            component='span' \r\n                        >\r\n                            Log in \r\n                        </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                        <ValidatorForm \r\n                            ref={formRef}\r\n                            onSubmit={e => e.preventDefault()}\r\n                        >\r\n                            <Box \r\n                                mb={3}\r\n                            >\r\n                                <TextValidator\r\n                                    variant='outlined' \r\n                                    label='Username'\r\n                                    placeholder='Username'\r\n                                    color='primary'\r\n                                    value={username}\r\n                                    onChange={handleUsernameChange}\r\n                                    onKeyDown={preventSpace}\r\n                                    type='username'\r\n                                    helperText='Username must be at least 6 characters'\r\n                                    validators={['enoughCharacters', 'usernameRe', 'alphaStartRe', 'required']}\r\n                                    errorMessages={['Username must be at least 6 characters', 'Username can only contain letters, numbers and underscores', 'Username must start with a letter', 'Must enter a username']}\r\n                                    fullWidth\r\n                                    required\r\n                                />\r\n                            </Box>\r\n                            <TextValidator\r\n                                variant='outlined' \r\n                                label='Password'\r\n                                placeholder='Password'\r\n                                color='primary'\r\n                                value={password} \r\n                                onChange={handlePasswordChange}\r\n                                onKeyPress={enterPress}\r\n                                type='password' \r\n                                helperText='Password must be at least 6 characters'\r\n                                validators={['enoughCharacters', 'required']}\r\n                                errorMessages={['Password must be at least 6 characters', 'Must enter a password']}\r\n                                fullWidth \r\n                                required\r\n                            />\r\n                        </ValidatorForm>\r\n                    </Box>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button \r\n                        color='primary' \r\n                        variant='contained' \r\n                        onClick={sendLoginData}\r\n                    >\r\n                        Log in \r\n                    </Button>\r\n                    <Button \r\n                        className={classes.signUpBtn} \r\n                        variant='contained' \r\n                        style={{\r\n                            marginLeft: 'auto',\r\n                        }}\r\n                    >\r\n                        Sign up\r\n                    </Button>\r\n                </CardActions>\r\n                <CardContent>\r\n                    <Box>\r\n                        <Button \r\n                            color='primary' \r\n                        >\r\n                            Forgot username or password?\r\n                        </Button>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}