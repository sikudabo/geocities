{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\Community.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Avatar from '@material-ui/core/Avatar';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Hidden from '@material-ui/core/Hidden';\nimport * as _ from 'underscore';\nimport { connect } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 100\n  },\n  centerContent: {\n    margin: 'auto',\n    textAlign: 'center'\n  },\n  nameGrid: {\n    margin: 'auto',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  avatarLg: {\n    height: 168,\n    width: 168,\n    margin: 'auto'\n  },\n  avatarSm: {\n    height: 128,\n    width: 128,\n    margin: 'auto'\n  }\n}));\n\nfunction Community(props) {\n  _s();\n\n  const classes = useStyles(); //Custom styles for the component. \n\n  const history = useHistory(); //Window history API.\n\n  const params = useParams(); //Access url parameters. \n\n  const formRef = useRef(null); //Ref for validator form when we upload posts.\n\n  const [community, setCommunity] = useState(null); //This variable and setter will manipulate community.\n\n  const [joinSending, setJoinSending] = useState(false); //Will disable the button while we send a join or request join to the server.\n\n  useEffect(() => {\n    //First we need to fetch the community with axios. \n    if (true) {\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/fetch/community/${params.communityName}`\n      }).then(response => {\n        if (response.data.community) {\n          setCommunity(response.data.community);\n          props.dispatch({\n            type: 'ThemeChange',\n            payload: response.data.community.communityTheme\n          }); //Update the theme to match the community theme.\n\n          props.dispatch({\n            type: 'VisitorPosts/UpdatePosts',\n            payload: response.data.posts\n          }); //Update the posts to match what a visitor viewing these posts will see.\n          //Now determine if the mainUser is in the blockList, and re-route to the previous page if they are. \n\n          if (props.mainUser !== null) {\n            if (_.find(response.data.community.blockList, person => person.uniqueUserId === props.mainUser.uniqueUserId)) {\n              swal('Uh Oh!', 'You are blocked from this community!', 'error');\n              history.goBack(1);\n            }\n          }\n        } else {\n          swal('Uh Oh!', 'We could not find that community!', 'error');\n          history.goBack(1);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error finding that community! Please try again.', 'error');\n        history.goBack(1);\n      });\n    }\n  }, []);\n\n  function publicJoin() {\n    //Function that will enable a member to join a public community. \n    let data = JSON.stringify({\n      username: props.mainUser.username,\n      uniqueUserId: props.mainUser.uniqueUserId,\n      name: community.name\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/public/join/community',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data.result === 'success') {\n        swal('Great!', 'Successfully joined community!', 'success');\n        setJoinSending(false);\n        setCommunity(response.data.community);\n      } else {\n        swal('Uh Oh!', 'There was an error with joining this community! Please try again', 'error');\n        setJoinSending(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error joining this community! Please try again', 'error');\n      setJoinSending(false);\n    });\n  }\n\n  if (community !== null) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.root,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.centerContent,\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatarLg,\n            src: `http://192.168.0.9:3001/api/get-photo/${community.avatar}`,\n            alt: `${community.name} avatar`,\n            title: `${community.name} avatar`,\n            variant: \"square\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          mdUp: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: `http://192.168.0.9:3001/api/get-photo/${community.avatar}`,\n            className: classes.avatarSm,\n            title: `${community.name} avatar`,\n            alt: `${community.name} avatar`,\n            variant: \"square\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.nameGrid,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          align: \"center\",\n          children: community.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.nameGrid,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          justify: \"left\",\n          children: community.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          margin: 'auto',\n          textAlign: 'center',\n          marginTop: 20\n        },\n        children: props.mainUser !== null && !_.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.communityPrivacy === 'public' && community.moderator.uniqueUserId !== props.mainUser.uniqueUserId && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: publicJoin,\n          disabled: joinSending,\n          children: joinSending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 44\n          }, this) : 'join'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  } else {\n    //If the community is null, simply return a Backdrop with a CircularProgress inside \n    return /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: true,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Community, \"H7G/fXBbuu3O+rUvMVhITQCOMio=\", false, function () {\n  return [useStyles, useHistory, useParams];\n});\n\n_c = Community;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user,\n    primary: state.userThemeReducer.primary,\n    posts: state.visitorPostsReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(Community);\n\nvar _c;\n\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/Community.js"],"names":["React","useState","useEffect","useRef","Grid","Typography","Paper","Tabs","Tab","Avatar","Backdrop","CircularProgress","List","ListItem","Divider","Button","axios","swal","Dialog","AppBar","Hidden","_","connect","useHistory","useParams","makeStyles","useStyles","root","marginTop","centerContent","margin","textAlign","nameGrid","avatarLg","height","width","avatarSm","Community","props","classes","history","params","formRef","community","setCommunity","joinSending","setJoinSending","method","url","communityName","then","response","data","dispatch","type","payload","communityTheme","posts","mainUser","find","blockList","person","uniqueUserId","goBack","catch","err","console","log","message","publicJoin","JSON","stringify","username","name","headers","result","avatar","title","members","member","communityPrivacy","moderator","mapStateToProps","state","userReducer","user","primary","userThemeReducer","visitorPostsReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport * as _ from 'underscore';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom'; \r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        marginTop: 100,\r\n    },\r\n    centerContent: {\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n    },\r\n    nameGrid: {\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        marginTop: 20,\r\n    },\r\n    avatarLg: {\r\n        height: 168,\r\n        width: 168,\r\n        margin: 'auto',\r\n    },\r\n    avatarSm: {\r\n        height: 128,\r\n        width: 128,\r\n        margin: 'auto',\r\n    },\r\n}));\r\n\r\n\r\nfunction Community(props) {\r\n    const classes = useStyles(); //Custom styles for the component. \r\n    const history = useHistory(); //Window history API.\r\n    const params = useParams(); //Access url parameters. \r\n    const formRef = useRef(null); //Ref for validator form when we upload posts.\r\n    const [community, setCommunity] = useState(null); //This variable and setter will manipulate community.\r\n    const [joinSending, setJoinSending] = useState(false); //Will disable the button while we send a join or request join to the server.\r\n\r\n    useEffect(() => {\r\n        //First we need to fetch the community with axios. \r\n        if(true) {\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/fetch/community/${params.communityName}`,\r\n            }).then(response => {\r\n                if(response.data.community) {\r\n                    setCommunity(response.data.community);\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.community.communityTheme}); //Update the theme to match the community theme.\r\n                    props.dispatch({type: 'VisitorPosts/UpdatePosts', payload: response.data.posts}); //Update the posts to match what a visitor viewing these posts will see.\r\n                    //Now determine if the mainUser is in the blockList, and re-route to the previous page if they are. \r\n                    if(props.mainUser !== null) {\r\n                        if(_.find(response.data.community.blockList, person => person.uniqueUserId === props.mainUser.uniqueUserId)) {\r\n                            swal(\r\n                                'Uh Oh!',\r\n                                'You are blocked from this community!',\r\n                                'error',\r\n                            );\r\n                            history.goBack(1);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find that community!',\r\n                        'error',\r\n                    );\r\n                    history.goBack(1);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error finding that community! Please try again.',\r\n                    'error',\r\n                );\r\n                history.goBack(1);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function publicJoin() {\r\n        //Function that will enable a member to join a public community. \r\n        let data = JSON.stringify({\r\n            username: props.mainUser.username,\r\n            uniqueUserId: props.mainUser.uniqueUserId,\r\n            name: community.name,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/public/join/community',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            if(response.data.result === 'success') {\r\n                swal(\r\n                    'Great!',\r\n                    'Successfully joined community!',\r\n                    'success',\r\n                );\r\n                setJoinSending(false);\r\n                setCommunity(response.data.community);\r\n            }\r\n            else {\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error with joining this community! Please try again',\r\n                    'error',\r\n                );\r\n                setJoinSending(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error joining this community! Please try again',\r\n                'error',\r\n            );\r\n            setJoinSending(false);\r\n        });\r\n    }\r\n\r\n    if(community !== null) {\r\n        return (\r\n            <Grid \r\n                className={classes.root} \r\n                container \r\n            >\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    className={classes.centerContent} \r\n                >\r\n                    <Hidden \r\n                        smDown \r\n                    >\r\n                        <Avatar \r\n                            className={classes.avatarLg} \r\n                            src={`http://192.168.0.9:3001/api/get-photo/${community.avatar}`}\r\n                            alt={`${community.name} avatar`}\r\n                            title={`${community.name} avatar`}\r\n                            variant='square'\r\n                        />\r\n                    </Hidden>\r\n                    <Hidden \r\n                        mdUp \r\n                    >\r\n                        <Avatar \r\n                            src={`http://192.168.0.9:3001/api/get-photo/${community.avatar}`}\r\n                            className={classes.avatarSm} \r\n                            title={`${community.name} avatar`}\r\n                            alt={`${community.name} avatar`}\r\n                            variant='square'\r\n                        />\r\n                    </Hidden>\r\n                </Grid>\r\n                {/* The grid below will store the name of the community */}\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    className={classes.nameGrid} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                        align='center' \r\n                    >\r\n                        {community.name}\r\n                    </Typography>\r\n                </Grid>\r\n                {/* End of the grid to display the community name */}\r\n                {/* Below is the Grid to display the title of the community */}\r\n                <Grid \r\n                    item \r\n                    xs={12}\r\n                    className={classes.nameGrid} \r\n                >\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p'\r\n                        justify='left' \r\n                    >\r\n                        {community.title}\r\n                    </Typography>\r\n                </Grid>\r\n                {/* End of the Grid to display the title of the community */}\r\n                {/* Now create a button for the user if they are logged in, not a member, and the community is public */}\r\n                <Grid \r\n                    item \r\n                    xs={12}\r\n                    style={{\r\n                        margin: 'auto',\r\n                        textAlign: 'center',\r\n                        marginTop: 20,\r\n                    }}\r\n                >\r\n                    {/* Button if the user is logged in, not a member, and the community is public */}\r\n                    {(props.mainUser !== null && !_.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.communityPrivacy === 'public' && community.moderator.uniqueUserId !== props.mainUser.uniqueUserId) &&\r\n                        <Button \r\n                            color='primary' \r\n                            variant='contained' \r\n                            onClick={publicJoin}\r\n                            disabled={joinSending}\r\n                        >\r\n                            {joinSending ? <CircularProgress color='primary' /> : 'join'}\r\n                        </Button>\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n    else {\r\n        //If the community is null, simply return a Backdrop with a CircularProgress inside \r\n        return (\r\n            <Backdrop \r\n                open={true} \r\n            >\r\n                <CircularProgress \r\n                    color='primary' \r\n                />\r\n            </Backdrop>\r\n        );\r\n    }  \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n        posts: state.visitorPostsReducer.posts,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Community);"]},"metadata":{},"sourceType":"module"}