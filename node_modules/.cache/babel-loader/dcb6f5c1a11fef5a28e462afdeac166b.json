{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\UserPostsCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Icon from '@mdi/react';\nimport { mdiThumbUp, mdiThumbUpOutline, mdiComment, mdiCommentOutline, mdiChevronDown, mdiChevronUp, mdiDelete, mdiSend } from '@mdi/js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport * as _ from 'underscore';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 600,\n    margin: 'auto',\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction UserPostsCard(props) {\n  _s();\n\n  const classes = useStyles(); //Custom styles for the component\n\n  const formRef = useRef(null); //Ref for the validator form\n\n  const [expanded, setExpanded] = useState(false); //This expands the validator form\n\n  const [comment, setComment] = useState('');\n  const [commentSending, setCommentSending] = useState(false);\n  useEffect(() => {\n    ValidatorForm.addValidationRule('notEmpty', v => {\n      if (v.length < 1) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }, []);\n\n  async function sendComment() {\n    setCommentSending(true);\n    let formValid = await formRef.current.isFormValid();\n\n    if (!formValid) {\n      swal('Uh Oh!', 'Make sure you filled out the comment form correctly!', 'error');\n      setCommentSending(false);\n    } else {\n      let date = new Date();\n      let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n      let day = date.getDate();\n      let year = date.getFullYear();\n      let month = date.getMonth();\n      let dateString = `${months[month]} ${day}, ${year}`;\n      let data = {\n        uniqueCommentId: Date.now() + 'comment' + props.mainUser.uniqueUserId + props.post.uniqueUserId,\n        uniqueUserId: props.mainUser.uniqueUserId,\n        username: props.mainUser.username,\n        dateString: dateString,\n        text: comment,\n        uniquePosterId: props.post.uniqueUserId,\n        uniquePostId: props.post.uniquePostId\n      };\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.9:3001/api/add/comment',\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.data.posts) {\n          props.dispatch({\n            type: 'user/updateUser',\n            payload: response.data.user\n          });\n          props.dispatch({\n            type: 'userPosts/updatePosts',\n            payload: response.data.posts\n          });\n          setCommentSending(false);\n          setComment('');\n          swal('Great!', 'Comment successfully sent!', 'success');\n        } else {\n          swal('Uh Oh!', 'There was an error sending that comment! Please try again.', 'error');\n          setCommentSending(false);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error sending that comment! Please try again.', 'error');\n        setCommentSending(false);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        children: props.post.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this),\n      subheader: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        component: \"span\",\n        color: \"textSecondary\",\n        children: props.post.dateString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this),\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: `http://192.168.0.9:3001/api/get/avatar/by/id/${props.post.uniqueUserId}`,\n        alt: `${props.post.username}`,\n        title: `${props.post.username}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        component: \"p\",\n        children: props.post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: props.post.likes.includes(props.mainUser) ? mdiThumbUp : mdiThumbUpOutline,\n          size: 1,\n          title: \"Post like button\",\n          \"aria-label\": \"Post like button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.post.likes.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: props.post.likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: _.find(props.post.comments, comment => comment.uniqueUserId === props.mainUser.uniqueUserId) ? mdiComment : mdiCommentOutline,\n          size: 1,\n          title: \"Comment button\",\n          \"aria-label\": \"Comment button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.post.comments.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: props.post.comments.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.post.uniqueUserId === props.mainUser.uniqueUserId && /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            path: mdiDelete,\n            size: 1,\n            title: \"Delete button\",\n            \"aria-label\": \"Delete button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          marginLeft: 'auto'\n        },\n        onClick: () => setExpanded(!expanded),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          path: expanded ? mdiChevronUp : mdiChevronDown,\n          size: 1,\n          title: expanded ? 'Expand less' : 'Expand more',\n          \"aria-label\": expanded ? 'Expand less' : 'Expand more'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: expanded,\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(ValidatorForm, {\n          ref: formRef,\n          onSubmit: e => e.preventDefault(),\n          children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Comment\",\n            placeholder: \"Add a comment...\",\n            variant: \"outlined\",\n            color: \"primary\",\n            helperText: \"Add a comment\",\n            value: comment,\n            onChange: e => setComment(e.target.value),\n            validator: ['notEmpty'],\n            errorMessages: ['You must enter some text to send a comment!'],\n            InputLabelProps: {\n              shrink: true\n            },\n            rows: 4,\n            multiline: true,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n              path: mdiSend,\n              size: 1,\n              title: \"Send icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this),\n            \"aria-label\": \"Send comment button\",\n            disabled: commentSending,\n            onClick: sendComment,\n            children: commentSending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 47\n            }, this) : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          children: props.post.comments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                alignItems: \"flex-start\",\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.9:3001/api/get/avatar/by/id/${comment.uniqueUserId}`,\n                    title: `${comment.username}`,\n                    alt: `${comment.username}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"h6\",\n                      children: comment.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      component: \"span\",\n                      color: \"textSecondary\",\n                      children: comment.dateString\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 53\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    component: \"p\",\n                    children: comment.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 41\n              }, this), index < comments.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserPostsCard, \"jZtACMih2x+bvr8ZydtDG1beEnU=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserPostsCard;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user,\n    posts: state.userPostsReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(UserPostsCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPostsCard\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/UserPostsCard.js"],"names":["React","useState","useRef","useEffect","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","Collapse","ValidatorForm","TextValidator","Button","Divider","IconButton","CircularProgress","Icon","mdiThumbUp","mdiThumbUpOutline","mdiComment","mdiCommentOutline","mdiChevronDown","mdiChevronUp","mdiDelete","mdiSend","makeStyles","axios","_","connect","swal","List","ListItem","ListItemAvatar","ListItemText","useStyles","theme","card","maxWidth","margin","padding","spacing","backgroundColor","palette","background","paper","UserPostsCard","props","classes","formRef","expanded","setExpanded","comment","setComment","commentSending","setCommentSending","addValidationRule","v","length","sendComment","formValid","current","isFormValid","date","Date","months","day","getDate","year","getFullYear","month","getMonth","dateString","data","uniqueCommentId","now","mainUser","uniqueUserId","post","username","text","uniquePosterId","uniquePostId","method","url","headers","then","response","posts","dispatch","type","payload","user","catch","err","console","log","message","likes","includes","find","comments","marginLeft","e","preventDefault","target","value","shrink","marginTop","map","index","mapStateToProps","state","userReducer","userPostsReducer"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Icon from '@mdi/react';\r\nimport { mdiThumbUp, mdiThumbUpOutline, mdiComment, mdiCommentOutline, mdiChevronDown, mdiChevronUp, mdiDelete, mdiSend } from '@mdi/js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport * as _ from 'underscore';\r\nimport { connect } from 'react-redux';\r\nimport swal from 'sweetalert';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: 600,\r\n        margin: 'auto',\r\n        padding: theme.spacing(2),\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nfunction UserPostsCard(props) {\r\n    const classes = useStyles(); //Custom styles for the component\r\n    const formRef = useRef(null); //Ref for the validator form\r\n    const [expanded, setExpanded] = useState(false); //This expands the validator form\r\n    const [comment, setComment] = useState('');\r\n    const [commentSending, setCommentSending] = useState(false);\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('notEmpty', v => {\r\n            if(v.length < 1) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    async function sendComment() {\r\n        setCommentSending(true);\r\n        let formValid = await formRef.current.isFormValid();\r\n        if(!formValid) {\r\n            swal(\r\n                'Uh Oh!',\r\n                'Make sure you filled out the comment form correctly!',\r\n                'error',\r\n            );\r\n            setCommentSending(false);\r\n        }\r\n        else {\r\n            let date = new Date();\r\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n            let day = date.getDate();\r\n            let year = date.getFullYear();\r\n            let month = date.getMonth();\r\n            let dateString = `${months[month]} ${day}, ${year}`;\r\n\r\n            let data = {\r\n                uniqueCommentId: Date.now() + 'comment' + props.mainUser.uniqueUserId + props.post.uniqueUserId,\r\n                uniqueUserId: props.mainUser.uniqueUserId,\r\n                username: props.mainUser.username,\r\n                dateString: dateString,\r\n                text: comment,\r\n                uniquePosterId: props.post.uniqueUserId,\r\n                uniquePostId: props.post.uniquePostId,\r\n            }\r\n\r\n            return axios({\r\n                method: 'POST',\r\n                url: 'http://192.168.0.9:3001/api/add/comment',\r\n                data: data,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }).then(response => {\r\n                if(response.data.posts) {\r\n                    props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                    props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                    setCommentSending(false);\r\n                    setComment('');\r\n                    swal(\r\n                        'Great!',\r\n                        'Comment successfully sent!',\r\n                        'success',\r\n                    );\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'There was an error sending that comment! Please try again.',\r\n                        'error',\r\n                    );\r\n                    setCommentSending(false);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error sending that comment! Please try again.',\r\n                    'error',\r\n                );\r\n                setCommentSending(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card \r\n            className={classes.card} \r\n        >\r\n            <CardHeader \r\n                title={\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        {props.post.username}\r\n                    </Typography>\r\n                }\r\n                subheader={\r\n                    <Typography \r\n                        variant='subtitle1' \r\n                        component='span' \r\n                        color='textSecondary' \r\n                    >\r\n                        {props.post.dateString}\r\n                    </Typography>\r\n                }\r\n                avatar={\r\n                    <Avatar \r\n                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${props.post.uniqueUserId}`}\r\n                        alt={`${props.post.username}`}\r\n                        title={`${props.post.username}`} \r\n                    />\r\n                }\r\n            />\r\n            <CardContent>\r\n                <Typography \r\n                    variant='body2' \r\n                    component='p' \r\n                >\r\n                    {props.post.text}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <IconButton \r\n                    color='primary'\r\n                >\r\n                    <Icon  \r\n                        path={props.post.likes.includes(props.mainUser) ? mdiThumbUp : mdiThumbUpOutline}\r\n                        size={1} \r\n                        title='Post like button'\r\n                        aria-label='Post like button' \r\n                    />\r\n                    <div>\r\n                        {props.post.likes.length > 0 &&\r\n                            <Typography \r\n                                variant='body1' \r\n                                component='p' \r\n                            >\r\n                                {props.post.likes.length}\r\n                            </Typography>\r\n                        }\r\n                    </div>\r\n                </IconButton>\r\n                <IconButton \r\n                    color='primary'\r\n                >\r\n                    <Icon \r\n                        path={_.find(props.post.comments, comment => comment.uniqueUserId === props.mainUser.uniqueUserId) ? mdiComment : mdiCommentOutline} \r\n                        size={1}\r\n                        title='Comment button' \r\n                        aria-label='Comment button' \r\n                    />\r\n                    <div>\r\n                        {props.post.comments.length > 0 &&\r\n                            <Typography \r\n                                variant='body1' \r\n                                component='p' \r\n                            >\r\n                                {props.post.comments.length}\r\n                            </Typography>\r\n                        }\r\n                    </div>\r\n                </IconButton>\r\n                <div>\r\n                    {props.post.uniqueUserId === props.mainUser.uniqueUserId &&\r\n                        <IconButton \r\n                            color='primary' \r\n                        >\r\n                            <Icon \r\n                                path={mdiDelete} \r\n                                size={1} \r\n                                title='Delete button' \r\n                                aria-label='Delete button' \r\n                            />\r\n                        </IconButton>\r\n                    }\r\n                </div>\r\n                <IconButton \r\n                    style={{\r\n                        marginLeft: 'auto' \r\n                    }}\r\n                    onClick={() => setExpanded(!expanded)}\r\n                >\r\n                    <Icon \r\n                        path={expanded ? mdiChevronUp : mdiChevronDown} \r\n                        size={1}\r\n                        title={expanded ? 'Expand less' : 'Expand more'} \r\n                        aria-label={expanded ? 'Expand less' : 'Expand more'} \r\n                    />\r\n                </IconButton>\r\n            </CardActions>\r\n            <Collapse \r\n                in={expanded} \r\n            >\r\n                <Divider />\r\n                <CardContent>\r\n                    <ValidatorForm \r\n                        ref={formRef} \r\n                        onSubmit={e => e.preventDefault()} \r\n                    >\r\n                        <TextValidator \r\n                            label='Comment' \r\n                            placeholder='Add a comment...' \r\n                            variant='outlined' \r\n                            color='primary' \r\n                            helperText='Add a comment' \r\n                            value={comment} \r\n                            onChange={e => setComment(e.target.value)} \r\n                            validator={['notEmpty']}\r\n                            errorMessages={['You must enter some text to send a comment!']}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            rows={4}\r\n                            multiline \r\n                            fullWidth \r\n                        />\r\n                        <Button \r\n                            color='primary' \r\n                            variant='outlined' \r\n                            startIcon={\r\n                                <Icon \r\n                                    path={mdiSend} \r\n                                    size={1} \r\n                                    title='Send icon' \r\n                                />\r\n                            }\r\n                            aria-label='Send comment button' \r\n                            disabled={commentSending}\r\n                            onClick={sendComment}\r\n                        >\r\n                            {commentSending ? <CircularProgress color='primary' /> : 'Send'}\r\n                        </Button>\r\n                    </ValidatorForm>\r\n                    <Divider />\r\n                    <div \r\n                        style={{\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        {props.post.comments.length > 0 &&\r\n                            <div>\r\n                                {props.post.comments.map((comment, index) => (\r\n                                    <div>\r\n                                        <ListItem \r\n                                            key={index} \r\n                                            alignItems='flex-start'\r\n                                        >\r\n                                            <ListItemAvatar>\r\n                                                <Avatar \r\n                                                    src={`http://192.168.0.9:3001/api/get/avatar/by/id/${comment.uniqueUserId}`}\r\n                                                    title={`${comment.username}`}\r\n                                                    alt={`${comment.username}`} \r\n                                                />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText \r\n                                                primary={\r\n                                                    <div>\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                        >\r\n                                                            {comment.username}\r\n                                                        </Typography>\r\n                                                        <Typography \r\n                                                            variant='subtitle1' \r\n                                                            component='span' \r\n                                                            color='textSecondary'\r\n                                                        >\r\n                                                            {comment.dateString}\r\n                                                        </Typography>\r\n                                                    </div>\r\n                                                }\r\n                                                secondary={\r\n                                                    <Typography \r\n                                                        variant='body2' \r\n                                                        component='p' \r\n                                                    >\r\n                                                        {comment.text}\r\n                                                    </Typography>\r\n                                                }\r\n                                            />\r\n                                        </ListItem>\r\n                                        {index < comments.length - 1 &&\r\n                                            <Divider />\r\n                                        }\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        posts: state.userPostsReducer.posts,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserPostsCard);"]},"metadata":{},"sourceType":"module"}