{"ast":null,"code":"import _objectSpread from\"c:/Users/bobma/Downloads/excite-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';var persistConfig={key:'root',storage:storage};var initialState={value:0};function counterReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'counter/increment':return _objectSpread(_objectSpread({},state),{},{value:state.value+1});case'counter/decrement':return _objectSpread(_objectSpread({},state),{},{value:state.value-1});default:return state;}}var persistedReducer=persistReducer(persistConfig,counterReducer);export default persistedReducer;","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/reducers/counterReducer.js"],"names":["persistReducer","storage","persistConfig","key","initialState","value","counterReducer","state","action","type","persistedReducer"],"mappings":"qHAAA,OAASA,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,GAAG,CAAE,MADa,CAElBF,OAAO,CAAPA,OAFkB,CAAtB,CAKA,GAAMG,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,CADU,CAArB,CAIA,QAASC,CAAAA,cAAT,EAAsD,IAA9BC,CAAAA,KAA8B,2DAAtBH,YAAsB,IAARI,CAAAA,MAAQ,2CAClD,OAAOA,MAAM,CAACC,IAAd,EACI,IAAK,mBAAL,CACI,sCACOF,KADP,MAEIF,KAAK,CAAEE,KAAK,CAACF,KAAN,CAAc,CAFzB,GAIJ,IAAK,mBAAL,CACI,sCACOE,KADP,MAEIF,KAAK,CAAEE,KAAK,CAACF,KAAN,CAAc,CAFzB,GAIJ,QACI,MAAOE,CAAAA,KAAP,CAZR,CAcH,CAED,GAAMG,CAAAA,gBAAgB,CAAGV,cAAc,CAACE,aAAD,CAAgBI,cAAhB,CAAvC,CAEA,cAAeI,CAAAA,gBAAf","sourcesContent":["import { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n};\r\n\r\nconst initialState = {\r\n    value: 0,\r\n};\r\n\r\nfunction counterReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case 'counter/increment':\r\n            return {\r\n                ...state,\r\n                value: state.value + 1,\r\n            };\r\n        case 'counter/decrement':\r\n            return {\r\n                ...state,\r\n                value: state.value - 1,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, counterReducer);\r\n\r\nexport default persistedReducer;"]},"metadata":{},"sourceType":"module"}