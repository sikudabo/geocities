{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simeonikudabo/Downloads/geocities/src/components/EventComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiThumbUp, mdiThumbUpOutline, mdiChevronDown, mdiChevronUp, mdiDelete, mdiUsers, mdiAccountGroupOutline as GroupOutline } from '@mdi/js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport * as _ from 'underscore';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useHistory } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 600,\n    margin: 'auto',\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.background.paper\n  },\n  media: {\n    height: 0,\n    padding: '56.25%'\n  },\n  image: {\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}));\n\nfunction EventComponent(props) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [expanded, setExpanded] = useState(false);\n  const [btnUnlike, setBtnUnlike] = useState(false); //Variable and setter for disabling a Button when we interact with the server.\n\n  const [btnAttending, setBtnAttending] = useState(false);\n  const [eventDeleting, setEventDeleting] = useState(false);\n  useEffect(() => {\n    //First, if the user is logged in, update the state primary color. \n    if (props.user !== null) {\n      props.dispatch({\n        type: 'ThemeChange',\n        payload: props.user.profileTheme\n      });\n    }\n  }, []);\n\n  function unLikeEvent() {\n    //This function will be responsible for unliking an event.\n    setBtnUnlike(true);\n    let data = JSON.stringify({\n      uniqueEventId: props.event.uniqueEventId,\n      uniqueUserId: props.user.uniqueUserId\n    });\n    return axios({\n      method: 'POST',\n      url: 'https://www.geocities.cc/api/unlike/event',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      swal('Great!', 'You successfully unliked that post!', 'success');\n      props.setEvents([...response.data.events]);\n      setBtnUnlike(false);\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error unliking that event! Pleaase try again', 'error');\n      setBtnUnlike(false);\n    });\n  }\n\n  function likeEvent() {\n    //This function will handle liking a post. \n    setBtnUnlike(true);\n    let data = JSON.stringify({\n      uniqueUserId: props.user.uniqueUserId,\n      username: props.user.username,\n      uniqueEventId: props.event.uniqueEventId\n    });\n    return axios({\n      method: 'POST',\n      url: 'https://www.geocities.cc/api/like/event',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      swal('Great!', 'You successfully liked that event!', 'success');\n      setBtnUnlike(false);\n      props.setEvents([...response.data.events]);\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error with liking that post!', 'error');\n      setBtnUnlike(false);\n    });\n  }\n\n  function attendEvent() {\n    //This function will enable a user to attend an event. \n    setBtnAttending(true);\n    let data = JSON.stringify({\n      uniqueUserId: props.user.uniqueUserId,\n      username: props.user.username,\n      uniqueEventId: props.event.uniqueEventId\n    });\n    return axios({\n      method: 'POST',\n      url: 'https://www.geocities.cc/api/attend/event',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      swal('Great!', 'You are now attending that event!', 'success');\n      setBtnAttending(false);\n      props.setEvents([...response.data.events]);\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error attending that event! Please try again.', 'error');\n      setBtnAttending(false);\n    });\n  }\n\n  function unAttendEvent() {\n    //This function will enable a user to unAttend an event. \n    setBtnAttending(true);\n    let data = JSON.stringify({\n      uniqueEventId: props.event.uniqueEventId,\n      uniqueUserId: props.user.uniqueUserId\n    });\n    return axios({\n      method: 'POST',\n      url: 'https://www.geocities.cc/api/unattend/event',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      swal('Great!', 'You successfully unattended that event!', 'success');\n      props.setEvents([...response.data.events]);\n      setBtnAttending(false);\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error unattending that event!', 'error');\n      setBtnAttending(false);\n    });\n  }\n\n  function deleteEvent() {\n    //This function will be responsible for deleting an event. \n    setEventDeleting(true);\n    let data = JSON.stringify({\n      uniqueEventId: props.event.uniqueEventId,\n      file: props.event.src\n    });\n    return axios({\n      method: 'POST',\n      url: 'https://www.geocities.cc/api/delete/event',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      swal('Great!', 'You successfully deleted that event!', 'success');\n      props.setEvents([...response.data.events]);\n      setEventDeleting(false);\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error deleting that event! Please try again.', 'error');\n      setEventDeleting(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    id: `${props.event.uniqueEventId}`,\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        children: props.event.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this),\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: `https://www.geocities.cc/api/get/avatar/by/id/${props.event.uniqueUserId}`,\n        alt: `${props.event.username}`,\n        title: `${props.event.username}`,\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: e => history.push(`/geouser/${props.event.uniqueUserId}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: true && /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        src: `https://www.geocities.cc/api/get-photo/${props.event.src}`,\n        title: `Post by ${props.event.username}`,\n        alt: \"GeoCities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        align: \"left\",\n        children: props.event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        component: \"span\",\n        align: \"left\",\n        children: [\"When: \", props.event.dateString, \" at \", props.event.timeString]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        align: \"left\",\n        style: {\n          marginTop: 30\n        },\n        children: props.event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this), props.user !== null && /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        disabled: btnUnlike,\n        onClick: _.find(props.event.likes, like => like.uniqueUserId === props.user.uniqueUserId) ? unLikeEvent : likeEvent,\n        children: [btnUnlike ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n          path: _.find(props.event.likes, like => like.uniqueUserId === props.user.uniqueUserId) ? mdiThumbUp : mdiThumbUpOutline,\n          size: 1,\n          title: \"Like or unlike event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 29\n        }, this), props.event.likes.length > 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n          children: props.event.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: e => setExpanded(!expanded),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: GroupOutline,\n          size: 1,\n          title: \"How many attending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }, this), props.event.attending.length, \" attending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: _.find(props.event.attending, attender => attender.uniqueUserId === props.user.uniqueUserId) ? unAttendEvent : attendEvent,\n        disabled: btnAttending,\n        children: props.user.uniqueUserId !== props.event.uniqueUserId && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: _.find(props.event.attending, attender => attender.uniqueUserId === props.user.uniqueUserId) ? 'unattend' : 'attend'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }, this), props.user.uniqueUserId === props.event.uniqueUserId && /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        disabed: eventDeleting,\n        onClick: deleteEvent,\n        children: eventDeleting ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiDelete,\n          size: 1,\n          title: \"Delete event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: expanded,\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this), props.event.attending.map((attender, index) => /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          marginBottom: index < props.event.attending.length - 1 ? 10 : 0\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: `https://www.geocities.cc/api/get/avatar/by/id/${attender.uniqueUserId}`,\n              title: `${attender.username}`,\n              alt: `${attender.username}`,\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: e => history.push(`/geouser/${attender.uniqueUserId}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              children: attender.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }, this)\n      }, index.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventComponent, \"eu1NJmMKoerEnef3rvt2UsyM+bM=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = EventComponent;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    primary: state.themeReducer.theme\n  };\n}\n\nexport default connect(mapStateToProps)(EventComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"EventComponent\");","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/EventComponent.js"],"names":["React","useState","useEffect","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","Collapse","Button","IconButton","Icon","mdiThumbUp","mdiThumbUpOutline","mdiChevronDown","mdiChevronUp","mdiDelete","mdiUsers","mdiAccountGroupOutline","GroupOutline","makeStyles","axios","_","connect","swal","List","ListItem","ListItemAvatar","ListItemText","useHistory","CircularProgress","Paper","Divider","useStyles","theme","card","maxWidth","margin","padding","spacing","backgroundColor","palette","background","paper","media","height","image","maxHeight","EventComponent","props","classes","history","expanded","setExpanded","btnUnlike","setBtnUnlike","btnAttending","setBtnAttending","eventDeleting","setEventDeleting","user","dispatch","type","payload","profileTheme","unLikeEvent","data","JSON","stringify","uniqueEventId","event","uniqueUserId","method","url","headers","then","response","setEvents","events","catch","err","console","log","message","likeEvent","username","attendEvent","unAttendEvent","deleteEvent","file","src","marginBottom","cursor","e","push","title","dateString","timeString","marginTop","description","find","likes","like","length","attending","attender","map","index","toString","mapStateToProps","state","userReducer","primary","themeReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiThumbUp, mdiThumbUpOutline, mdiChevronDown, mdiChevronUp, mdiDelete, mdiUsers, mdiAccountGroupOutline as GroupOutline } from '@mdi/js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport * as _ from 'underscore';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useHistory } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        maxWidth: 600,\n        margin: 'auto',\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n    },\n    media: {\n        height: 0,\n        padding: '56.25%',\n    },\n    image: {\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n}));\n\nfunction EventComponent(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const [expanded, setExpanded] = useState(false);\n    const [btnUnlike, setBtnUnlike] = useState(false); //Variable and setter for disabling a Button when we interact with the server.\n    const [btnAttending, setBtnAttending] = useState(false);\n    const [eventDeleting, setEventDeleting] = useState(false);\n\n    useEffect(() => {\n        //First, if the user is logged in, update the state primary color. \n        if(props.user !== null) {\n            props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\n        }\n    }, []);\n\n    function unLikeEvent() {\n        //This function will be responsible for unliking an event.\n        setBtnUnlike(true);\n    \n        let data = JSON.stringify({\n            uniqueEventId: props.event.uniqueEventId,\n            uniqueUserId: props.user.uniqueUserId,\n        });\n    \n        return axios({\n            method: 'POST',\n            url: 'https://www.geocities.cc/api/unlike/event',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            swal(\n                'Great!',\n                'You successfully unliked that post!',\n                'success',\n            );\n            props.setEvents([...response.data.events]);\n            setBtnUnlike(false);\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error unliking that event! Pleaase try again',\n                'error',\n            );\n            setBtnUnlike(false);\n        });\n    }\n\n    function likeEvent() {\n        //This function will handle liking a post. \n        setBtnUnlike(true);\n\n        let data = JSON.stringify({\n            uniqueUserId: props.user.uniqueUserId,\n            username: props.user.username,\n            uniqueEventId: props.event.uniqueEventId,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'https://www.geocities.cc/api/like/event',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            swal(\n                'Great!',\n                'You successfully liked that event!',\n                'success',\n            );\n            setBtnUnlike(false);\n            props.setEvents([...response.data.events]);\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error with liking that post!',\n                'error',\n            );\n            setBtnUnlike(false);\n        });\n    }\n\n    function attendEvent() {\n        //This function will enable a user to attend an event. \n        setBtnAttending(true);\n\n        let data = JSON.stringify({\n            uniqueUserId: props.user.uniqueUserId,\n            username: props.user.username,\n            uniqueEventId: props.event.uniqueEventId,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'https://www.geocities.cc/api/attend/event',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            swal(\n                'Great!',\n                'You are now attending that event!',\n                'success',\n            );\n            setBtnAttending(false);\n            props.setEvents([...response.data.events]);\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error attending that event! Please try again.',\n                'error',\n            );\n            setBtnAttending(false);\n        });\n    }\n\n    function unAttendEvent() {\n        //This function will enable a user to unAttend an event. \n        setBtnAttending(true); \n\n        let data = JSON.stringify({\n            uniqueEventId: props.event.uniqueEventId,\n            uniqueUserId: props.user.uniqueUserId,\n        });\n\n        return axios({\n            method: 'POST',\n            url:'https://www.geocities.cc/api/unattend/event',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            swal(\n                'Great!',\n                'You successfully unattended that event!',\n                'success',\n            );\n            props.setEvents([...response.data.events]);\n            setBtnAttending(false);\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error unattending that event!',\n                'error',\n            );\n            setBtnAttending(false);\n        });\n    }\n\n    function deleteEvent() {\n        //This function will be responsible for deleting an event. \n        setEventDeleting(true);\n\n        let data = JSON.stringify({\n            uniqueEventId: props.event.uniqueEventId,\n            file: props.event.src,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'https://www.geocities.cc/api/delete/event',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            swal(\n                'Great!',\n                'You successfully deleted that event!',\n                'success',\n            );\n            props.setEvents([...response.data.events]);\n            setEventDeleting(false);\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error deleting that event! Please try again.',\n                'error',\n            );\n            setEventDeleting(false);\n        });\n    }\n\n    return (\n        <Card \n            className={classes.card} \n            id={`${props.event.uniqueEventId}`}\n            style={{\n                marginBottom: 20,\n            }}\n        >\n            <CardHeader \n                title={\n                    <Typography \n                        variant='h6' \n                        component='h6' \n                    >\n                        {props.event.username}\n                    </Typography>\n                }\n                avatar={\n                    <Avatar \n                        src={`https://www.geocities.cc/api/get/avatar/by/id/${props.event.uniqueUserId}`}\n                        alt={`${props.event.username}`}\n                        title={`${props.event.username}`} \n                        style={{\n                            cursor: 'pointer',\n                        }}\n                        onClick={e => history.push(`/geouser/${props.event.uniqueUserId}`)}\n                    />\n                }\n            />\n             <div>\n                {true &&\n                    <CardMedia \n                        component='img'\n                        src={`https://www.geocities.cc/api/get-photo/${props.event.src}`}\n                        title={`Post by ${props.event.username}`}\n                        alt='GeoCities'\n                    />\n                }\n            </div>\n            <CardContent>\n                <Typography \n                    variant='h6' \n                    component='h6' \n                    align='left' \n                >\n                    {props.event.title} \n                </Typography>\n                <br />\n                <Typography \n                    variant='subtitle1' \n                    component='span' \n                    align='left'\n                >\n                    When: {props.event.dateString} at {props.event.timeString}\n                </Typography>\n                <br />\n                <Typography \n                    variant='body1' \n                    component='p' \n                    align='left' \n                    style={{\n                        marginTop: 30,\n                    }}\n                >\n                    {props.event.description} \n                </Typography>\n            </CardContent>\n            {props.user !== null &&\n                <CardActions>\n                    <IconButton  \n                        color='primary'\n                        disabled={btnUnlike}\n                        onClick={_.find(props.event.likes, like => like.uniqueUserId === props.user.uniqueUserId) ? unLikeEvent : likeEvent}\n                    >\n        \n                        {btnUnlike ? <CircularProgress /> : (\n                            <Icon\n                                path={_.find(props.event.likes, like => like.uniqueUserId === props.user.uniqueUserId) ? mdiThumbUp : mdiThumbUpOutline}\n                                size={1} \n                                title='Like or unlike event'\n                            />\n                        )}\n                        {props.event.likes.length > 0 &&\n                            <small>\n                                {props.event.likes.length} \n                            </small>\n                        }\n                    </IconButton>\n                    <IconButton \n                        color='primary' \n                        onClick={e => setExpanded(!expanded)}\n                    >\n                        <Icon \n                            path={GroupOutline} \n                            size={1}\n                            title='How many attending' \n                        />\n                        {props.event.attending.length} attending \n                    </IconButton>\n                    <Button \n                        color='primary' \n                        onClick={_.find(props.event.attending, attender => attender.uniqueUserId === props.user.uniqueUserId) ? unAttendEvent : attendEvent}\n                        disabled={btnAttending}\n                    >\n                        {props.user.uniqueUserId !== props.event.uniqueUserId &&\n                            <div>\n                                {_.find(props.event.attending, attender => attender.uniqueUserId === props.user.uniqueUserId) ? 'unattend' : 'attend'}\n                            </div>\n                        }\n                    </Button>\n                    {props.user.uniqueUserId === props.event.uniqueUserId &&\n                        <IconButton \n                            color='primary'\n                            disabed={eventDeleting}\n                            onClick={deleteEvent}\n                        >\n                            {eventDeleting ? <CircularProgress /> : (\n                                <Icon \n                                    path={mdiDelete} \n                                    size={1} \n                                    title='Delete event' \n                                />\n                            )}\n                        </IconButton>\n                    }\n                </CardActions>\n            }\n            <Collapse \n                in={expanded} \n            >\n                <Divider /> \n                {props.event.attending.map((attender, index) => (\n                    <Paper \n                        key={index.toString()} \n                        elevation={3} \n                        style={{\n                            marginBottom: index < props.event.attending.length - 1 ? 10 : 0,\n                        }}\n                    >\n                        <ListItem \n                            alignItems='flex-start' \n                        >\n                            <ListItemAvatar>\n                                <Avatar \n                                    src={`https://www.geocities.cc/api/get/avatar/by/id/${attender.uniqueUserId}`}\n                                    title={`${attender.username}`}\n                                    alt={`${attender.username}`} \n                                    style={{\n                                        cursor: 'pointer',\n                                    }}\n                                    onClick={e => history.push(`/geouser/${attender.uniqueUserId}`)}\n                                /> \n                            </ListItemAvatar>\n                            <ListItemText \n                                primary={\n                                    <Typography \n                                        variant='h6' \n                                        component='h6' \n                                    >\n                                        {attender.username} \n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                    </Paper>\n                ))}\n            </Collapse>\n        </Card>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.userReducer.user,\n        primary: state.themeReducer.theme,\n    };\n}\n\nexport default connect(mapStateToProps)(EventComponent);"]},"metadata":{},"sourceType":"module"}