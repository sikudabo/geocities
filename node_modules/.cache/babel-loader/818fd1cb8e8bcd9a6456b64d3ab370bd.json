{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Icon from '@mdi/react';\nimport { mdiCheckBold, mdiPencil, mdiClose } from '@mdi/js';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction TabPanel(props) {\n  //This component will serve as the panel for each individual tab\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    hidden: value !== index,\n    role: \"tabpanel\",\n    id: `tabpanel-${index}`,\n    \"aria-label\": `tab-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    style: {\n      marginTop: 100\n    },\n    children: value === index && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.any.isRequired,\n  index: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 20\n  },\n  profileAvatar: {\n    height: 128,\n    width: 128,\n    margin: 'auto'\n  },\n  profileAvatarLg: {\n    height: 168,\n    width: 168,\n    margin: 'auto'\n  },\n  usernameDisplay: {\n    marginTop: 40,\n    margin: 'auto'\n  },\n  statsInfo: {\n    marginTop: 40,\n    textAlign: 'center'\n  }\n}));\n\nfunction ProfilePage(props) {\n  _s();\n\n  const history = useHistory(); //The history API to access the brower history. \n\n  const classes = useStyles(); //Custom styling.\n\n  const [openDialog, setOpenDialog] = useState(false); //Variable and setter to open and close dialog.\n\n  const [curTab, setTab] = useState(0); //Variable and setter to control proper tab.\n\n  const [textPost, setTextPost] = useState(''); //Variable and setter for text post control\n\n  const [posting, setPosting] = useState(false); //Hides dialog AppBar and tabs when a post is posting to the server\n\n  useEffect(() => {\n    //First, if the user doesn't exist in state, re-route to the login page.\n    if (!props.user) {\n      history.push('/');\n    } else if (props.user) {\n      //Else, we make an axios call to request the user (an updated version of the user)\n      //props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/grab/user/${props.user.uniqueUserId}`\n      }).then(response => {\n        if (response.data.user) {\n          props.dispatch({\n            type: 'user/updateUser',\n            payload: response.data.user\n          });\n          props.dispatch({\n            type: 'ThemeChange',\n            payload: response.data.user.profileTheme\n          });\n        } else if (response.data === 'user not found') {\n          swal('Uh Oh!', 'We could not find your profile!', 'error');\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error retreiving your profile. Please try again!', 'error');\n        history.push('/');\n      });\n    }\n  }, []);\n\n  function handleTextPost() {\n    //Function that handles submitting a text post to the server. \n    setPosting(true);\n\n    if (!textPost) {\n      swal('Uh Oh!', 'You must enter some text', 'error');\n      setPosting(false);\n    } else {\n      swal('Success', 'Post successfully uploading', 'success');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.root,\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          mdUp: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.profileAvatar,\n            src: `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`,\n            title: `${props.user.username}`,\n            alt: `${props.user.username}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.profileAvatarLg,\n            src: `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`,\n            title: `${props.user.username}`,\n            alt: `${props.user.username}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h4\",\n        align: \"center\",\n        className: classes.usernameDisplay,\n        children: props.user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), props.user.isVerified && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiCheckBold,\n          size: 1,\n          title: \"Verified\",\n          style: {\n            color: 'rgb(0, 128, 0)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), \" Verified\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      spacing: 1,\n      className: classes.statsInfo,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          children: \"Followers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: props.user.followers.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          children: \"Following\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: props.user.following.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          children: \"Karma\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: props.user.karma\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        style: {\n          fontWeight: 'bold',\n          marginTop: 30\n        },\n        children: [props.user.firstName, \" \", props.user.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: 40,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        component: \"small\",\n        justify: \"start\",\n        align: \"left\",\n        children: props.user.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center',\n        marginTop: 40\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        size: \"large\",\n        onClick: () => setOpenDialog(true),\n        startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiPencil,\n          size: 1,\n          title: \"Post Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }, this),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDialog,\n        fullScreen: true,\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            color: \"primary\",\n            hidden: posting,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              path: mdiClose,\n              size: 1,\n              title: \"Dialog close\",\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => setOpenDialog(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n              value: curTab,\n              onChange: (e, newVal) => setTab(newVal),\n              centered: true,\n              children: [/*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(0),\n                label: \"Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(1),\n                label: \"Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(2),\n                label: \"Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            index: 0,\n            value: curTab,\n            hidden: posting,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Text Post\",\n              placeholder: \"Post a status!\",\n              color: \"primary\",\n              variant: \"outlined\",\n              InputLabelProps: {\n                shrink: true\n              },\n              \"aria-label\": \"Text Post Field\",\n              rows: 4,\n              onChange: e => setTextPost(e.target.value),\n              value: textPost,\n              helperText: \"Enter a status update!\",\n              multiline: true,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginTop: 20\n              },\n              color: \"primary\",\n              variant: \"outlined\",\n              onClick: () => setPost(true),\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            index: 1,\n            value: curTab,\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            index: 2,\n            value: curTab,\n            children: \"Videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfilePage, \"aC1TpulpCue9CnuPMpQ+PNaXJCc=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c2 = ProfilePage;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    primary: state.userThemeReducer.primary\n  };\n}\n\nexport default connect(mapStateToProps)(ProfilePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ProfilePage\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/ProfilePage.js"],"names":["React","useState","useEffect","Grid","Avatar","Typography","connect","axios","useHistory","swal","makeStyles","Hidden","Box","Container","Icon","mdiCheckBold","mdiPencil","mdiClose","Button","Dialog","DialogContent","AppBar","Toolbar","Tab","Tabs","PropTypes","TextField","Backdrop","CircularProgress","TabPanel","props","children","value","index","other","marginTop","textAlign","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","profileAvatar","height","width","margin","profileAvatarLg","usernameDisplay","statsInfo","ProfilePage","history","classes","openDialog","setOpenDialog","curTab","setTab","textPost","setTextPost","posting","setPosting","user","push","method","url","uniqueUserId","then","response","data","dispatch","type","payload","profileTheme","catch","err","console","log","message","handleTextPost","avatar","username","isVerified","color","followers","length","following","karma","fontWeight","firstName","lastName","bio","cursor","e","newVal","shrink","target","setPost","mapStateToProps","state","userReducer","primary","userThemeReducer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAkD,SAAlD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0B,OAAGC;AAA7B,MAAuCJ,KAA7C;AAEA,sBACI;AACI,IAAA,MAAM,EAAEE,KAAK,KAAKC,KADtB;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,EAAE,EAAG,YAAWA,KAAM,EAH1B;AAII,kBAAa,OAAMA,KAAM,EAJ7B;AAKI,uBAAkB,OAAMA,KAAM,EALlC;AAAA,OAMQC,KANR;AAOI,IAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAE;AADR,KAPX;AAAA,cAWKH,KAAK,KAAKC,KAAV,iBACG,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAGI,MAAA,KAAK,EAAE;AACHG,QAAAA,SAAS,EAAE;AADR,OAHX;AAAA,gBAOKL;AAPL;AAAA;AAAA;AAAA;AAAA;AAZR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;KA7BQF,Q;AA+BTA,QAAQ,CAACQ,SAAT,GAAqB;AACjBN,EAAAA,QAAQ,EAAEN,SAAS,CAACa,IADH;AAEjBN,EAAAA,KAAK,EAAEP,SAAS,CAACc,GAAV,CAAcC,UAFJ;AAGjBP,EAAAA,KAAK,EAAER,SAAS,CAACc,GAAV,CAAcC;AAHJ,CAArB;;AAMA,SAASC,SAAT,CAAmBR,KAAnB,EAA0B;AACtB,SAAO;AACHS,IAAAA,EAAE,EAAG,OAAMT,KAAM,EADd;AAEH,qBAAkB,YAAWA,KAAM;AAFhC,GAAP;AAIH;;AAED,MAAMU,SAAS,GAAGjC,UAAU,CAAEkC,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFV,IAAAA,SAAS,EAAE;AADT,GAD+B;AAIrCW,EAAAA,aAAa,EAAE;AACXC,IAAAA,MAAM,EAAE,GADG;AAEXC,IAAAA,KAAK,EAAE,GAFI;AAGXC,IAAAA,MAAM,EAAE;AAHG,GAJsB;AASrCC,EAAAA,eAAe,EAAE;AACbH,IAAAA,MAAM,EAAE,GADK;AAEbC,IAAAA,KAAK,EAAE,GAFM;AAGbC,IAAAA,MAAM,EAAE;AAHK,GAToB;AAcrCE,EAAAA,eAAe,EAAE;AACbhB,IAAAA,SAAS,EAAE,EADE;AAEbc,IAAAA,MAAM,EAAE;AAFK,GAdoB;AAkBrCG,EAAAA,SAAS,EAAE;AACPjB,IAAAA,SAAS,EAAE,EADJ;AAEPC,IAAAA,SAAS,EAAE;AAFJ;AAlB0B,CAAZ,CAAD,CAA5B;;AAwBA,SAASiB,WAAT,CAAqBvB,KAArB,EAA4B;AAAA;;AACxB,QAAMwB,OAAO,GAAG9C,UAAU,EAA1B,CADwB,CACM;;AAC9B,QAAM+C,OAAO,GAAGZ,SAAS,EAAzB,CAFwB,CAEK;;AAC7B,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8BxD,QAAQ,CAAC,KAAD,CAA5C,CAHwB,CAG6B;;AACrD,QAAM,CAACyD,MAAD,EAASC,MAAT,IAAmB1D,QAAQ,CAAC,CAAD,CAAjC,CAJwB,CAIc;;AACtC,QAAM,CAAC2D,QAAD,EAAWC,WAAX,IAA0B5D,QAAQ,CAAC,EAAD,CAAxC,CALwB,CAKsB;;AAC9C,QAAM,CAAC6D,OAAD,EAAUC,UAAV,IAAwB9D,QAAQ,CAAC,KAAD,CAAtC,CANwB,CAMuB;;AAG/CC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAG,CAAC4B,KAAK,CAACkC,IAAV,EAAgB;AACZV,MAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACH,KAFD,MAGK,IAAGnC,KAAK,CAACkC,IAAT,EAAe;AAChB;AACA;AACA,aAAOzD,KAAK,CAAC;AACT2D,QAAAA,MAAM,EAAE,KADC;AAETC,QAAAA,GAAG,EAAG,yCAAwCrC,KAAK,CAACkC,IAAN,CAAWI,YAAa;AAF7D,OAAD,CAAL,CAGJC,IAHI,CAGCC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,IAAT,CAAcP,IAAjB,EAAuB;AACnBlC,UAAAA,KAAK,CAAC0C,QAAN,CAAe;AAACC,YAAAA,IAAI,EAAE,iBAAP;AAA0BC,YAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcP;AAAjD,WAAf;AACAlC,UAAAA,KAAK,CAAC0C,QAAN,CAAe;AAACC,YAAAA,IAAI,EAAE,aAAP;AAAsBC,YAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcP,IAAd,CAAmBW;AAAlD,WAAf;AACH,SAHD,MAIK,IAAGL,QAAQ,CAACC,IAAT,KAAkB,gBAArB,EAAuC;AACxC9D,UAAAA,IAAI,CACA,QADA,EAEA,iCAFA,EAGA,OAHA,CAAJ;AAKA6C,UAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACH;AACJ,OAhBM,EAgBJW,KAhBI,CAgBEC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACAvE,QAAAA,IAAI,CACA,QADA,EAEA,+DAFA,EAGA,OAHA,CAAJ;AAKA6C,QAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACH,OAxBM,CAAP;AAyBH;AACJ,GAlCQ,EAkCN,EAlCM,CAAT;;AAoCA,WAASgB,cAAT,GAA0B;AACtB;AACAlB,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG,CAACH,QAAJ,EAAc;AACVnD,MAAAA,IAAI,CACA,QADA,EAEA,0BAFA,EAGA,OAHA,CAAJ;AAMAsD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KARD,MASK;AACDtD,MAAAA,IAAI,CACA,SADA,EAEA,6BAFA,EAGA,SAHA,CAAJ;AAKH;AACJ;;AAED,sBACI,QAAC,IAAD;AACI,IAAA,SAAS,EAAE8C,OAAO,CAACV,IADvB;AAEI,IAAA,SAAS,MAFb;AAAA,4BAII,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,SAAS,MAFb;AAGI,MAAA,EAAE,EAAE,EAHR;AAAA,6BAKI,QAAC,IAAD;AACI,QAAA,IAAI,MADR;AAEI,QAAA,EAAE,EAAE,EAFR;AAAA,gCAKI,QAAC,MAAD;AACI,UAAA,IAAI,MADR;AAAA,iCAGI,QAAC,MAAD;AACI,YAAA,SAAS,EAAEU,OAAO,CAACT,aADvB;AAEI,YAAA,GAAG,EAAG,yCAAwChB,KAAK,CAACkC,IAAN,CAAWkB,MAAO,EAFpE;AAGI,YAAA,KAAK,EAAG,GAAEpD,KAAK,CAACkC,IAAN,CAAWmB,QAAS,EAHlC;AAII,YAAA,GAAG,EAAG,GAAErD,KAAK,CAACkC,IAAN,CAAWmB,QAAS;AAJhC;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eAgBI,QAAC,MAAD;AACI,UAAA,MAAM,MADV;AAAA,iCAGI,QAAC,MAAD;AACI,YAAA,SAAS,EAAE5B,OAAO,CAACL,eADvB;AAEI,YAAA,GAAG,EAAG,yCAAwCpB,KAAK,CAACkC,IAAN,CAAWkB,MAAO,EAFpE;AAGI,YAAA,KAAK,EAAG,GAAEpD,KAAK,CAACkC,IAAN,CAAWmB,QAAS,EAHlC;AAII,YAAA,GAAG,EAAG,GAAErD,KAAK,CAACkC,IAAN,CAAWmB,QAAS;AAJhC;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAqCI,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAAA,8BAII,QAAC,UAAD;AACI,QAAA,OAAO,EAAC,IADZ;AAEI,QAAA,SAAS,EAAC,IAFd;AAGI,QAAA,KAAK,EAAC,QAHV;AAII,QAAA,SAAS,EAAE5B,OAAO,CAACJ,eAJvB;AAAA,kBAMKrB,KAAK,CAACkC,IAAN,CAAWmB;AANhB;AAAA;AAAA;AAAA;AAAA,cAJJ,EAYKrD,KAAK,CAACkC,IAAN,CAAWoB,UAAX,iBACG,QAAC,UAAD;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,SAAS,EAAC,GAFd;AAAA,gCAII,QAAC,IAAD;AACI,UAAA,IAAI,EAAErE,YADV;AAEI,UAAA,IAAI,EAAE,CAFV;AAGI,UAAA,KAAK,EAAC,UAHV;AAII,UAAA,KAAK,EAAE;AACHsE,YAAAA,KAAK,EAAE;AADJ;AAJX;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbR;AAAA;AAAA;AAAA;AAAA;AAAA,YArCJ,eAkEI,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,SAAS,MAFb;AAGI,MAAA,EAAE,EAAE,EAHR;AAII,MAAA,OAAO,EAAE,CAJb;AAKI,MAAA,SAAS,EAAE9B,OAAO,CAACH,SALvB;AAAA,8BAOI,QAAC,IAAD;AACI,QAAA,IAAI,MADR;AAEI,QAAA,EAAE,EAAE,CAFR;AAAA,gCAII,QAAC,UAAD;AACI,UAAA,OAAO,EAAC,IADZ;AAEI,UAAA,SAAS,EAAC,IAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAUI,QAAC,UAAD;AACI,UAAA,OAAO,EAAC,OADZ;AAEI,UAAA,SAAS,EAAC,GAFd;AAAA,oBAIKtB,KAAK,CAACkC,IAAN,CAAWsB,SAAX,CAAqBC;AAJ1B;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAwBI,QAAC,IAAD;AACI,QAAA,IAAI,MADR;AAEI,QAAA,EAAE,EAAE,CAFR;AAAA,gCAII,QAAC,UAAD;AACI,UAAA,OAAO,EAAC,IADZ;AAEI,UAAA,SAAS,EAAC,IAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAUI,QAAC,UAAD;AACI,UAAA,OAAO,EAAC,OADZ;AAEI,UAAA,SAAS,EAAC,GAFd;AAAA,oBAIKzD,KAAK,CAACkC,IAAN,CAAWwB,SAAX,CAAqBD;AAJ1B;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ,eAyCI,QAAC,IAAD;AACI,QAAA,IAAI,MADR;AAEI,QAAA,EAAE,EAAE,CAFR;AAAA,gCAII,QAAC,UAAD;AACI,UAAA,OAAO,EAAC,IADZ;AAEI,UAAA,SAAS,EAAC,IAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAUI,QAAC,UAAD;AACI,UAAA,OAAO,EAAC,OADZ;AAEI,UAAA,SAAS,EAAC,GAFd;AAAA,oBAIKzD,KAAK,CAACkC,IAAN,CAAWyB;AAJhB;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlEJ,eA+HI,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAGI,MAAA,KAAK,EAAE;AACHrD,QAAAA,SAAS,EAAE;AADR,OAHX;AAAA,6BAOI,QAAC,UAAD;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,SAAS,EAAC,GAFd;AAGI,QAAA,KAAK,EAAE;AACHsD,UAAAA,UAAU,EAAE,MADT;AAEHvD,UAAAA,SAAS,EAAE;AAFR,SAHX;AAAA,mBAQKL,KAAK,CAACkC,IAAN,CAAW2B,SARhB,OAQ4B7D,KAAK,CAACkC,IAAN,CAAW4B,QARvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YA/HJ,eAmJI,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAGI,MAAA,KAAK,EAAE;AACHzD,QAAAA,SAAS,EAAE,EADR;AAEHC,QAAAA,SAAS,EAAE;AAFR,OAHX;AAAA,6BAQI,QAAC,UAAD;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,SAAS,EAAC,OAFd;AAGI,QAAA,OAAO,EAAC,OAHZ;AAII,QAAA,KAAK,EAAC,MAJV;AAAA,kBAMKN,KAAK,CAACkC,IAAN,CAAW6B;AANhB;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YAnJJ,eAsKI,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAGI,MAAA,KAAK,EAAE;AACHzD,QAAAA,SAAS,EAAE,QADR;AAEHD,QAAAA,SAAS,EAAE;AAFR,OAHX;AAAA,6BAQI,QAAC,MAAD;AACI,QAAA,KAAK,EAAC,SADV;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,OAAO,EAAE,MAAMsB,aAAa,CAAC,IAAD,CAJhC;AAKI,QAAA,SAAS,eACL,QAAC,IAAD;AACI,UAAA,IAAI,EAAEzC,SADV;AAEI,UAAA,IAAI,EAAE,CAFV;AAGI,UAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,gBANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YAtKJ,eA+LI,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAAA,6BAII,QAAC,MAAD;AACI,QAAA,IAAI,EAAEwC,UADV;AAEI,QAAA,UAAU,MAFd;AAAA,+BAII,QAAC,aAAD;AAAA,kCACI,QAAC,MAAD;AACI,YAAA,KAAK,EAAC,SADV;AAEI,YAAA,MAAM,EAAEM,OAFZ;AAAA,oCAII,QAAC,IAAD;AACI,cAAA,IAAI,EAAE7C,QADV;AAEI,cAAA,IAAI,EAAE,CAFV;AAGI,cAAA,KAAK,EAAC,cAHV;AAII,cAAA,KAAK,EAAE;AACH6E,gBAAAA,MAAM,EAAE;AADL,eAJX;AAOI,cAAA,OAAO,EAAE,MAAMrC,aAAa,CAAC,KAAD;AAPhC;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAaI,QAAC,IAAD;AACI,cAAA,KAAK,EAAEC,MADX;AAEI,cAAA,QAAQ,EAAE,CAACqC,CAAD,EAAIC,MAAJ,KAAerC,MAAM,CAACqC,MAAD,CAFnC;AAGI,cAAA,QAAQ,MAHZ;AAAA,sCAKI,QAAC,GAAD,OACQvD,SAAS,CAAC,CAAD,CADjB;AAEI,gBAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,sBALJ,eASI,QAAC,GAAD,OACQA,SAAS,CAAC,CAAD,CADjB;AAEI,gBAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,sBATJ,eAaI,QAAC,GAAD,OACQA,SAAS,CAAC,CAAD,CADjB;AAEI,gBAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,sBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAiCI,QAAC,QAAD;AACI,YAAA,KAAK,EAAE,CADX;AAEI,YAAA,KAAK,EAAEiB,MAFX;AAGI,YAAA,MAAM,EAAEI,OAHZ;AAAA,oCAKI,QAAC,SAAD;AACI,cAAA,KAAK,EAAC,WADV;AAEI,cAAA,WAAW,EAAC,gBAFhB;AAGI,cAAA,KAAK,EAAC,SAHV;AAII,cAAA,OAAO,EAAC,UAJZ;AAKI,cAAA,eAAe,EAAE;AACbmC,gBAAAA,MAAM,EAAE;AADK,eALrB;AAQI,4BAAW,iBARf;AASI,cAAA,IAAI,EAAE,CATV;AAUI,cAAA,QAAQ,EAAEF,CAAC,IAAIlC,WAAW,CAACkC,CAAC,CAACG,MAAF,CAASlE,KAAV,CAV9B;AAWI,cAAA,KAAK,EAAE4B,QAXX;AAYI,cAAA,UAAU,EAAC,wBAZf;AAaI,cAAA,SAAS,MAbb;AAcI,cAAA,SAAS;AAdb;AAAA;AAAA;AAAA;AAAA,oBALJ,eAqBI,QAAC,MAAD;AACI,cAAA,KAAK,EAAE;AACHzB,gBAAAA,SAAS,EAAE;AADR,eADX;AAII,cAAA,KAAK,EAAC,SAJV;AAKI,cAAA,OAAO,EAAC,UALZ;AAMI,cAAA,OAAO,EAAE,MAAMgE,OAAO,CAAC,IAAD,CAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjCJ,eAiEI,QAAC,QAAD;AACI,YAAA,KAAK,EAAE,CADX;AAEI,YAAA,KAAK,EAAEzC,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjEJ,eAuEI,QAAC,QAAD;AACI,YAAA,KAAK,EAAE,CADX;AAEI,YAAA,KAAK,EAAEA,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YA/LJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0RH;;GA5VQL,W;UACW7C,U,EACAmC,S;;;MAFXU,W;;AA8VT,SAAS+C,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHrC,IAAAA,IAAI,EAAEqC,KAAK,CAACC,WAAN,CAAkBtC,IADrB;AAEHuC,IAAAA,OAAO,EAAEF,KAAK,CAACG,gBAAN,CAAuBD;AAF7B,GAAP;AAIH;;AAED,eAAejG,OAAO,CAAC8F,eAAD,CAAP,CAAyB/C,WAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Icon from '@mdi/react';\r\nimport { mdiCheckBold, mdiPencil, mdiClose } from '@mdi/js';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction TabPanel(props) {\r\n    //This component will serve as the panel for each individual tab\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div \r\n            hidden={value !== index}\r\n            role='tabpanel' \r\n            id={`tabpanel-${index}`}\r\n            aria-label={`tab-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n            style={{\r\n                marginTop: 100,\r\n            }}\r\n        >\r\n            {value === index && \r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    style={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    {children}\r\n                </Grid>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    value: PropTypes.any.isRequired,\r\n    index: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `tab-${index}`,\r\n        'aria-controls': `tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 20,\r\n    },\r\n    profileAvatar: {\r\n        height: 128,\r\n        width: 128,\r\n        margin: 'auto',\r\n    },\r\n    profileAvatarLg: {\r\n        height: 168,\r\n        width: 168,\r\n        margin: 'auto',\r\n    },\r\n    usernameDisplay: {\r\n        marginTop: 40,\r\n        margin: 'auto',\r\n    },\r\n    statsInfo: {\r\n        marginTop: 40,\r\n        textAlign: 'center',\r\n    }\r\n}));\r\n\r\nfunction ProfilePage(props) {\r\n    const history = useHistory(); //The history API to access the brower history. \r\n    const classes = useStyles(); //Custom styling.\r\n    const [openDialog, setOpenDialog] = useState(false); //Variable and setter to open and close dialog.\r\n    const [curTab, setTab] = useState(0); //Variable and setter to control proper tab.\r\n    const [textPost, setTextPost] = useState(''); //Variable and setter for text post control\r\n    const [posting, setPosting] = useState(false); //Hides dialog AppBar and tabs when a post is posting to the server\r\n\r\n    \r\n    useEffect(() => {\r\n        //First, if the user doesn't exist in state, re-route to the login page.\r\n        if(!props.user) {\r\n            history.push('/');\r\n        }\r\n        else if(props.user) {\r\n            //Else, we make an axios call to request the user (an updated version of the user)\r\n            //props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/grab/user/${props.user.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.user) {\r\n                    props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\r\n                }\r\n                else if(response.data === 'user not found') {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find your profile!',\r\n                        'error',\r\n                    );\r\n                    history.push('/');\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error retreiving your profile. Please try again!',\r\n                    'error',\r\n                );\r\n                history.push('/');\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function handleTextPost() {\r\n        //Function that handles submitting a text post to the server. \r\n        setPosting(true);\r\n        if(!textPost) {\r\n            swal(\r\n                'Uh Oh!',\r\n                'You must enter some text',\r\n                'error',\r\n            );\r\n\r\n            setPosting(false);\r\n        }\r\n        else {\r\n            swal(\r\n                'Success',\r\n                'Post successfully uploading',\r\n                'success',\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid \r\n            className={classes.root}\r\n            container \r\n        >\r\n            <Grid \r\n                item \r\n                container \r\n                xs={12}\r\n            >\r\n                <Grid \r\n                    item \r\n                    xs={12}\r\n                >\r\n                    {/* Below is the avatar for xs and sm screens at 128x128 pixels */}\r\n                    <Hidden \r\n                        mdUp \r\n                    >\r\n                        <Avatar \r\n                            className={classes.profileAvatar} \r\n                            src={`http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`} \r\n                            title={`${props.user.username}`} \r\n                            alt={`${props.user.username}`} \r\n                        />\r\n                    </Hidden>\r\n                    {/* Below will be the avatar for medium screen and up devices */ }\r\n                    <Hidden \r\n                        smDown \r\n                    >\r\n                        <Avatar \r\n                            className={classes.profileAvatarLg}\r\n                            src={`http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`} \r\n                            title={`${props.user.username}`} \r\n                            alt={`${props.user.username}`} \r\n                        />\r\n                    </Hidden>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <Typography \r\n                    variant='h4' \r\n                    component='h4' \r\n                    align='center'\r\n                    className={classes.usernameDisplay} \r\n                >\r\n                    {props.user.username}\r\n                </Typography>\r\n                {props.user.isVerified &&\r\n                    <Typography \r\n                        variant='body1'\r\n                        component='p' \r\n                    >\r\n                        <Icon \r\n                            path={mdiCheckBold} \r\n                            size={1} \r\n                            title='Verified' \r\n                            style={{\r\n                                color: 'rgb(0, 128, 0)'\r\n                            }}\r\n                        /> Verified \r\n                    </Typography>\r\n                }\r\n            </Grid>\r\n            {/* Below will be the Grid to display Followers, Following, and Karma */}\r\n            <Grid \r\n                item \r\n                container \r\n                xs={12} \r\n                spacing={1}\r\n                className={classes.statsInfo}\r\n            >\r\n                <Grid \r\n                    item \r\n                    xs={4} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        Followers \r\n                    </Typography>\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                    >\r\n                        {props.user.followers.length}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={4} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        Following \r\n                    </Typography>\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                    >\r\n                        {props.user.following.length}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={4} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        Karma \r\n                    </Typography>\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                    >\r\n                        {props.user.karma}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            {/* End of the Grid for Followers, Following, and Karma */}\r\n            {/* Below is the Grid to display the users' first and last name */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n                style={{\r\n                    textAlign: 'center',\r\n                }}\r\n            >\r\n                <Typography \r\n                    variant='body1' \r\n                    component='p' \r\n                    style={{\r\n                        fontWeight: 'bold',\r\n                        marginTop: 30,\r\n                    }}\r\n                >\r\n                    {props.user.firstName} {props.user.lastName}\r\n                </Typography>\r\n            </Grid>\r\n            {/* End of the Grid to display the users first and last name */}\r\n            {/* Below is the Grid that stores the users BIO */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n                style={{\r\n                    marginTop: 40,\r\n                    textAlign: 'center',\r\n                }}\r\n            >\r\n                <Typography \r\n                    variant='body2' \r\n                    component='small' \r\n                    justify='start'\r\n                    align='left'\r\n                >\r\n                    {props.user.bio}\r\n                </Typography>\r\n            </Grid>\r\n            {/* This is the end of the Grid for the bio.*/ }\r\n            {/* Below is the grid to display the Button that opens the Dialog for the form for posts */}\r\n            <Grid \r\n                item \r\n                xs={12}\r\n                style={{\r\n                    textAlign: 'center',\r\n                    marginTop: 40,\r\n                }}\r\n            >\r\n                <Button \r\n                    color='primary' \r\n                    variant='outlined'  \r\n                    size='large'\r\n                    onClick={() => setOpenDialog(true)}\r\n                    startIcon={\r\n                        <Icon \r\n                            path={mdiPencil} \r\n                            size={1} \r\n                            title='Post Icon' \r\n                        />\r\n                    }\r\n                >\r\n                    Post \r\n                </Button>\r\n            </Grid>\r\n            {/* The Grid below will store the Dialog and its' content */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <Dialog \r\n                    open={openDialog} \r\n                    fullScreen\r\n                >\r\n                    <DialogContent>\r\n                        <AppBar \r\n                            color='primary'\r\n                            hidden={posting}\r\n                        >\r\n                            <Icon \r\n                                path={mdiClose} \r\n                                size={1} \r\n                                title='Dialog close' \r\n                                style={{\r\n                                    cursor: 'pointer'\r\n                                }}\r\n                                onClick={() => setOpenDialog(false)}\r\n                            />\r\n                            <Tabs \r\n                                value={curTab}\r\n                                onChange={(e, newVal) => setTab(newVal)} \r\n                                centered\r\n                            >\r\n                                <Tab \r\n                                    {...a11yProps(0)} \r\n                                    label='Text' \r\n                                />\r\n                                <Tab \r\n                                    {...a11yProps(1)} \r\n                                    label='Photo' \r\n                                />\r\n                                <Tab \r\n                                    {...a11yProps(2)}\r\n                                    label='Video' \r\n                                />\r\n                            </Tabs>\r\n                        </AppBar>\r\n                        <TabPanel \r\n                            index={0}\r\n                            value={curTab} \r\n                            hidden={posting}\r\n                        >\r\n                            <TextField \r\n                                label='Text Post' \r\n                                placeholder='Post a status!' \r\n                                color='primary'\r\n                                variant='outlined' \r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                aria-label='Text Post Field' \r\n                                rows={4} \r\n                                onChange={e => setTextPost(e.target.value)}\r\n                                value={textPost} \r\n                                helperText='Enter a status update!' \r\n                                multiline\r\n                                fullWidth \r\n                            />\r\n                            <Button \r\n                                style={{\r\n                                    marginTop: 20,\r\n                                }}\r\n                                color='primary' \r\n                                variant='outlined' \r\n                                onClick={() => setPost(true)}\r\n                            >\r\n                                Post\r\n                            </Button>\r\n                        </TabPanel>\r\n                        <TabPanel \r\n                            index={1} \r\n                            value={curTab} \r\n                        >\r\n                            Photos \r\n                        </TabPanel>\r\n                        <TabPanel \r\n                            index={2} \r\n                            value={curTab} \r\n                        >\r\n                            Videos \r\n                        </TabPanel>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfilePage);\r\n\r\n"]},"metadata":{},"sourceType":"module"}