{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\Community.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Avatar from '@material-ui/core/Avatar';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Hidden from '@material-ui/core/Hidden';\nimport * as _ from 'underscore';\nimport { connect } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiClose } from '@mdi/js';\nimport PropTypes from 'prop-types';\n\nfunction TabPanel(props) {\n  //This component will serve as the panel for each individual tab.\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: index !== value,\n    id: `tabpanel-${index}`,\n    \"aria-label\": `tab-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    style: {\n      marginTop: 100\n    },\n    children: value === index && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      style: {\n        textAlign: 'center'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.any.isRequired,\n  index: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`\n  };\n}\n\nfunction Community(props) {\n  _s();\n\n  const [community, setCommunity] = useState(null); //This variable and setter will manipulate community.\n\n  const useStyles = makeStyles(() => ({\n    root: {\n      marginTop: 100\n    },\n    centerContent: {\n      margin: 'auto',\n      textAlign: 'center'\n    },\n    nameGrid: {\n      margin: 'auto',\n      textAlign: 'center',\n      marginTop: 20\n    },\n    avatarLg: {\n      height: 168,\n      width: 168,\n      margin: 'auto'\n    },\n    avatarSm: {\n      height: 128,\n      width: 128,\n      margin: 'auto'\n    },\n    paper: {\n      backgroundColor: community !== null ? community.communityTheme : 'rgb(0, 20, 60)'\n    },\n    closeIcon: {\n      color: 'rgb(255, 255, 255)'\n    }\n  }));\n  const classes = useStyles(); //Custom styles for the component. \n\n  const history = useHistory(); //Window history API.\n\n  const params = useParams(); //Access url parameters. \n\n  const formRef = useRef(null); //Ref for validator form when we upload posts.\n\n  const [joinSending, setJoinSending] = useState(false); //Will disable the button while we send a join or request join to the server.\n\n  const [postDialog, setPostDialog] = useState(false); //Will open and close the dialog to make a post.\n\n  const [textPost, setTextPost] = useState(''); //Value for text post. \n\n  const [textPostTitle, setTextPostTitle] = useState(''); //Value for title.\n\n  const [photoPost, setPhotoPost] = useState(null); //Value for photo upload. \n\n  const [photoPostTitle, setPhotoPostTitle] = useState(''); //Value for photo post title. \n\n  const [videoPost, setVideoPost] = useState(null); //Value for video post. \n\n  const [videoPostTitle, setVideoPostTitle] = useState(''); //Video post title. \n\n  const [linkPost, setLinkPost] = useState(''); //Value for the link in a link post. \n\n  const [linkPostTitle, setLinkPostTitle] = useState(''); //Value for link post title. \n\n  const [posting, setPosting] = useState(false); //Will handle disabling buttons and bars when a post is being sent to the server.\n\n  useEffect(() => {\n    //First we need to fetch the community with axios. \n    if (true) {\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/fetch/community/${params.communityName}`\n      }).then(response => {\n        if (response.data.community) {\n          setCommunity(response.data.community);\n          props.dispatch({\n            type: 'ThemeChange',\n            payload: response.data.community.communityTheme\n          }); //Update the theme to match the community theme.\n\n          props.dispatch({\n            type: 'VisitorPosts/UpdatePosts',\n            payload: response.data.posts\n          }); //Update the posts to match what a visitor viewing these posts will see.\n          //Now determine if the mainUser is in the blockList, and re-route to the previous page if they are. \n\n          if (props.mainUser !== null) {\n            if (_.find(response.data.community.blockList, person => person.uniqueUserId === props.mainUser.uniqueUserId)) {\n              swal('Uh Oh!', 'You are blocked from this community!', 'error');\n              history.goBack(1);\n            }\n          }\n        } else {\n          swal('Uh Oh!', 'We could not find that community!', 'error');\n          history.goBack(1);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error finding that community! Please try again.', 'error');\n        history.goBack(1);\n      });\n    }\n  }, []);\n\n  function publicJoin() {\n    //Function that will enable a member to join a public community. \n    let data = JSON.stringify({\n      username: props.mainUser.username,\n      uniqueUserId: props.mainUser.uniqueUserId,\n      name: community.name\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/public/join/community',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data.result === 'success') {\n        swal('Great!', 'Successfully joined community!', 'success');\n        setJoinSending(false);\n        setCommunity(response.data.community);\n      } else {\n        swal('Uh Oh!', 'There was an error with joining this community! Please try again', 'error');\n        setJoinSending(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error joining this community! Please try again', 'error');\n      setJoinSending(false);\n    });\n  }\n\n  function privateJoinRequest() {\n    //This function will handle sending a join notification to the moderator. \n    setJoinSending(true);\n    let data = JSON.stringify({\n      uniqueUserId: props.mainUser.uniqueUserId,\n      username: props.mainUser.username,\n      moderatorUniqueUserId: community.moderator.uniqueUserId,\n      name: community.name\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/community/join/request',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data === 'duplicate') {\n        swal('Uh Oh!', 'You have already sent a request to join this community!', 'error');\n        setJoinSending(false);\n      } else {\n        swal('Great!', 'Community join request sent!', 'success');\n        setJoinSending(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error sending a request to join this community! Please try again.', 'error');\n      setJoinSending(false);\n    });\n  }\n\n  function leaveCommunity() {\n    //This function will remove a member from a community if they are within it. \n    setJoinSending(true);\n    let data = JSON.stringify({\n      username: props.mainUser.username,\n      uniqueUserId: props.mainUser.uniqueUserId,\n      name: community.name\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/leave/community',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data.result === 'success') {\n        swal('Great!', 'You have successfully left this community', 'success');\n        setCommunity(response.data.community);\n        setJoinSending(false);\n      } else {\n        swal('Uh Oh!', 'There was an error leaving this community! Please try again.', 'error');\n        setJoinSending(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error leaving this community! Please try again.', 'error');\n      setJoinSending(false);\n    });\n  }\n\n  if (community !== null) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.root,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.centerContent,\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatarLg,\n            src: `http://192.168.0.9:3001/api/get-photo/${community.avatar}`,\n            alt: `${community.name} avatar`,\n            title: `${community.name} avatar`,\n            variant: \"square\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          mdUp: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: `http://192.168.0.9:3001/api/get-photo/${community.avatar}`,\n            className: classes.avatarSm,\n            title: `${community.name} avatar`,\n            alt: `${community.name} avatar`,\n            variant: \"square\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.nameGrid,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          align: \"center\",\n          children: community.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.nameGrid,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          justify: \"left\",\n          children: community.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          margin: 'auto',\n          textAlign: 'center',\n          marginTop: 20\n        },\n        children: [props.mainUser !== null && !_.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.communityPrivacy === 'public' && community.moderator.uniqueUserId !== props.mainUser.uniqueUserId && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: publicJoin,\n          disabled: joinSending,\n          children: joinSending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 44\n          }, this) : 'join'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }, this), props.mainUser !== null && !_.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.communityPrivacy === 'private' && community.moderator.uniqueUserId !== props.mainUser.uniqueUserid && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: privateJoinRequest,\n          disabled: joinSending,\n          children: joinSending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 44\n          }, this) : 'join'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 25\n        }, this), props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.moderator.uniqueUserId !== props.mainUser.uniqueUserId && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"outlined\",\n          onClick: leaveCommunity,\n          disabled: joinSending,\n          children: joinSending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 44\n          }, this) : 'leave'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 25\n        }, this), props.mainUser === null && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: e => history.push('/'),\n          children: \"Sign up or log in!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 25\n        }, this), props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              marginTop: 20,\n              marginBottom: 20\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                margin: 'auto'\n              },\n              children: \"Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"outlined\",\n              onClick: e => setPostDialog(true),\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this), props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Dialog, {\n          open: postDialog,\n          fullScreen: true,\n          children: /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(AppBar, {\n              color: \"primary\",\n              position: \"static\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                className: classes.closeIcon,\n                \"aria-label\": \"Dialog close\",\n                onClick: e => setPostDialog(false),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiClose,\n                  size: 1,\n                  title: \"Dialog close icon\",\n                  \"aria-label\": \"Dialog close icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this);\n  } else {\n    //If the community is null, simply return a Backdrop with a CircularProgress inside \n    return /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: true,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Community, \"jHKEPgd3TQWi/ZhwR79otB7SZYI=\", false, function () {\n  return [useStyles, useHistory, useParams];\n});\n\n_c2 = Community;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user,\n    primary: state.userThemeReducer.primary,\n    posts: state.visitorPostsReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(Community);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"Community\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/Community.js"],"names":["React","useState","useEffect","useRef","Grid","Typography","Paper","Tabs","Tab","Avatar","Backdrop","CircularProgress","List","ListItem","Divider","Button","axios","swal","Dialog","DialogContent","AppBar","Toolbar","Hidden","_","connect","useHistory","useParams","makeStyles","IconButton","Icon","mdiClose","PropTypes","TabPanel","props","children","value","index","other","marginTop","textAlign","propTypes","node","any","isRequired","a11yProps","id","Community","community","setCommunity","useStyles","root","centerContent","margin","nameGrid","avatarLg","height","width","avatarSm","paper","backgroundColor","communityTheme","closeIcon","color","classes","history","params","formRef","joinSending","setJoinSending","postDialog","setPostDialog","textPost","setTextPost","textPostTitle","setTextPostTitle","photoPost","setPhotoPost","photoPostTitle","setPhotoPostTitle","videoPost","setVideoPost","videoPostTitle","setVideoPostTitle","linkPost","setLinkPost","linkPostTitle","setLinkPostTitle","posting","setPosting","method","url","communityName","then","response","data","dispatch","type","payload","posts","mainUser","find","blockList","person","uniqueUserId","goBack","catch","err","console","log","message","publicJoin","JSON","stringify","username","name","headers","result","privateJoinRequest","moderatorUniqueUserId","moderator","leaveCommunity","avatar","title","members","member","communityPrivacy","uniqueUserid","e","push","marginBottom","mapStateToProps","state","userReducer","user","primary","userThemeReducer","visitorPostsReducer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,KAAKC,CAAZ,MAAmB,YAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0B,OAAGC;AAA7B,MAAuCJ,KAA7C;AAEA,sBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,MAAM,EAAEG,KAAK,KAAKD,KAFtB;AAGI,IAAA,EAAE,EAAG,YAAWC,KAAM,EAH1B;AAII,kBAAa,OAAMA,KAAM,EAJ7B;AAKI,uBAAkB,OAAMA,KAAM,EALlC;AAAA,OAMQC,KANR;AAOI,IAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAE;AADR,KAPX;AAAA,cAWKH,KAAK,KAAKC,KAAV,iBACG,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,MAFN;AAGI,MAAA,KAAK,EAAE;AACHG,QAAAA,SAAS,EAAE;AADR,OAHX;AAAA,gBAOKL;AAPL;AAAA;AAAA;AAAA;AAAA;AAZR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;KA7BQF,Q;AA+BTA,QAAQ,CAACQ,SAAT,GAAqB;AACjBN,EAAAA,QAAQ,EAAEH,SAAS,CAACU,IADH;AAEjBN,EAAAA,KAAK,EAAEJ,SAAS,CAACW,GAAV,CAAcC,UAFJ;AAGjBP,EAAAA,KAAK,EAAEL,SAAS,CAACW,GAAV,CAAcC;AAHJ,CAArB;;AAMA,SAASC,SAAT,CAAmBR,KAAnB,EAA0B;AACtB,SAAO;AACHS,IAAAA,EAAE,EAAG,OAAMT,KAAM,EADd;AAEH,qBAAkB,YAAWA,KAAM;AAFhC,GAAP;AAIH;;AAGD,SAASU,SAAT,CAAmBb,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4B/C,QAAQ,CAAC,IAAD,CAA1C,CADsB,CAC4B;;AAClD,QAAMgD,SAAS,GAAGtB,UAAU,CAAC,OAAO;AAChCuB,IAAAA,IAAI,EAAE;AACFZ,MAAAA,SAAS,EAAE;AADT,KAD0B;AAIhCa,IAAAA,aAAa,EAAE;AACXC,MAAAA,MAAM,EAAE,MADG;AAEXb,MAAAA,SAAS,EAAE;AAFA,KAJiB;AAQhCc,IAAAA,QAAQ,EAAE;AACND,MAAAA,MAAM,EAAE,MADF;AAENb,MAAAA,SAAS,EAAE,QAFL;AAGND,MAAAA,SAAS,EAAE;AAHL,KARsB;AAahCgB,IAAAA,QAAQ,EAAE;AACNC,MAAAA,MAAM,EAAE,GADF;AAENC,MAAAA,KAAK,EAAE,GAFD;AAGNJ,MAAAA,MAAM,EAAE;AAHF,KAbsB;AAkBhCK,IAAAA,QAAQ,EAAE;AACNF,MAAAA,MAAM,EAAE,GADF;AAENC,MAAAA,KAAK,EAAE,GAFD;AAGNJ,MAAAA,MAAM,EAAE;AAHF,KAlBsB;AAuBhCM,IAAAA,KAAK,EAAE;AACHC,MAAAA,eAAe,EAAEZ,SAAS,KAAK,IAAd,GAAqBA,SAAS,CAACa,cAA/B,GAAgD;AAD9D,KAvByB;AA0BhCC,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAE;AADA;AA1BqB,GAAP,CAAD,CAA5B;AA8BA,QAAMC,OAAO,GAAGd,SAAS,EAAzB,CAhCsB,CAgCO;;AAC7B,QAAMe,OAAO,GAAGvC,UAAU,EAA1B,CAjCsB,CAiCQ;;AAC9B,QAAMwC,MAAM,GAAGvC,SAAS,EAAxB,CAlCsB,CAkCM;;AAC5B,QAAMwC,OAAO,GAAG/D,MAAM,CAAC,IAAD,CAAtB,CAnCsB,CAmCQ;;AAC9B,QAAM,CAACgE,WAAD,EAAcC,cAAd,IAAgCnE,QAAQ,CAAC,KAAD,CAA9C,CApCsB,CAoCiC;;AACvD,QAAM,CAACoE,UAAD,EAAaC,aAAb,IAA8BrE,QAAQ,CAAC,KAAD,CAA5C,CArCsB,CAqC+B;;AACrD,QAAM,CAACsE,QAAD,EAAWC,WAAX,IAA0BvE,QAAQ,CAAC,EAAD,CAAxC,CAtCsB,CAsCwB;;AAC9C,QAAM,CAACwE,aAAD,EAAgBC,gBAAhB,IAAoCzE,QAAQ,CAAC,EAAD,CAAlD,CAvCsB,CAuCkC;;AACxD,QAAM,CAAC0E,SAAD,EAAYC,YAAZ,IAA4B3E,QAAQ,CAAC,IAAD,CAA1C,CAxCsB,CAwC4B;;AAClD,QAAM,CAAC4E,cAAD,EAAiBC,iBAAjB,IAAsC7E,QAAQ,CAAC,EAAD,CAApD,CAzCsB,CAyCoC;;AAC1D,QAAM,CAAC8E,SAAD,EAAYC,YAAZ,IAA4B/E,QAAQ,CAAC,IAAD,CAA1C,CA1CsB,CA0C4B;;AAClD,QAAM,CAACgF,cAAD,EAAiBC,iBAAjB,IAAsCjF,QAAQ,CAAC,EAAD,CAApD,CA3CsB,CA2CoC;;AAC1D,QAAM,CAACkF,QAAD,EAAWC,WAAX,IAA0BnF,QAAQ,CAAC,EAAD,CAAxC,CA5CsB,CA4CwB;;AAC9C,QAAM,CAACoF,aAAD,EAAgBC,gBAAhB,IAAoCrF,QAAQ,CAAC,EAAD,CAAlD,CA7CsB,CA6CkC;;AACxD,QAAM,CAACsF,OAAD,EAAUC,UAAV,IAAwBvF,QAAQ,CAAC,KAAD,CAAtC,CA9CsB,CA8CyB;;AAE/CC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAG,IAAH,EAAS;AACL,aAAOc,KAAK,CAAC;AACTyE,QAAAA,MAAM,EAAE,KADC;AAETC,QAAAA,GAAG,EAAG,+CAA8CzB,MAAM,CAAC0B,aAAc;AAFhE,OAAD,CAAL,CAGJC,IAHI,CAGCC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,IAAT,CAAc/C,SAAjB,EAA4B;AACxBC,UAAAA,YAAY,CAAC6C,QAAQ,CAACC,IAAT,CAAc/C,SAAf,CAAZ;AACAd,UAAAA,KAAK,CAAC8D,QAAN,CAAe;AAACC,YAAAA,IAAI,EAAE,aAAP;AAAsBC,YAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAc/C,SAAd,CAAwBa;AAAvD,WAAf,EAFwB,CAEgE;;AACxF3B,UAAAA,KAAK,CAAC8D,QAAN,CAAe;AAACC,YAAAA,IAAI,EAAE,0BAAP;AAAmCC,YAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcI;AAA1D,WAAf,EAHwB,CAG0D;AAClF;;AACA,cAAGjE,KAAK,CAACkE,QAAN,KAAmB,IAAtB,EAA4B;AACxB,gBAAG5E,CAAC,CAAC6E,IAAF,CAAOP,QAAQ,CAACC,IAAT,CAAc/C,SAAd,CAAwBsD,SAA/B,EAA0CC,MAAM,IAAIA,MAAM,CAACC,YAAP,KAAwBtE,KAAK,CAACkE,QAAN,CAAeI,YAA3F,CAAH,EAA6G;AACzGtF,cAAAA,IAAI,CACA,QADA,EAEA,sCAFA,EAGA,OAHA,CAAJ;AAKA+C,cAAAA,OAAO,CAACwC,MAAR,CAAe,CAAf;AACH;AACJ;AACJ,SAfD,MAgBK;AACDvF,UAAAA,IAAI,CACA,QADA,EAEA,mCAFA,EAGA,OAHA,CAAJ;AAKA+C,UAAAA,OAAO,CAACwC,MAAR,CAAe,CAAf;AACH;AACJ,OA5BM,EA4BJC,KA5BI,CA4BEC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACA5F,QAAAA,IAAI,CACA,QADA,EAEA,8DAFA,EAGA,OAHA,CAAJ;AAKA+C,QAAAA,OAAO,CAACwC,MAAR,CAAe,CAAf;AACH,OApCM,CAAP;AAqCH;AACJ,GAzCQ,EAyCN,EAzCM,CAAT;;AA2CA,WAASM,UAAT,GAAsB;AAClB;AACA,QAAIhB,IAAI,GAAGiB,IAAI,CAACC,SAAL,CAAe;AACtBC,MAAAA,QAAQ,EAAEhF,KAAK,CAACkE,QAAN,CAAec,QADH;AAEtBV,MAAAA,YAAY,EAAEtE,KAAK,CAACkE,QAAN,CAAeI,YAFP;AAGtBW,MAAAA,IAAI,EAAEnE,SAAS,CAACmE;AAHM,KAAf,CAAX;AAMA,WAAOlG,KAAK,CAAC;AACTyE,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,GAAG,EAAE,mDAFI;AAGTI,MAAAA,IAAI,EAAEA,IAHG;AAITqB,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAJA,KAAD,CAAL,CAOJvB,IAPI,CAOCC,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACC,IAAT,CAAcsB,MAAd,KAAyB,SAA5B,EAAuC;AACnCnG,QAAAA,IAAI,CACA,QADA,EAEA,gCAFA,EAGA,SAHA,CAAJ;AAKAmD,QAAAA,cAAc,CAAC,KAAD,CAAd;AACApB,QAAAA,YAAY,CAAC6C,QAAQ,CAACC,IAAT,CAAc/C,SAAf,CAAZ;AACH,OARD,MASK;AACD9B,QAAAA,IAAI,CACA,QADA,EAEA,kEAFA,EAGA,OAHA,CAAJ;AAKAmD,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,KAzBM,EAyBJqC,KAzBI,CAyBEC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACA5F,MAAAA,IAAI,CACA,QADA,EAEA,6DAFA,EAGA,OAHA,CAAJ;AAKAmD,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KAjCM,CAAP;AAkCH;;AAED,WAASiD,kBAAT,GAA8B;AAC1B;AACAjD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,QAAI0B,IAAI,GAAGiB,IAAI,CAACC,SAAL,CAAe;AACtBT,MAAAA,YAAY,EAAEtE,KAAK,CAACkE,QAAN,CAAeI,YADP;AAEtBU,MAAAA,QAAQ,EAAEhF,KAAK,CAACkE,QAAN,CAAec,QAFH;AAGtBK,MAAAA,qBAAqB,EAAEvE,SAAS,CAACwE,SAAV,CAAoBhB,YAHrB;AAItBW,MAAAA,IAAI,EAAEnE,SAAS,CAACmE;AAJM,KAAf,CAAX;AAOA,WAAOlG,KAAK,CAAC;AACTyE,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,GAAG,EAAE,oDAFI;AAGTI,MAAAA,IAAI,EAAEA,IAHG;AAITqB,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAJA,KAAD,CAAL,CAOJvB,IAPI,CAOCC,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACC,IAAT,KAAkB,WAArB,EAAkC;AAC9B7E,QAAAA,IAAI,CACA,QADA,EAEA,yDAFA,EAGA,OAHA,CAAJ;AAKAmD,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH,OAPD,MAQK;AACDnD,QAAAA,IAAI,CACA,QADA,EAEA,8BAFA,EAGA,SAHA,CAAJ;AAKAmD,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,KAxBM,EAwBJqC,KAxBI,CAwBEC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACA5F,MAAAA,IAAI,CACA,QADA,EAEA,gFAFA,EAGA,OAHA,CAAJ;AAKAmD,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KAhCM,CAAP;AAiCH;;AAED,WAASoD,cAAT,GAA0B;AACtB;AACApD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,QAAI0B,IAAI,GAAGiB,IAAI,CAACC,SAAL,CAAe;AACtBC,MAAAA,QAAQ,EAAEhF,KAAK,CAACkE,QAAN,CAAec,QADH;AAEtBV,MAAAA,YAAY,EAAEtE,KAAK,CAACkE,QAAN,CAAeI,YAFP;AAGtBW,MAAAA,IAAI,EAAEnE,SAAS,CAACmE;AAHM,KAAf,CAAX;AAMA,WAAOlG,KAAK,CAAC;AACTyE,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,GAAG,EAAE,6CAFI;AAGTI,MAAAA,IAAI,EAAEA,IAHG;AAITqB,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAJA,KAAD,CAAL,CAOJvB,IAPI,CAOCC,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACC,IAAT,CAAcsB,MAAd,KAAyB,SAA5B,EAAuC;AACnCnG,QAAAA,IAAI,CACA,QADA,EAEA,2CAFA,EAGA,SAHA,CAAJ;AAKA+B,QAAAA,YAAY,CAAC6C,QAAQ,CAACC,IAAT,CAAc/C,SAAf,CAAZ;AACAqB,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH,OARD,MASK;AACDnD,QAAAA,IAAI,CACA,QADA,EAEA,8DAFA,EAGA,OAHA,CAAJ;AAKAmD,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,KAzBM,EAyBJqC,KAzBI,CAyBEC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACA5F,MAAAA,IAAI,CACA,QADA,EAEA,8DAFA,EAGA,OAHA,CAAJ;AAKAmD,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KAjCM,CAAP;AAkCH;;AAED,MAAGrB,SAAS,KAAK,IAAjB,EAAuB;AACnB,wBACI,QAAC,IAAD;AACI,MAAA,SAAS,EAAEgB,OAAO,CAACb,IADvB;AAEI,MAAA,SAAS,MAFb;AAAA,8BAII,QAAC,IAAD;AACI,QAAA,IAAI,MADR;AAEI,QAAA,EAAE,EAAE,EAFR;AAGI,QAAA,SAAS,EAAEa,OAAO,CAACZ,aAHvB;AAAA,gCAKI,QAAC,MAAD;AACI,UAAA,MAAM,MADV;AAAA,iCAGI,QAAC,MAAD;AACI,YAAA,SAAS,EAAEY,OAAO,CAACT,QADvB;AAEI,YAAA,GAAG,EAAG,yCAAwCP,SAAS,CAAC0E,MAAO,EAFnE;AAGI,YAAA,GAAG,EAAG,GAAE1E,SAAS,CAACmE,IAAK,SAH3B;AAII,YAAA,KAAK,EAAG,GAAEnE,SAAS,CAACmE,IAAK,SAJ7B;AAKI,YAAA,OAAO,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eAgBI,QAAC,MAAD;AACI,UAAA,IAAI,MADR;AAAA,iCAGI,QAAC,MAAD;AACI,YAAA,GAAG,EAAG,yCAAwCnE,SAAS,CAAC0E,MAAO,EADnE;AAEI,YAAA,SAAS,EAAE1D,OAAO,CAACN,QAFvB;AAGI,YAAA,KAAK,EAAG,GAAEV,SAAS,CAACmE,IAAK,SAH7B;AAII,YAAA,GAAG,EAAG,GAAEnE,SAAS,CAACmE,IAAK,SAJ3B;AAKI,YAAA,OAAO,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAiCI,QAAC,IAAD;AACI,QAAA,IAAI,MADR;AAEI,QAAA,EAAE,EAAE,EAFR;AAGI,QAAA,SAAS,EAAEnD,OAAO,CAACV,QAHvB;AAAA,+BAKI,QAAC,UAAD;AACI,UAAA,OAAO,EAAC,IADZ;AAEI,UAAA,SAAS,EAAC,IAFd;AAGI,UAAA,KAAK,EAAC,QAHV;AAAA,oBAKKN,SAAS,CAACmE;AALf;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAjCJ,eAgDI,QAAC,IAAD;AACI,QAAA,IAAI,MADR;AAEI,QAAA,EAAE,EAAE,EAFR;AAGI,QAAA,SAAS,EAAEnD,OAAO,CAACV,QAHvB;AAAA,+BAKI,QAAC,UAAD;AACI,UAAA,OAAO,EAAC,OADZ;AAEI,UAAA,SAAS,EAAC,GAFd;AAGI,UAAA,OAAO,EAAC,MAHZ;AAAA,oBAKKN,SAAS,CAAC2E;AALf;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAhDJ,eA+DI,QAAC,IAAD;AACI,QAAA,IAAI,MADR;AAEI,QAAA,EAAE,EAAE,EAFR;AAGI,QAAA,KAAK,EAAE;AACHtE,UAAAA,MAAM,EAAE,MADL;AAEHb,UAAAA,SAAS,EAAE,QAFR;AAGHD,UAAAA,SAAS,EAAE;AAHR,SAHX;AAAA,mBAUML,KAAK,CAACkE,QAAN,KAAmB,IAAnB,IAA2B,CAAC5E,CAAC,CAAC6E,IAAF,CAAOrD,SAAS,CAAC4E,OAAjB,EAA0BC,MAAM,IAAIA,MAAM,CAACrB,YAAP,KAAwBtE,KAAK,CAACkE,QAAN,CAAeI,YAA3E,CAA5B,IAAwHxD,SAAS,CAAC8E,gBAAV,KAA+B,QAAvJ,IAAmK9E,SAAS,CAACwE,SAAV,CAAoBhB,YAApB,KAAqCtE,KAAK,CAACkE,QAAN,CAAeI,YAAxN,iBACG,QAAC,MAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,OAAO,EAAC,WAFZ;AAGI,UAAA,OAAO,EAAEO,UAHb;AAII,UAAA,QAAQ,EAAE3C,WAJd;AAAA,oBAMKA,WAAW,gBAAG,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAAH,GAA0C;AAN1D;AAAA;AAAA;AAAA;AAAA,gBAXR,EAqBMlC,KAAK,CAACkE,QAAN,KAAmB,IAAnB,IAA2B,CAAC5E,CAAC,CAAC6E,IAAF,CAAOrD,SAAS,CAAC4E,OAAjB,EAA0BC,MAAM,IAAIA,MAAM,CAACrB,YAAP,KAAwBtE,KAAK,CAACkE,QAAN,CAAeI,YAA3E,CAA5B,IAAwHxD,SAAS,CAAC8E,gBAAV,KAA+B,SAAvJ,IAAoK9E,SAAS,CAACwE,SAAV,CAAoBhB,YAApB,KAAqCtE,KAAK,CAACkE,QAAN,CAAe2B,YAAzN,iBACG,QAAC,MAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,OAAO,EAAC,WAFZ;AAGI,UAAA,OAAO,EAAET,kBAHb;AAII,UAAA,QAAQ,EAAElD,WAJd;AAAA,oBAMKA,WAAW,gBAAG,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAAH,GAA0C;AAN1D;AAAA;AAAA;AAAA;AAAA,gBAtBR,EA+BMlC,KAAK,CAACkE,QAAN,KAAmB,IAAnB,IAA2B5E,CAAC,CAAC6E,IAAF,CAAOrD,SAAS,CAAC4E,OAAjB,EAA0BC,MAAM,IAAIA,MAAM,CAACrB,YAAP,KAAwBtE,KAAK,CAACkE,QAAN,CAAeI,YAA3E,CAA3B,IAAuHxD,SAAS,CAACwE,SAAV,CAAoBhB,YAApB,KAAsCtE,KAAK,CAACkE,QAAN,CAAeI,YAA7K,iBACG,QAAC,MAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,OAAO,EAAEiB,cAHb;AAII,UAAA,QAAQ,EAAErD,WAJd;AAAA,oBAMKA,WAAW,gBAAG,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAAH,GAA0C;AAN1D;AAAA;AAAA;AAAA;AAAA,gBAhCR,EA0CKlC,KAAK,CAACkE,QAAN,KAAmB,IAAnB,iBACG,QAAC,MAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,OAAO,EAAE4B,CAAC,IAAI/D,OAAO,CAACgE,IAAR,CAAa,GAAb,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3CR,EAmDM/F,KAAK,CAACkE,QAAN,KAAmB,IAAnB,IAA2B5E,CAAC,CAAC6E,IAAF,CAAOrD,SAAS,CAAC4E,OAAjB,EAA0BC,MAAM,IAAIA,MAAM,CAACrB,YAAP,KAAwBtE,KAAK,CAACkE,QAAN,CAAeI,YAA3E,CAA5B,iBACG;AAAA,kCACI,QAAC,IAAD;AACI,YAAA,IAAI,MADR;AAEI,YAAA,EAAE,EAAE,EAFR;AAGI,YAAA,KAAK,EAAE;AACHjE,cAAAA,SAAS,EAAE,EADR;AAEH2F,cAAAA,YAAY,EAAE;AAFX,aAHX;AAAA,mCAQI,QAAC,MAAD;AACI,cAAA,OAAO,EAAC,WADZ;AAEI,cAAA,KAAK,EAAC,SAFV;AAGI,cAAA,KAAK,EAAE;AACH7E,gBAAAA,MAAM,EAAE;AADL,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAmBI,QAAC,IAAD;AACI,YAAA,IAAI,MADR;AAEI,YAAA,EAAE,EAAE,EAFR;AAAA,mCAII,QAAC,MAAD;AACI,cAAA,KAAK,EAAC,SADV;AAEI,cAAA,OAAO,EAAC,UAFZ;AAGI,cAAA,OAAO,EAAE2E,CAAC,IAAIzD,aAAa,CAAC,IAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBApDR;AAAA;AAAA;AAAA;AAAA;AAAA,cA/DJ,EAuJMrC,KAAK,CAACkE,QAAN,KAAmB,IAAnB,IAA2B5E,CAAC,CAAC6E,IAAF,CAAOrD,SAAS,CAAC4E,OAAjB,EAA0BC,MAAM,IAAIA,MAAM,CAACrB,YAAP,KAAwBtE,KAAK,CAACkE,QAAN,CAAeI,YAA3E,CAA5B,iBACG,QAAC,IAAD;AACI,QAAA,IAAI,MADR;AAEI,QAAA,EAAE,EAAE,EAFR;AAAA,+BAII,QAAC,MAAD;AACI,UAAA,IAAI,EAAElC,UADV;AAEI,UAAA,UAAU,MAFd;AAAA,iCAII,QAAC,aAAD;AAAA,mCACI,QAAC,MAAD;AACI,cAAA,KAAK,EAAC,SADV;AAEI,cAAA,QAAQ,EAAC,QAFb;AAAA,qCAII,QAAC,UAAD;AACI,gBAAA,SAAS,EAAEN,OAAO,CAACF,SADvB;AAEI,8BAAW,cAFf;AAGI,gBAAA,OAAO,EAAEkE,CAAC,IAAIzD,aAAa,CAAC,KAAD,CAH/B;AAAA,uCAKI,QAAC,IAAD;AACI,kBAAA,IAAI,EAAExC,QADV;AAEI,kBAAA,IAAI,EAAE,CAFV;AAGI,kBAAA,KAAK,EAAC,mBAHV;AAII,gCAAW;AAJf;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cAxJR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyLH,GA1LD,MA2LK;AACD;AACA,wBACI,QAAC,QAAD;AACI,MAAA,IAAI,EAAE,IADV;AAAA,6BAGI,QAAC,gBAAD;AACI,QAAA,KAAK,EAAC;AADV;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;AACJ;;GAxaQgB,S;UAgCWG,S,EACAxB,U,EACDC,S;;;MAlCVoB,S;;AA0aT,SAASoF,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHhC,IAAAA,QAAQ,EAAEgC,KAAK,CAACC,WAAN,CAAkBC,IADzB;AAEHC,IAAAA,OAAO,EAAEH,KAAK,CAACI,gBAAN,CAAuBD,OAF7B;AAGHpC,IAAAA,KAAK,EAAEiC,KAAK,CAACK,mBAAN,CAA0BtC;AAH9B,GAAP;AAKH;;AAED,eAAe1E,OAAO,CAAC0G,eAAD,CAAP,CAAyBpF,SAAzB,CAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport * as _ from 'underscore';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom'; \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@mdi/react';\r\nimport { mdiClose } from '@mdi/js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    //This component will serve as the panel for each individual tab.\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div \r\n            role='tabpanel'\r\n            hidden={index !== value} \r\n            id={`tabpanel-${index}`}\r\n            aria-label={`tab-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n            style={{\r\n                marginTop: 100,\r\n            }}\r\n        >\r\n            {value === index &&\r\n                <Grid \r\n                    item \r\n                    xs\r\n                    style={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    {children}\r\n                </Grid>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    value: PropTypes.any.isRequired,\r\n    index: PropTypes.any.isRequired,\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `tab-${index}`,\r\n        'aria-controls': `tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nfunction Community(props) {\r\n    const [community, setCommunity] = useState(null); //This variable and setter will manipulate community.\r\n    const useStyles = makeStyles(() => ({\r\n        root: {\r\n            marginTop: 100,\r\n        },\r\n        centerContent: {\r\n            margin: 'auto',\r\n            textAlign: 'center',\r\n        },\r\n        nameGrid: {\r\n            margin: 'auto',\r\n            textAlign: 'center',\r\n            marginTop: 20,\r\n        },\r\n        avatarLg: {\r\n            height: 168,\r\n            width: 168,\r\n            margin: 'auto',\r\n        },\r\n        avatarSm: {\r\n            height: 128,\r\n            width: 128,\r\n            margin: 'auto',\r\n        },\r\n        paper: {\r\n            backgroundColor: community !== null ? community.communityTheme : 'rgb(0, 20, 60)',\r\n        },\r\n        closeIcon: {\r\n            color: 'rgb(255, 255, 255)',\r\n        },\r\n    }));\r\n    const classes = useStyles(); //Custom styles for the component. \r\n    const history = useHistory(); //Window history API.\r\n    const params = useParams(); //Access url parameters. \r\n    const formRef = useRef(null); //Ref for validator form when we upload posts.\r\n    const [joinSending, setJoinSending] = useState(false); //Will disable the button while we send a join or request join to the server.\r\n    const [postDialog, setPostDialog] = useState(false); //Will open and close the dialog to make a post.\r\n    const [textPost, setTextPost] = useState(''); //Value for text post. \r\n    const [textPostTitle, setTextPostTitle] = useState(''); //Value for title.\r\n    const [photoPost, setPhotoPost] = useState(null); //Value for photo upload. \r\n    const [photoPostTitle, setPhotoPostTitle] = useState(''); //Value for photo post title. \r\n    const [videoPost, setVideoPost] = useState(null); //Value for video post. \r\n    const [videoPostTitle, setVideoPostTitle] = useState(''); //Video post title. \r\n    const [linkPost, setLinkPost] = useState(''); //Value for the link in a link post. \r\n    const [linkPostTitle, setLinkPostTitle] = useState(''); //Value for link post title. \r\n    const [posting, setPosting] = useState(false); //Will handle disabling buttons and bars when a post is being sent to the server.\r\n\r\n    useEffect(() => {\r\n        //First we need to fetch the community with axios. \r\n        if(true) {\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/fetch/community/${params.communityName}`,\r\n            }).then(response => {\r\n                if(response.data.community) {\r\n                    setCommunity(response.data.community);\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.community.communityTheme}); //Update the theme to match the community theme.\r\n                    props.dispatch({type: 'VisitorPosts/UpdatePosts', payload: response.data.posts}); //Update the posts to match what a visitor viewing these posts will see.\r\n                    //Now determine if the mainUser is in the blockList, and re-route to the previous page if they are. \r\n                    if(props.mainUser !== null) {\r\n                        if(_.find(response.data.community.blockList, person => person.uniqueUserId === props.mainUser.uniqueUserId)) {\r\n                            swal(\r\n                                'Uh Oh!',\r\n                                'You are blocked from this community!',\r\n                                'error',\r\n                            );\r\n                            history.goBack(1);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find that community!',\r\n                        'error',\r\n                    );\r\n                    history.goBack(1);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error finding that community! Please try again.',\r\n                    'error',\r\n                );\r\n                history.goBack(1);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function publicJoin() {\r\n        //Function that will enable a member to join a public community. \r\n        let data = JSON.stringify({\r\n            username: props.mainUser.username,\r\n            uniqueUserId: props.mainUser.uniqueUserId,\r\n            name: community.name,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/public/join/community',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            if(response.data.result === 'success') {\r\n                swal(\r\n                    'Great!',\r\n                    'Successfully joined community!',\r\n                    'success',\r\n                );\r\n                setJoinSending(false);\r\n                setCommunity(response.data.community);\r\n            }\r\n            else {\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error with joining this community! Please try again',\r\n                    'error',\r\n                );\r\n                setJoinSending(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error joining this community! Please try again',\r\n                'error',\r\n            );\r\n            setJoinSending(false);\r\n        });\r\n    }\r\n\r\n    function privateJoinRequest() {\r\n        //This function will handle sending a join notification to the moderator. \r\n        setJoinSending(true);\r\n        let data = JSON.stringify({\r\n            uniqueUserId: props.mainUser.uniqueUserId,\r\n            username: props.mainUser.username,\r\n            moderatorUniqueUserId: community.moderator.uniqueUserId,\r\n            name: community.name,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/community/join/request',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            if(response.data === 'duplicate') {\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'You have already sent a request to join this community!',\r\n                    'error',\r\n                );\r\n                setJoinSending(false);\r\n            }\r\n            else {\r\n                swal(\r\n                    'Great!',\r\n                    'Community join request sent!',\r\n                    'success',\r\n                );\r\n                setJoinSending(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error sending a request to join this community! Please try again.',\r\n                'error',\r\n            );\r\n            setJoinSending(false);\r\n        });\r\n    }\r\n\r\n    function leaveCommunity() {\r\n        //This function will remove a member from a community if they are within it. \r\n        setJoinSending(true);\r\n        let data = JSON.stringify({\r\n            username: props.mainUser.username,\r\n            uniqueUserId: props.mainUser.uniqueUserId,\r\n            name: community.name,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/leave/community',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            if(response.data.result === 'success') {\r\n                swal(\r\n                    'Great!',\r\n                    'You have successfully left this community',\r\n                    'success',\r\n                );\r\n                setCommunity(response.data.community);\r\n                setJoinSending(false);\r\n            }\r\n            else {\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error leaving this community! Please try again.',\r\n                    'error',\r\n                );\r\n                setJoinSending(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error leaving this community! Please try again.',\r\n                'error',\r\n            );\r\n            setJoinSending(false);\r\n        });\r\n    }\r\n\r\n    if(community !== null) {\r\n        return (\r\n            <Grid \r\n                className={classes.root} \r\n                container \r\n            >\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    className={classes.centerContent} \r\n                >\r\n                    <Hidden \r\n                        smDown \r\n                    >\r\n                        <Avatar \r\n                            className={classes.avatarLg} \r\n                            src={`http://192.168.0.9:3001/api/get-photo/${community.avatar}`}\r\n                            alt={`${community.name} avatar`}\r\n                            title={`${community.name} avatar`}\r\n                            variant='square'\r\n                        />\r\n                    </Hidden>\r\n                    <Hidden \r\n                        mdUp \r\n                    >\r\n                        <Avatar \r\n                            src={`http://192.168.0.9:3001/api/get-photo/${community.avatar}`}\r\n                            className={classes.avatarSm} \r\n                            title={`${community.name} avatar`}\r\n                            alt={`${community.name} avatar`}\r\n                            variant='square'\r\n                        />\r\n                    </Hidden>\r\n                </Grid>\r\n                {/* The grid below will store the name of the community */}\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    className={classes.nameGrid} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                        align='center' \r\n                    >\r\n                        {community.name}\r\n                    </Typography>\r\n                </Grid>\r\n                {/* End of the grid to display the community name */}\r\n                {/* Below is the Grid to display the title of the community */}\r\n                <Grid \r\n                    item \r\n                    xs={12}\r\n                    className={classes.nameGrid} \r\n                >\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p'\r\n                        justify='left' \r\n                    >\r\n                        {community.title}\r\n                    </Typography>\r\n                </Grid>\r\n                {/* End of the Grid to display the title of the community */}\r\n                {/* Now create a button for the user if they are logged in, not a member, and the community is public */}\r\n                <Grid \r\n                    item \r\n                    xs={12}\r\n                    style={{\r\n                        margin: 'auto',\r\n                        textAlign: 'center',\r\n                        marginTop: 20,\r\n                    }}\r\n                >\r\n                    {/* Button if the user is logged in, not a member, and the community is public */}\r\n                    {(props.mainUser !== null && !_.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.communityPrivacy === 'public' && community.moderator.uniqueUserId !== props.mainUser.uniqueUserId) &&\r\n                        <Button \r\n                            color='primary' \r\n                            variant='contained' \r\n                            onClick={publicJoin}\r\n                            disabled={joinSending}\r\n                        >\r\n                            {joinSending ? <CircularProgress color='primary' /> : 'join'}\r\n                        </Button>\r\n                    }\r\n                    {/* Below is the Button if the user is logged in, not a member, and the community is private */}\r\n                    {(props.mainUser !== null && !_.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.communityPrivacy === 'private' && community.moderator.uniqueUserId !== props.mainUser.uniqueUserid) &&\r\n                        <Button \r\n                            color='primary' \r\n                            variant='contained' \r\n                            onClick={privateJoinRequest}\r\n                            disabled={joinSending}\r\n                        >\r\n                            {joinSending ? <CircularProgress color='primary' /> : 'join'}\r\n                        </Button>\r\n                    }\r\n                    {(props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.moderator.uniqueUserId !==  props.mainUser.uniqueUserId) &&\r\n                        <Button \r\n                            color='primary'\r\n                            variant='outlined' \r\n                            onClick={leaveCommunity}\r\n                            disabled={joinSending}\r\n                        >\r\n                            {joinSending ? <CircularProgress color='primary' /> : 'leave'}\r\n                        </Button>\r\n                    }\r\n                    {/* Below, we will add a button to route someone who is not signed up or logged in to the sign up page */}\r\n                    {props.mainUser === null &&\r\n                        <Button \r\n                            color='primary' \r\n                            onClick={e => history.push('/')}\r\n                        >\r\n                            Sign up or log in!\r\n                        </Button>\r\n                    }\r\n                    {/*Now I will have two buttons in two grids for members of the community to either chat or post content to the community */}\r\n                    {(props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId)) &&\r\n                        <div>\r\n                            <Grid \r\n                                item \r\n                                xs={12} \r\n                                style={{\r\n                                    marginTop: 20,\r\n                                    marginBottom: 20,\r\n                                }}\r\n                            >\r\n                                <Button \r\n                                    variant='contained' \r\n                                    color='primary' \r\n                                    style={{\r\n                                        margin: 'auto',\r\n                                    }}\r\n                                >\r\n                                    Chat \r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid \r\n                                item \r\n                                xs={12} \r\n                            >\r\n                                <Button \r\n                                    color='primary' \r\n                                    variant='outlined' \r\n                                    onClick={e => setPostDialog(true)}\r\n                                >\r\n                                    Post \r\n                                </Button>\r\n                            </Grid>\r\n                        </div>\r\n                    }\r\n                    {/* This is the end of the two Grids for a the chat Button and the Post button */}\r\n                    {/*Below create the Dialog that will open when the user tries to make a post. Only show when a user is part of the community */}\r\n                </Grid>\r\n                {(props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId)) &&\r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                    >\r\n                        <Dialog \r\n                            open={postDialog} \r\n                            fullScreen \r\n                        >\r\n                            <DialogContent>\r\n                                <AppBar \r\n                                    color='primary' \r\n                                    position='static' \r\n                                >\r\n                                    <IconButton \r\n                                        className={classes.closeIcon} \r\n                                        aria-label='Dialog close'\r\n                                        onClick={e => setPostDialog(false)}\r\n                                    >\r\n                                        <Icon \r\n                                            path={mdiClose}\r\n                                            size={1}\r\n                                            title='Dialog close icon'\r\n                                            aria-label='Dialog close icon'\r\n                                        />\r\n                                    </IconButton>\r\n                                </AppBar>\r\n                            </DialogContent>\r\n                        </Dialog>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n        );\r\n    }\r\n    else {\r\n        //If the community is null, simply return a Backdrop with a CircularProgress inside \r\n        return (\r\n            <Backdrop \r\n                open={true} \r\n            >\r\n                <CircularProgress \r\n                    color='primary' \r\n                />\r\n            </Backdrop>\r\n        );\r\n    }  \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n        posts: state.visitorPostsReducer.posts,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Community);"]},"metadata":{},"sourceType":"module"}