{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\Place.js\";\n\n/*import React, { useState, useEffect, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom'; \r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        marginTop: 100,\r\n    },\r\n    centerContent: {\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n    },\r\n    nameGrid: {\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        marginTop: 20,\r\n    },\r\n    avatarLg: {\r\n        height: 168,\r\n        width: 168,\r\n    },\r\n    avatarSm: {\r\n        height: 128,\r\n        width: 128,\r\n    },\r\n}));\r\n\r\n\r\nfunction Place(props) {\r\n    const classes = useStyles(); //Custom styles for the component. \r\n    const history = useHistory(); //Window history API.\r\n    const params = useParams(); //Access url parameters. \r\n    const formRef = useRef(null); //Ref for validator form when we upload posts.\r\n    const [community, setCommunity] = useState(null); //This variable and setter will manipulate community.\r\n\r\n    useEffect(() => {\r\n        //First we need to fetch the community with axios. \r\n        if(true) {\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/fetch/community/${params.name}`,\r\n            }).then(response => {\r\n                if(response.data.community) {\r\n                    setCommunity(response.data.community);\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.community.communityTheme}); //Update the theme to match the community theme.\r\n                    props.dipatch({type: 'VisitorPosts/UpdatePosts', payload: response.data.posts}); //Update the posts to match what a visitor viewing these posts will see.\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find that community!',\r\n                        'error',\r\n                    );\r\n                    \r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error finding that community! Please try again.',\r\n                    'error',\r\n                );\r\n                \r\n            });\r\n        }\r\n    }, []);\r\n\r\n    if(community !== null) {\r\n        return (\r\n            <Grid \r\n                className={classes.root} \r\n                container \r\n            >\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    className={classes.centerContent} \r\n                >\r\n                    <Hidden \r\n                        smDown \r\n                    >\r\n                        <Avatar \r\n                            className={classes.avatarLg} \r\n                            src={`http://192.168.0.9:3001/api/get-photo/${community.avatar}`}\r\n                            alt={`${community.name} avatar`}\r\n                            title={`${community.name} avatar`}\r\n                        />\r\n                    </Hidden>\r\n                    <Hidden \r\n                        mdUp \r\n                    >\r\n                        <Avatar \r\n                            src={`http://192.168.0.9:3001/api/get-photo/${community.avatar}`}\r\n                            className={classes.avatarSm} \r\n                            title={`${community.name} avatar`}\r\n                            alt={`${community.name} avatar`}\r\n                        />\r\n                    </Hidden>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    className={classes.nameGrid} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                        align='center' \r\n                    >\r\n                        {community.name}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={12}\r\n                    className={classes.nameGrid} \r\n                >\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p'\r\n                        justify='left' \r\n                    >\r\n                        {community.title}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n    else {\r\n        //If the community is null, simply return a Backdrop with a CircularProgress inside \r\n        return (\r\n            <Backdrop \r\n                open={true} \r\n            >\r\n                <CircularProgress \r\n                    color='primary' \r\n                />\r\n            </Backdrop>\r\n        );\r\n    }  \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n        posts: state.visitorPostsReducer.posts,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Place); \r\n*/\nimport React from 'react';\nexport default function Place() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Now the component is rendering properly.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n}\n_c = Place;\n\nvar _c;\n\n$RefreshReg$(_c, \"Place\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/Place.js"],"names":["React","Place"],"mappingskB,OAAlB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KANuBA,K","sourcesContent":["/*import React, { useState, useEffect, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom'; \r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        marginTop: 100,\r\n    },\r\n    centerContent: {\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n    },\r\n    nameGrid: {\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        marginTop: 20,\r\n    },\r\n    avatarLg: {\r\n        height: 168,\r\n        width: 168,\r\n    },\r\n    avatarSm: {\r\n        height: 128,\r\n        width: 128,\r\n    },\r\n}));\r\n\r\n\r\nfunction Place(props) {\r\n    const classes = useStyles(); //Custom styles for the component. \r\n    const history = useHistory(); //Window history API.\r\n    const params = useParams(); //Access url parameters. \r\n    const formRef = useRef(null); //Ref for validator form when we upload posts.\r\n    const [community, setCommunity] = useState(null); //This variable and setter will manipulate community.\r\n\r\n    useEffect(() => {\r\n        //First we need to fetch the community with axios. \r\n        if(true) {\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/fetch/community/${params.name}`,\r\n            }).then(response => {\r\n                if(response.data.community) {\r\n                    setCommunity(response.data.community);\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.community.communityTheme}); //Update the theme to match the community theme.\r\n                    props.dipatch({type: 'VisitorPosts/UpdatePosts', payload: response.data.posts}); //Update the posts to match what a visitor viewing these posts will see.\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find that community!',\r\n                        'error',\r\n                    );\r\n                    \r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error finding that community! Please try again.',\r\n                    'error',\r\n                );\r\n                \r\n            });\r\n        }\r\n    }, []);\r\n\r\n    if(community !== null) {\r\n        return (\r\n            <Grid \r\n                className={classes.root} \r\n                container \r\n            >\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    className={classes.centerContent} \r\n                >\r\n                    <Hidden \r\n                        smDown \r\n                    >\r\n                        <Avatar \r\n                            className={classes.avatarLg} \r\n                            src={`http://192.168.0.9:3001/api/get-photo/${community.avatar}`}\r\n                            alt={`${community.name} avatar`}\r\n                            title={`${community.name} avatar`}\r\n                        />\r\n                    </Hidden>\r\n                    <Hidden \r\n                        mdUp \r\n                    >\r\n                        <Avatar \r\n                            src={`http://192.168.0.9:3001/api/get-photo/${community.avatar}`}\r\n                            className={classes.avatarSm} \r\n                            title={`${community.name} avatar`}\r\n                            alt={`${community.name} avatar`}\r\n                        />\r\n                    </Hidden>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    className={classes.nameGrid} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                        align='center' \r\n                    >\r\n                        {community.name}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={12}\r\n                    className={classes.nameGrid} \r\n                >\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p'\r\n                        justify='left' \r\n                    >\r\n                        {community.title}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n    else {\r\n        //If the community is null, simply return a Backdrop with a CircularProgress inside \r\n        return (\r\n            <Backdrop \r\n                open={true} \r\n            >\r\n                <CircularProgress \r\n                    color='primary' \r\n                />\r\n            </Backdrop>\r\n        );\r\n    }  \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n        posts: state.visitorPostsReducer.posts,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Place); \r\n*/\r\n\r\nimport React from 'react';\r\n\r\nexport default function Place() {\r\n    return (\r\n        <div>\r\n            Now the component is rendering properly. \r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}