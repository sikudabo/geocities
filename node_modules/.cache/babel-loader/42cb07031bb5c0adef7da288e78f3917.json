{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simeonikudabo/Downloads/geocities/src/components/UserSettings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport { validatorForm, textValidator } from 'react-material-ui-form-validator';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { SwatchesPicker } from 'react-color';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  topMarg: {\n    marginTop: 100\n  },\n  gridMarg: {\n    marginTop: 25\n  }\n});\n\nfunction UserSettings(props) {\n  _s();\n\n  const history = useHistory(); //Variable for navigation. \n\n  const classes = useStyles(); //Variable for custom styles\n\n  const [newUsername, setNewUsername] = useState(''); //Variable and setter for updated username\n\n  const [newPassword, setNewPassword] = useState(''); //Variable and setter for a new password\n\n  const [newEmail, setNewEmail] = useState(''); //Variable and setter for a new emabil address. \n\n  const usernameRef = useRef(null);\n  const [makingEdit, setMakingEdit] = useState(false); //Variable and setter to disable buttons when change is being made\n\n  const regularExpressions = {\n    usernameExpression: /^\\w+$/,\n    alphaStartRe: /^[A-Za-z]+$/,\n    emailRe: /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/\n  }; //These are the regular expressions that must be matched!\n\n  useEffect(() => {\n    //First we need to see if the user is logged in. If not, we re-route them home. \n    if (props.user === null) {\n      swal('Uh Oh!', 'You must be logged in to manage your settings!', 'error');\n      history.push('/');\n    } else {\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.17:3001/api/grab/user/${props.user.uniqueUserId}`\n      }).then(response => {\n        //After the call, update the user and the theme color. \n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        props.dispatch({\n          type: 'ThemeChange',\n          payload: response.data.user.profileTheme\n        });\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error trying to update your settings!', 'error');\n        history.goBack(1);\n      });\n    }\n  }, []);\n\n  function preventSpaces(e) {\n    //This function will prevent a user from adding spaces to their username \n    if (e.keyCode === 32) {\n      e.preventDefault();\n      return false;\n    }\n  }\n\n  function changeUsername() {\n    //This function will handle updating a username \n    setMakingEdit(true);\n\n    if (newUsername.length.trim < 6) {\n      swal('Uh Oh!', 'Username must be at least 6 characters long!', 'error');\n      setMakingEdit(false);\n      return false;\n    } else if (newUsername.length > 24) {\n      swal('Uh Oh!', 'Username must not be more than 24 characters long!', 'error');\n      setMakingEdit(false);\n      return false;\n    } else if (!regularExpressions.usernameExpression.test(newUsername)) {\n      swal('Uh Oh!', 'Username can only contain letters, numbers, and underscores, and it must start with a letter!', 'error');\n      setMakingEdit(false);\n      return false;\n    } else if (!regularExpressions.alphaStartRe.test(newUsername.slice(0, 1))) {\n      swal('Uh Oh!', 'Username must start with a letter', 'error');\n      setMakingEdit(false);\n      return false;\n    } else {\n      let data = JSON.stringify({\n        uniqueUserId: props.user.uniqueUserId,\n        username: newUsername\n      });\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.17:3001/api/change/username',\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.data === 'username taken') {\n          swal('Uh Oh!', 'That username is taken. Please select another one!', 'error');\n          setMakingEdit(false);\n        } else {\n          swal('Great!', 'You successfully changed your username!', 'success');\n          props.dispatch({\n            type: 'user/updateUser',\n            payload: response.data.user\n          });\n          setNewUsername('');\n          setMakingEdit(false);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error trying to update your username!', 'error');\n        setMakingEdit(false);\n      });\n    }\n  }\n\n  function changePassword() {\n    //This function will handle changing the user password. \n    setMakingEdit(true);\n\n    if (newPassword.trim().length < 6) {\n      swal('Uh Oh!', 'Your password must be at least 6-characters long!', 'error');\n      setMakingEdit(false);\n      return false;\n    } else {\n      let data = JSON.stringify({\n        uniqueUserId: props.user.uniqueUserId,\n        password: newPassword\n      });\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.17:3001/api/change/password',\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        swal('Great!', 'You successfully changed your password', 'success');\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        setNewPassword('');\n        setMakingEdit(false);\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error updating your password!', 'error');\n        setMakingEdit(false);\n      });\n    }\n  }\n\n  if (props.user) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.topMarg,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          align: \"center\",\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          align: \"center\",\n          color: newUsername.length < 6 || newUsername.length > 24 ? 'error' : 'default',\n          children: [newUsername.length, \"/24\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: newUsername,\n          onChange: e => setNewUsername(e.target.value),\n          label: \"Update username\",\n          placeholder: props.user.username,\n          helperText: newUsername.length > 24 || newUsername.length < 6 ? 'Username must be between 6 and 24 characters long!' : 'Username must start with a letter and can only contain letters numbers and underscores with no spaces',\n          onKeyDown: preventSpaces,\n          color: \"primary\",\n          variant: \"outlined\",\n          \"aria-label\": \"Username\",\n          InputLabelProps: {\n            shrink: true\n          },\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: 20,\n            margin: 'auto'\n          },\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: changeUsername,\n          disabled: makingEdit,\n          children: makingEdit ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 39\n          }, this) : 'change username'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 30\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            align: \"center\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            variant: \"outlined\",\n            placeholer: \"Password\",\n            type: \"password\",\n            label: \"password\",\n            helperText: \"Password must be at least 6-characters long!\",\n            InputLabelProps: {\n              shrink: true\n            },\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginTop: 20\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: makingEdit,\n            onClick: changePassword,\n            children: makingEdit ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 43\n            }, this) : 'Update password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 25\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onKeyDown: preventSpaces,\n            value: newEmail,\n            onChange: e => setNewEmail(e.target.value),\n            placeholer: props.user.email,\n            label: \"Email\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: true,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(UserSettings, \"ZKKAisZVKA8bbHLNfecvj0B+F+0=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = UserSettings;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    theme: state.userThemeReducer.primary\n  };\n}\n\nexport default connect(mapStateToProps)(UserSettings);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSettings\");","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/UserSettings.js"],"names":["React","useState","useEffect","useRef","Grid","Typography","Button","Backdrop","CircularProgress","TextField","validatorForm","textValidator","axios","connect","Autocomplete","Select","FormControl","FormLabel","FormControlLabel","FormGroup","Checkbox","SwatchesPicker","swal","useHistory","makeStyles","useStyles","topMarg","marginTop","gridMarg","UserSettings","props","history","classes","newUsername","setNewUsername","newPassword","setNewPassword","newEmail","setNewEmail","usernameRef","makingEdit","setMakingEdit","regularExpressions","usernameExpression","alphaStartRe","emailRe","user","push","method","url","uniqueUserId","then","response","dispatch","type","payload","data","profileTheme","catch","err","console","log","message","goBack","preventSpaces","e","keyCode","preventDefault","changeUsername","length","trim","test","slice","JSON","stringify","username","headers","changePassword","password","target","value","shrink","margin","email","mapStateToProps","state","userReducer","theme","userThemeReducer","primary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport { validatorForm, textValidator } from 'react-material-ui-form-validator';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { SwatchesPicker } from 'react-color';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(({\n    topMarg: {\n        marginTop: 100,\n    },\n    gridMarg: {\n        marginTop: 25,\n    },\n}));\n\nfunction UserSettings(props) {\n    const history = useHistory(); //Variable for navigation. \n    const classes = useStyles(); //Variable for custom styles\n    const [newUsername, setNewUsername] = useState(''); //Variable and setter for updated username\n    const [newPassword, setNewPassword] = useState(''); //Variable and setter for a new password\n    const [newEmail, setNewEmail] = useState(''); //Variable and setter for a new emabil address. \n    const usernameRef = useRef(null);\n    const [makingEdit, setMakingEdit] = useState(false); //Variable and setter to disable buttons when change is being made\n    const regularExpressions = {\n        usernameExpression: /^\\w+$/,\n        alphaStartRe: /^[A-Za-z]+$/,\n        emailRe: /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/,\n    }; //These are the regular expressions that must be matched!\n\n    useEffect(() => {\n        //First we need to see if the user is logged in. If not, we re-route them home. \n        if(props.user === null) {\n            swal(\n                'Uh Oh!',\n                'You must be logged in to manage your settings!',\n                'error',\n            );\n\n            history.push('/');\n        }\n        else {\n            return axios({\n                method: 'GET',\n                url: `http://192.168.0.17:3001/api/grab/user/${props.user.uniqueUserId}`,\n            }).then(response => {\n                //After the call, update the user and the theme color. \n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\n                props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error trying to update your settings!',\n                    'error',\n                );\n\n                history.goBack(1);\n            });\n        }\n    }, []);\n\n    function preventSpaces(e) {\n        //This function will prevent a user from adding spaces to their username \n        if(e.keyCode === 32) {\n            e.preventDefault();\n            return false;\n        }\n    }\n\n    function changeUsername() {\n        //This function will handle updating a username \n        setMakingEdit(true);\n\n        if(newUsername.length.trim < 6) {\n            swal(\n                'Uh Oh!',\n                'Username must be at least 6 characters long!',\n                'error',\n            ); \n            setMakingEdit(false);\n            return false;\n        }\n        else if(newUsername.length > 24) {\n            swal(\n                'Uh Oh!',\n                'Username must not be more than 24 characters long!',\n                'error',\n            ); \n            setMakingEdit(false);\n            return false;\n        }\n        else if(!regularExpressions.usernameExpression.test(newUsername)) {\n            swal(\n                'Uh Oh!',\n                'Username can only contain letters, numbers, and underscores, and it must start with a letter!',\n                'error',\n            ); \n            setMakingEdit(false);\n            return false;\n        }\n        else if(!regularExpressions.alphaStartRe.test(newUsername.slice(0, 1))) {\n            swal(\n                'Uh Oh!',\n                'Username must start with a letter',\n                'error',\n            ); \n            setMakingEdit(false);\n            return false;\n        }\n        else {\n            let data = JSON.stringify({\n                uniqueUserId: props.user.uniqueUserId,\n                username: newUsername,\n            });\n\n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/change/username',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                if(response.data === 'username taken') {\n                    swal(\n                        'Uh Oh!',\n                        'That username is taken. Please select another one!',\n                        'error',\n                    );\n                    setMakingEdit(false);\n                }\n                else {\n                    swal(\n                        'Great!',\n                        'You successfully changed your username!',\n                        'success',\n                    );\n                    props.dispatch({type: 'user/updateUser', payload: response.data.user});\n                    setNewUsername('');\n                    setMakingEdit(false);\n                }\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error trying to update your username!',\n                    'error',\n                );\n                setMakingEdit(false);\n            });\n        }\n    }\n\n    function changePassword() {\n        //This function will handle changing the user password. \n        setMakingEdit(true);\n        if(newPassword.trim().length < 6) {\n            swal(\n                'Uh Oh!',\n                'Your password must be at least 6-characters long!',\n                'error',\n            );\n            setMakingEdit(false);\n            return false;\n        }\n        else {\n            let data = JSON.stringify({\n                uniqueUserId: props.user.uniqueUserId,\n                password: newPassword,\n            });\n\n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/change/password',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                swal(\n                    'Great!',\n                    'You successfully changed your password',\n                    'success',\n                );\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\n                setNewPassword('');\n                setMakingEdit(false);\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error updating your password!',\n                    'error',\n                );\n                setMakingEdit(false);\n            });\n        }\n    }\n\n    if(props.user) {\n        return (\n            <Grid \n                container \n                className={classes.topMarg}\n            >\n                <Grid \n                    item \n                    xs={12} \n                >\n                    <Typography\n                        variant='h6' \n                        component='h6' \n                        align='center' \n                    >\n                        Settings \n                    </Typography>\n                </Grid>\n                <Grid \n                    item \n                    xs={12} \n                >\n                    <Typography \n                        variant='h6' \n                        component='h6' \n                        align='center' \n                        color={(newUsername.length < 6 || newUsername.length > 24) ? 'error' : 'default'}\n                    >\n                        {newUsername.length}/24\n                    </Typography>\n                    <TextField \n                        value={newUsername}\n                        onChange={e => setNewUsername(e.target.value)}\n                        label='Update username'\n                        placeholder={props.user.username}\n                        helperText={(newUsername.length > 24 || newUsername.length < 6) ? 'Username must be between 6 and 24 characters long!' : 'Username must start with a letter and can only contain letters numbers and underscores with no spaces'}\n                        onKeyDown={preventSpaces}\n                        color='primary' \n                        variant='outlined'\n                        aria-label='Username' \n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        fullWidth\n                    />\n                    <Button \n                        style={{\n                            marginTop: 20,\n                            margin: 'auto',\n                        }}\n                        color='primary' \n                        variant='contained' \n                        onClick={changeUsername}\n                        disabled={makingEdit}\n                    >\n                        {makingEdit ? <CircularProgress /> : 'change username'}\n                    </Button>\n                </Grid>\n                <Grid \n                    xs={12} \n                    item \n                >\n                    <div \n                        style={{\n                            marginTop: 30,\n                        }}\n                    >\n                        <Typography \n                            variant='h6' \n                            component='h6' \n                            align='center'\n                        >\n                            Password \n                        </Typography>\n                        <TextField \n                            value={newPassword} \n                            onChange={e => setNewPassword(e.target.value)}\n                            variant='outlined' \n                            placeholer='Password' \n                            type='password' \n                            label='password'\n                            helperText='Password must be at least 6-characters long!' \n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            fullWidth \n                        />\n                        <Button \n                            style={{\n                                marginTop: 20,\n                            }}\n                            variant='contained' \n                            color='primary' \n                            disabled={makingEdit} \n                            onClick={changePassword}\n                        >\n                            {makingEdit ? <CircularProgress /> : 'Update password'} \n                        </Button>\n                    </div>\n                </Grid>\n                <Grid \n                    item\n                    xs={12}\n                >\n                    <div \n                        style={{\n                            marginTop: 25,\n                        }}\n                    >\n                        <Typography \n                            variant='h6' \n                            component='h6' \n                        >\n                            Email\n                        </Typography>\n                        <TextField \n                            onKeyDown={preventSpaces}\n                            value={newEmail} \n                            onChange={e => setNewEmail(e.target.value)}\n                            placeholer={props.user.email} \n                            label='Email' \n                            variant='outlined' \n                            fullWidth \n                        />\n                    </div>\n                </Grid>\n            </Grid>\n        );\n    }\n    else {\n        return (\n            <Backdrop \n                open={true} \n            >\n                <CircularProgress \n                    color='primary' \n                />\n            </Backdrop>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.userReducer.user,\n        theme: state.userThemeReducer.primary,\n    };\n}\n\nexport default connect(mapStateToProps)(UserSettings);"]},"metadata":{},"sourceType":"module"}