{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simeonikudabo/Downloads/geocities/src/components/Events.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\nimport EventComponent from './EventComponent';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(() => ({\n  topGrid: {\n    marginTop: 100\n  }\n}));\n\nfunction Events(props) {\n  _s();\n\n  const [events, setEvents] = useState([]); //Variable and setter for all events on the page. \n\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {\n    //First, check to see if the user is logged in and update the theme. \n    if (props.user !== null) {\n      props.dispatch({\n        type: 'ThemeChange',\n        payload: props.user.profileTheme\n      });\n    }\n\n    if (true) {\n      return axios({\n        method: 'GET',\n        url: 'http://192.168.0.17:3001/api/fetch/events'\n      }).then(response => {\n        setEvents([...response.data.events]);\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error retreiving the events! Please try again.', 'error');\n        history.goBack(1);\n      });\n    }\n\n    if (props.user !== null) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.topGrid,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            align: \"center\",\n            children: \"GeoCities Events!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    }\n  }, []);\n}\n\n_s(Events, \"EcmgNudJXS7FqGXeVHAjlke7ubw=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Events;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    primary: state.themeReducer.theme\n  };\n}\n\nexport default connect(mapStateToProps)(Events);\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/Events.js"],"names":["React","useState","useEffect","Grid","Typography","connect","axios","swal","useHistory","EventComponent","makeStyles","useStyles","topGrid","marginTop","Events","props","events","setEvents","history","classes","user","dispatch","type","payload","profileTheme","method","url","then","response","data","catch","err","console","log","message","goBack","mapStateToProps","state","userReducer","primary","themeReducer","theme"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC,OAAO;AAChCE,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN;AADuB,CAAP,CAAD,CAA5B;;AAMA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC,CADmB,CACuB;;AAC1C,QAAMiB,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,OAAO,GAAGR,SAAS,EAAzB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAGa,KAAK,CAACK,IAAN,KAAe,IAAlB,EAAwB;AACpBL,MAAAA,KAAK,CAACM,QAAN,CAAe;AAACC,QAAAA,IAAI,EAAE,aAAP;AAAsBC,QAAAA,OAAO,EAAER,KAAK,CAACK,IAAN,CAAWI;AAA1C,OAAf;AACH;;AACD,QAAG,IAAH,EAAS;AACL,aAAOlB,KAAK,CAAC;AACTmB,QAAAA,MAAM,EAAE,KADC;AAETC,QAAAA,GAAG,EAAE;AAFI,OAAD,CAAL,CAGJC,IAHI,CAGCC,QAAQ,IAAI;AAChBX,QAAAA,SAAS,CAAC,CAAC,GAAGW,QAAQ,CAACC,IAAT,CAAcb,MAAlB,CAAD,CAAT;AACH,OALM,EAKJc,KALI,CAKEC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACA3B,QAAAA,IAAI,CACA,QADA,EAEA,6DAFA,EAGA,OAHA,CAAJ;AAKAW,QAAAA,OAAO,CAACiB,MAAR,CAAe,CAAf;AACH,OAbM,CAAP;AAcH;;AAED,QAAGpB,KAAK,CAACK,IAAN,KAAe,IAAlB,EAAwB;AACpB,0BACI,QAAC,IAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,SAAS,EAAED,OAAO,CAACP,OAFvB;AAAA,+BAII,QAAC,IAAD;AACI,UAAA,IAAI,MADR;AAEI,UAAA,EAAE,EAAE,EAFR;AAAA,iCAII,QAAC,UAAD;AACI,YAAA,OAAO,EAAC,IADZ;AAEI,YAAA,SAAS,EAAC,IAFd;AAGI,YAAA,KAAK,EAAC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAmBH;AACJ,GA3CQ,EA2CN,EA3CM,CAAT;AA4CH;;GAjDQE,M;UAEWN,U,EACAG,S;;;KAHXG,M;;AAmDT,SAASsB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHjB,IAAAA,IAAI,EAAEiB,KAAK,CAACC,WAAN,CAAkBlB,IADrB;AAEHmB,IAAAA,OAAO,EAAEF,KAAK,CAACG,YAAN,CAAmBC;AAFzB,GAAP;AAIH;;AAED,eAAepC,OAAO,CAAC+B,eAAD,CAAP,CAAyBtB,MAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\nimport EventComponent from './EventComponent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    topGrid: {\n        marginTop: 100,\n    },\n}));\n\nfunction Events(props) {\n    const [events, setEvents] = useState([]); //Variable and setter for all events on the page. \n    const history = useHistory();\n    const classes = useStyles();\n\n    useEffect(() => {\n        //First, check to see if the user is logged in and update the theme. \n        if(props.user !== null) {\n            props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\n        }\n        if(true) {\n            return axios({\n                method: 'GET',\n                url: 'http://192.168.0.17:3001/api/fetch/events',\n            }).then(response => {\n                setEvents([...response.data.events]);\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error retreiving the events! Please try again.',\n                    'error',\n                );\n                history.goBack(1);\n            });\n        }\n\n        if(props.user !== null) {\n            return (\n                <Grid \n                    container\n                    className={classes.topGrid}\n                >\n                    <Grid \n                        item \n                        xs={12} \n                    >\n                        <Typography \n                            variant='h6' \n                            component='h6' \n                            align='center' \n                        >\n                            GeoCities Events! \n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n    }, []);\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.userReducer.user,\n        primary: state.themeReducer.theme,\n    };\n}\n\nexport default connect(mapStateToProps)(Events);"]},"metadata":{},"sourceType":"module"}