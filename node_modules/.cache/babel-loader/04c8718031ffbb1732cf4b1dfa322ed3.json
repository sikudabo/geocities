{"ast":null,"code":"import _slicedToArray from\"c:/Users/bobma/Downloads/excite-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"c:/Users/bobma/Downloads/excite-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"c:/Users/bobma/Downloads/excite-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect,useLayoutEffect,useRef}from'react';import{useHistory,useParams}from'react-router-dom';import Grid from'@material-ui/core/Grid';import Avatar from'@material-ui/core/Avatar';import Typography from'@material-ui/core/Typography';import Button from'@material-ui/core/Button';import Tabs from'@material-ui/core/Tabs';import Tab from'@material-ui/core/Tab';import Dialog from'@material-ui/core/Dialog';import DialogContent from'@material-ui/core/DialogContent';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import{connect}from'react-redux';import axios from'axios';import*as _ from'underscore';import swal from'sweetalert';import{makeStyles}from'@material-ui/core/styles';import Hidden from'@material-ui/core/Hidden';import Icon from'@mdi/react';import{mdiCheckBold,mdiPencil,mdiClose,mdiCamera,mdiVideo,mdiTwitter,mdiInstagram,mdiYoutube}from'@mdi/js';import Paper from'@material-ui/core/Paper';import ListItem from'@material-ui/core/ListItem';import ListItemText from'@material-ui/core/ListItemText';import ListItemIcon from'@material-ui/core/ListItemIcon';import Divider from'@material-ui/core/Divider';import Link from'@material-ui/core/Link';import Backdrop from'@material-ui/core/Backdrop';import CircularProgress from'@material-ui/core/CircularProgress';function TabPanel(props){//This component will serve as the panel for each individual tab.\nvar children=props.children,value=props.value,index=props.index,other=_objectWithoutProperties(props,[\"children\",\"value\",\"index\"]);return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({role:\"tabpanel\",hidden:index!==value,id:\"tabpanel-\".concat(index),\"aria-label\":\"tab-\".concat(index),\"aria-labelledby\":\"tab-\".concat(index)},other),{},{style:{marginTop:100},children:value===index&&/*#__PURE__*/_jsx(Grid,{item:true,xs:true,style:{textAlign:'center'},children:children})}));}function a11yProps(index){return{id:\"tab-\".concat(index),'aria-controls':\"tabpanel-\".concat(index)};}function GeoUser(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),geoUser=_useState2[0],setGeoUser=_useState2[1];var params=useParams();var history=useHistory();useEffect(function(){if(props.mainUser===null){//Call the API to get a public profile view for a user who is not logged in.\nreturn axios({method:'GET',url:\"https://www.geocities.cc/api/get/public/geo/user/\".concat(params.uniqueUserId)}).then(function(response){if(response.data.geoUser){//If we were able to get a user, set post and theme globally, and the local geoUser state.\nprops.dispatch({type:'visitorPosts/updatePosts',payload:response.data.posts});props.dispatch({type:'ThemeChange',payload:response.data.geoUser.profileTheme});setGeoUser(response.data.geoUser);//Set the local geoUser state variable\n}else{swal('Uh Oh!','We could not find that user! Their profile might not exist.','error');}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error finding that user! Please try again.','error');});}else if(props.mainUser!==null){return axios({method:'GET',url:\"https://www.geocities.cc/api/get/geo/user/\".concat(params.uniqueUserId,\"/\").concat(props.mainUser.uniqueUserId)}).then(function(response){if(response.data.geoUser&&response.data.mainUser){if(response.data.geoUser.uniqueUserId===props.mainUser.uniqueUserId){history.push('/profile');}else{if(response.data.geoUser.blockList.includes(response.data.mainUser.uniqueUserId)){swal('Uh Oh!','This user has blocked you!','error');history.goBack(1);}else{props.dispatch({type:'user/updateUser',payload:response.data.mainUser});props.dispatch({type:'ThemeChange',payload:response.data.geoUser.profileTheme});props.dispatch({type:'visitorPosts/updatePosts',payload:response.data.posts});setGeoUser(response.data.geoUser);}}}else{swal('Uh Oh!','Could not find that GeoCities user!','error');history.goBack(1);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error getting that users profile! Please try again.','error');history.goBack(1);});}},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[geoUser!==null&&/*#__PURE__*/_jsx(\"p\",{children:geoUser.username}),geoUser===null&&/*#__PURE__*/_jsx(Backdrop,{open:true,children:/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"})})]});}function mapStateToProps(state){return{mainUser:state.userReducer.user,primary:state.userThemeReducer.primary,posts:state.visitorPostsReducer.posts};}export default connect(mapStateToProps)(GeoUser);","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/GeoUser.js"],"names":["React","useState","useEffect","useLayoutEffect","useRef","useHistory","useParams","Grid","Avatar","Typography","Button","Tabs","Tab","Dialog","DialogContent","AppBar","Toolbar","connect","axios","_","swal","makeStyles","Hidden","Icon","mdiCheckBold","mdiPencil","mdiClose","mdiCamera","mdiVideo","mdiTwitter","mdiInstagram","mdiYoutube","Paper","ListItem","ListItemText","ListItemIcon","Divider","Link","Backdrop","CircularProgress","TabPanel","props","children","value","index","other","marginTop","textAlign","a11yProps","id","GeoUser","geoUser","setGeoUser","params","history","mainUser","method","url","uniqueUserId","then","response","data","dispatch","type","payload","posts","profileTheme","catch","err","console","log","message","push","blockList","includes","goBack","username","mapStateToProps","state","userReducer","user","primary","userThemeReducer","visitorPostsReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef}  from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport * as _ from 'underscore';\r\nimport swal from 'sweetalert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Icon from '@mdi/react';\r\nimport { mdiCheckBold, mdiPencil, mdiClose, mdiCamera, mdiVideo, mdiTwitter, mdiInstagram, mdiYoutube } from '@mdi/js';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Link from '@material-ui/core/Link';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction TabPanel(props) {\r\n    //This component will serve as the panel for each individual tab.\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div \r\n            role='tabpanel'\r\n            hidden={index !== value} \r\n            id={`tabpanel-${index}`}\r\n            aria-label={`tab-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n            style={{\r\n                marginTop: 100,\r\n            }}\r\n        >\r\n            {value === index &&\r\n                <Grid \r\n                    item \r\n                    xs\r\n                    style={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    {children}\r\n                </Grid>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    value: PropTypes.any.isRequired,\r\n    index: PropTypes.any.isRequired,\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `tab-${index}`,\r\n        'aria-controls': `tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction GeoUser(props) {\r\n    const [geoUser, setGeoUser] = useState(null);\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(props.mainUser === null) {\r\n            //Call the API to get a public profile view for a user who is not logged in.\r\n            return axios({\r\n                method: 'GET',\r\n                url: `https://www.geocities.cc/api/get/public/geo/user/${params.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.geoUser) {\r\n                    //If we were able to get a user, set post and theme globally, and the local geoUser state.\r\n                    props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.geoUser.profileTheme});\r\n                    setGeoUser(response.data.geoUser); //Set the local geoUser state variable\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find that user! Their profile might not exist.',\r\n                        'error',\r\n                    );\r\n\r\n                    \r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error finding that user! Please try again.',\r\n                    'error',\r\n                );\r\n            });\r\n        }\r\n        else if(props.mainUser !== null) {\r\n            return axios({\r\n                method: 'GET',\r\n                url: `https://www.geocities.cc/api/get/geo/user/${params.uniqueUserId}/${props.mainUser.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.geoUser && response.data.mainUser) {\r\n                    if(response.data.geoUser.uniqueUserId === props.mainUser.uniqueUserId) {\r\n                        history.push('/profile');\r\n                    }\r\n                    else {\r\n                        if(response.data.geoUser.blockList.includes(response.data.mainUser.uniqueUserId)) {\r\n                            swal(\r\n                                'Uh Oh!',\r\n                                'This user has blocked you!',\r\n                                'error',\r\n                            );\r\n                            history.goBack(1);\r\n                        }\r\n                        else {\r\n                            props.dispatch({type: 'user/updateUser', payload: response.data.mainUser});\r\n                            props.dispatch({type: 'ThemeChange', payload: response.data.geoUser.profileTheme});\r\n                            props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\r\n                            setGeoUser(response.data.geoUser);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'Could not find that GeoCities user!',\r\n                        'error',\r\n                    );\r\n                    history.goBack(1);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error getting that users profile! Please try again.',\r\n                    'error',\r\n                );\r\n                history.goBack(1);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {geoUser !== null &&\r\n                <p>\r\n                    {geoUser.username}\r\n                </p>\r\n\r\n            }\r\n            {geoUser === null &&\r\n                <Backdrop \r\n                    open={true} \r\n                >\r\n                    <CircularProgress \r\n                        color='primary' \r\n                    />\r\n                </Backdrop>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n        posts: state.visitorPostsReducer.posts,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GeoUser);"]},"metadata":{},"sourceType":"module"}