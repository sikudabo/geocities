{"ast":null,"code":"const initialState = {\n  value: 0\n};\n\nfunction counterReducer(state = initialState, action) {\n  if (action.type === 'counter/increment') {\n    return {\n      state,\n      value: state.value + 1\n    };\n  } else {\n    return state;\n  }\n}\n\nexport default counterReducer;","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/reducers/counterReducer.js"],"names":["initialState","value","counterReducer","state","action","type"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,SAASC,cAAT,CAAwBC,KAAK,GAAGH,YAAhC,EAA8CI,MAA9C,EAAsD;AAClD,MAAGA,MAAM,CAACC,IAAP,KAAgB,mBAAnB,EAAwC;AACpC,WAAO;AACHF,MAAAA,KADG;AAEHF,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFlB,KAAP;AAIH,GALD,MAMK;AACD,WAAOE,KAAP;AACH;AACJ;;AAED,eAAeD,cAAf","sourcesContent":["const initialState = {\r\n    value: 0,\r\n};\r\n\r\nfunction counterReducer(state = initialState, action) {\r\n    if(action.type === 'counter/increment') {\r\n        return {\r\n            state,\r\n            value: state.value + 1,\r\n        };\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}