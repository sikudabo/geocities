{"ast":null,"code":"import _objectSpread from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import Icon from'@mdi/react';import{mdiAccount}from'@mdi/js';import TextField from'@material-ui/core/TextField';import InputAdornment from'@material-ui/core/InputAdornment';import Card from'@material-ui/core/Card';import CardContent from'@material-ui/core/CardContent';import Autocomplete,{createFilterOptions}from'@material-ui/lab/Autocomplete';import{makeStyles}from'@material-ui/core/styles';import{connect}from'react-redux';import{useHistory}from'react-router-dom';import ListItem from'@material-ui/core/ListItem';import ListItemAvatar from'@material-ui/core/ListItemAvatar';import Avatar from'@material-ui/core/Avatar';import ListItemText from'@material-ui/core/ListItemText';import axios from'axios';import swal from'sweetalert';var userFilterOptions=createFilterOptions({matchFrom:'any',stringify:function stringify(option){return option.firstName+' '+option.lastName+' '+option.username;}});var communityFilterOptions=createFilterOptions({matchFrom:'any',stringify:function stringify(option){return option.name+' '+option.title;}});var useStyles=makeStyles(function(){return{root:{marginTop:100},card:{maxWidth:450,margin:'auto'}};});function GeoCitiesSearch(props){var classes=useStyles();var history=useHistory();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),searchUser=_useState2[0],setSearchUser=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),searchCommunity=_useState4[0],setSearchCommunity=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),users=_useState6[0],setUsers=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),communities=_useState8[0],setCommunities=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),val=_useState10[0],setVal=_useState10[1];var myUsers=['Simeon'];useEffect(function(){//If the user is not logged in, return to the log in/sign up page. \nif(props.mainUser===null){history.push('/');}else{return axios({method:'GET',url:\"http://192.168.0.9:3001/api/fetch/users/\".concat(props.mainUser.uniqueUserId)}).then(function(response){if(response.data.users.length>0){setUsers(response.data.users);setCommunities(response.data.communities);//Update the profile theme once the users return.\nprops.dispatch({type:'ThemeChange',payload:props.mainUser.profileTheme});}else{swal('Uh Oh!','We could not find any users to search.','error');}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error getting the data to search from the server! Please try again.','error');history.goBack(1);});}},[]);return/*#__PURE__*/_jsx(Grid,{className:classes.root,container:true,children:/*#__PURE__*/_jsx(Card,{className:classes.card,children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",style:{marginBottom:20},children:\"Search for users or communities\"}),users.length>0&&/*#__PURE__*/_jsx(Autocomplete,{value:searchUser,filterOptions:userFilterOptions,onChange:function onChange(e,newVal){return setSearchUser(newVal);},options:users,getOptionLabel:function getOptionLabel(option){return option.firstName+' '+option.lastName;},renderOption:function renderOption(option){return/*#__PURE__*/_jsxs(ListItem,{alignItems:\"flex-start\",style:{cursor:'pointer'},onClick:function onClick(){return history.push(\"/geouser/\".concat(option.uniqueUserId));},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.9:3001/api/get-photo/\".concat(option.avatar),alt:\"\".concat(option.username),title:\"\".concat(option.username)})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",children:option.username}),secondary:/*#__PURE__*/_jsxs(Typography,{component:\"small\",color:\"textSecondary\",children:[option.firstName,\" \",option.lastName]})})]});},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{color:\"primary\",variant:\"outlined\",label:\"Search users\",placeholder:\"Search users\",helperText:\"Search for a GeoCities user\",InputLabelProps:{shrink:true},fullWidth:true,required:true}));}}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:20}}),communities.length>0&&/*#__PURE__*/_jsx(Autocomplete,{value:searchCommunity,onChange:function onChange(e,newVal){return setSearchCommunity(newVal);},options:communities,getOptionSelected:function getOptionSelected(option,value){return option.name===value||option.title===value||option.topics.includes(value);},getOptionLabel:function getOptionLabel(option){return option.name;},renderOption:function renderOption(option){return/*#__PURE__*/_jsxs(ListItem,{alignItems:\"flex-start\",style:{cursor:'pointer'},onClick:function onClick(e){return history.push(\"/community/\".concat(option.name));},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.9:3001/api/get-photo/\".concat(option.avatar),alt:\"\".concat(option.name,\" avatar\"),title:\"\".concat(option.name,\" avatar\")})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,zeroMinWidth:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",noWrap:true,children:option.name})}),secondary:/*#__PURE__*/_jsx(Typography,{component:\"small\",color:\"textSecondary\",children:option.title})})]});},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{color:\"primary\",variant:\"outlined\",label:\"Search communities\",placeholder:\"Search communities\",helperText:\"Search for a GeoCities community\",InputLabelProps:{shrink:true},fullWidth:true,required:true}));}})]})})});}function mapStateToProps(state){return{mainUser:state.userReducer.user,theme:state.userThemeReducer.primary};}export default connect(mapStateToProps)(GeoCitiesSearch);","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/GeoCitiesSearch.js"],"names":["React","useState","useEffect","Grid","Typography","Icon","mdiAccount","TextField","InputAdornment","Card","CardContent","Autocomplete","createFilterOptions","makeStyles","connect","useHistory","ListItem","ListItemAvatar","Avatar","ListItemText","axios","swal","userFilterOptions","matchFrom","stringify","option","firstName","lastName","username","communityFilterOptions","name","title","useStyles","root","marginTop","card","maxWidth","margin","GeoCitiesSearch","props","classes","history","searchUser","setSearchUser","searchCommunity","setSearchCommunity","users","setUsers","communities","setCommunities","val","setVal","myUsers","mainUser","push","method","url","uniqueUserId","then","response","data","length","dispatch","type","payload","profileTheme","catch","err","console","log","message","goBack","marginBottom","e","newVal","cursor","avatar","params","shrink","value","topics","includes","mapStateToProps","state","userReducer","user","theme","userThemeReducer","primary"],"mappings":"6UAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,OAASC,UAAT,KAA2B,SAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,YAAP,EAAuBC,mBAAvB,KAAkD,+BAAlD,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CAEA,GAAMC,CAAAA,iBAAiB,CAAGV,mBAAmB,CAAC,CAC1CW,SAAS,CAAE,KAD+B,CAE1CC,SAAS,CAAE,mBAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,SAAP,CAAmB,GAAnB,CAAyBD,MAAM,CAACE,QAAhC,CAA2C,GAA3C,CAAiDF,MAAM,CAACG,QAA5D,EAFyB,CAAD,CAA7C,CAKA,GAAMC,CAAAA,sBAAsB,CAAGjB,mBAAmB,CAAC,CAC/CW,SAAS,CAAE,KADoC,CAE/CC,SAAS,CAAE,mBAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACK,IAAP,CAAc,GAAd,CAAoBL,MAAM,CAACM,KAA/B,EAF8B,CAAD,CAAlD,CAKA,GAAMC,CAAAA,SAAS,CAAGnB,UAAU,CAAC,iBAAO,CAChCoB,IAAI,CAAE,CACFC,SAAS,CAAE,GADT,CAD0B,CAIhCC,IAAI,CAAE,CACFC,QAAQ,CAAE,GADR,CAEFC,MAAM,CAAE,MAFN,CAJ0B,CAAP,EAAD,CAA5B,CAUA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CACA,GAAMS,CAAAA,OAAO,CAAG1B,UAAU,EAA1B,CAF4B,cAGQd,QAAQ,CAAC,IAAD,CAHhB,wCAGrByC,UAHqB,eAGTC,aAHS,8BAIkB1C,QAAQ,CAAC,IAAD,CAJ1B,yCAIrB2C,eAJqB,eAIJC,kBAJI,8BAKF5C,QAAQ,CAAC,EAAD,CALN,yCAKrB6C,KALqB,eAKdC,QALc,8BAMU9C,QAAQ,CAAC,EAAD,CANlB,yCAMrB+C,WANqB,eAMRC,cANQ,8BAONhD,QAAQ,CAAC,EAAD,CAPF,0CAOrBiD,GAPqB,gBAOhBC,MAPgB,gBAQ5B,GAAMC,CAAAA,OAAO,CAAG,CACZ,QADY,CAAhB,CAIAlD,SAAS,CAAC,UAAM,CACZ;AACA,GAAGqC,KAAK,CAACc,QAAN,GAAmB,IAAtB,CAA4B,CACxBZ,OAAO,CAACa,IAAR,CAAa,GAAb,EACH,CAFD,IAGK,CACD,MAAOlC,CAAAA,KAAK,CAAC,CACTmC,MAAM,CAAE,KADC,CAETC,GAAG,mDAA6CjB,KAAK,CAACc,QAAN,CAAeI,YAA5D,CAFM,CAAD,CAAL,CAGJC,IAHI,CAGC,SAAAC,QAAQ,CAAI,CAChB,GAAGA,QAAQ,CAACC,IAAT,CAAcd,KAAd,CAAoBe,MAApB,CAA6B,CAAhC,CAAmC,CAC/Bd,QAAQ,CAACY,QAAQ,CAACC,IAAT,CAAcd,KAAf,CAAR,CACAG,cAAc,CAACU,QAAQ,CAACC,IAAT,CAAcZ,WAAf,CAAd,CACA;AACAT,KAAK,CAACuB,QAAN,CAAe,CAACC,IAAI,CAAE,aAAP,CAAsBC,OAAO,CAAEzB,KAAK,CAACc,QAAN,CAAeY,YAA9C,CAAf,EACH,CALD,IAMK,CACD5C,IAAI,CACA,QADA,CAEA,wCAFA,CAGA,OAHA,CAAJ,CAKH,CACJ,CAjBM,EAiBJ6C,KAjBI,CAiBE,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,EACAjD,IAAI,CACA,QADA,CAEA,kFAFA,CAGA,OAHA,CAAJ,CAKAoB,OAAO,CAAC8B,MAAR,CAAe,CAAf,EACH,CAzBM,CAAP,CA0BH,CACJ,CAjCQ,CAiCN,EAjCM,CAAT,CAmCA,mBACI,KAAC,IAAD,EACI,SAAS,CAAE/B,OAAO,CAACP,IADvB,CAEI,SAAS,KAFb,uBAII,KAAC,IAAD,EACI,SAAS,CAAEO,OAAO,CAACL,IADvB,uBAGI,MAAC,WAAD,yBACI,KAAC,UAAD,EACI,OAAO,CAAC,IADZ,CAEI,SAAS,CAAC,IAFd,CAGI,KAAK,CAAC,QAHV,CAII,KAAK,CAAE,CACHqC,YAAY,CAAE,EADX,CAJX,6CADJ,CAWK1B,KAAK,CAACe,MAAN,CAAe,CAAf,eACG,KAAC,YAAD,EACI,KAAK,CAAEnB,UADX,CAEI,aAAa,CAAEpB,iBAFnB,CAGI,QAAQ,CAAE,kBAACmD,CAAD,CAAIC,MAAJ,QAAe/B,CAAAA,aAAa,CAAC+B,MAAD,CAA5B,EAHd,CAII,OAAO,CAAE5B,KAJb,CAKI,cAAc,CAAE,wBAAArB,MAAM,QAAIA,CAAAA,MAAM,CAACC,SAAP,CAAmB,GAAnB,CAAyBD,MAAM,CAACE,QAApC,EAL1B,CAMI,YAAY,CAAE,sBAAAF,MAAM,qBAChB,MAAC,QAAD,EACI,UAAU,CAAC,YADf,CAEI,KAAK,CAAE,CACHkD,MAAM,CAAE,SADL,CAFX,CAKI,OAAO,CAAE,yBAAMlC,CAAAA,OAAO,CAACa,IAAR,oBAAyB7B,MAAM,CAACgC,YAAhC,EAAN,EALb,wBAOI,KAAC,cAAD,wBACI,KAAC,MAAD,EACI,GAAG,iDAA2ChC,MAAM,CAACmD,MAAlD,CADP,CAEI,GAAG,WAAKnD,MAAM,CAACG,QAAZ,CAFP,CAGI,KAAK,WAAKH,MAAM,CAACG,QAAZ,CAHT,EADJ,EAPJ,cAcI,KAAC,YAAD,EACI,OAAO,cACH,KAAC,UAAD,EACI,OAAO,CAAC,IADZ,CAEI,SAAS,CAAC,IAFd,UAIKH,MAAM,CAACG,QAJZ,EAFR,CASI,SAAS,cACL,MAAC,UAAD,EACI,SAAS,CAAC,OADd,CAEI,KAAK,CAAC,eAFV,WAIKH,MAAM,CAACC,SAJZ,KAIwBD,MAAM,CAACE,QAJ/B,GAVR,EAdJ,GADgB,EANxB,CAyCI,WAAW,CAAE,qBAAAkD,MAAM,qBACf,KAAC,SAAD,gCACQA,MADR,MAEI,KAAK,CAAC,SAFV,CAGI,OAAO,CAAC,UAHZ,CAII,KAAK,CAAC,cAJV,CAKI,WAAW,CAAC,cALhB,CAMI,UAAU,CAAC,6BANf,CAOI,eAAe,CAAE,CACbC,MAAM,CAAE,IADK,CAPrB,CAUI,SAAS,KAVb,CAWI,QAAQ,KAXZ,GADe,EAzCvB,EAZR,cAsEI,YACI,KAAK,CAAE,CACH5C,SAAS,CAAE,EADR,CADX,EAtEJ,CA2EKc,WAAW,CAACa,MAAZ,CAAqB,CAArB,eACG,KAAC,YAAD,EACI,KAAK,CAAEjB,eADX,CAEI,QAAQ,CAAE,kBAAC6B,CAAD,CAAIC,MAAJ,QAAe7B,CAAAA,kBAAkB,CAAC6B,MAAD,CAAjC,EAFd,CAGI,OAAO,CAAE1B,WAHb,CAII,iBAAiB,CAAE,2BAACvB,MAAD,CAASsD,KAAT,QAAmBtD,CAAAA,MAAM,CAACK,IAAP,GAAgBiD,KAAhB,EAAyBtD,MAAM,CAACM,KAAP,GAAiBgD,KAA1C,EAAmDtD,MAAM,CAACuD,MAAP,CAAcC,QAAd,CAAuBF,KAAvB,CAAtE,EAJvB,CAKI,cAAc,CAAE,wBAAAtD,MAAM,QAAIA,CAAAA,MAAM,CAACK,IAAX,EAL1B,CAMI,YAAY,CAAE,sBAAAL,MAAM,qBAChB,MAAC,QAAD,EACI,UAAU,CAAC,YADf,CAEI,KAAK,CAAE,CACHkD,MAAM,CAAE,SADL,CAFX,CAKI,OAAO,CAAE,iBAAAF,CAAC,QAAIhC,CAAAA,OAAO,CAACa,IAAR,sBAA2B7B,MAAM,CAACK,IAAlC,EAAJ,EALd,wBAOI,KAAC,cAAD,wBACI,KAAC,MAAD,EACI,GAAG,iDAA2CL,MAAM,CAACmD,MAAlD,CADP,CAEI,GAAG,WAAKnD,MAAM,CAACK,IAAZ,WAFP,CAGI,KAAK,WAAKL,MAAM,CAACK,IAAZ,WAHT,EADJ,EAPJ,cAcI,KAAC,YAAD,EACI,OAAO,cACH,KAAC,IAAD,EACI,IAAI,KADR,CAEI,EAAE,CAAE,EAFR,CAGI,YAAY,KAHhB,uBAKI,KAAC,UAAD,EACI,OAAO,CAAC,IADZ,CAEI,SAAS,CAAC,IAFd,CAGI,MAAM,KAHV,UAKKL,MAAM,CAACK,IALZ,EALJ,EAFR,CAgBI,SAAS,cACL,KAAC,UAAD,EACQ,SAAS,CAAC,OADlB,CAEQ,KAAK,CAAC,eAFd,UAISL,MAAM,CAACM,KAJhB,EAjBR,EAdJ,GADgB,EANxB,CAgDI,WAAW,CAAE,qBAAA8C,MAAM,qBACf,KAAC,SAAD,gCACQA,MADR,MAEI,KAAK,CAAC,SAFV,CAGI,OAAO,CAAC,UAHZ,CAII,KAAK,CAAC,oBAJV,CAKI,WAAW,CAAC,oBALhB,CAMI,UAAU,CAAC,kCANf,CAOI,eAAe,CAAE,CACbC,MAAM,CAAE,IADK,CAPrB,CAUI,SAAS,KAVb,CAWI,QAAQ,KAXZ,GADe,EAhDvB,EA5ER,GAHJ,EAJJ,EADJ,CAyJH,CAED,QAASI,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,MAAO,CACH9B,QAAQ,CAAE8B,KAAK,CAACC,WAAN,CAAkBC,IADzB,CAEHC,KAAK,CAAEH,KAAK,CAACI,gBAAN,CAAuBC,OAF3B,CAAP,CAIH,CAED,cAAe1E,CAAAA,OAAO,CAACoE,eAAD,CAAP,CAAyB5C,eAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@mdi/react';\nimport { mdiAccount } from '@mdi/js';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nconst userFilterOptions = createFilterOptions({\n    matchFrom: 'any',\n    stringify: option => option.firstName + ' ' + option.lastName + ' ' + option.username,\n});\n\nconst communityFilterOptions = createFilterOptions({\n    matchFrom: 'any',\n    stringify: option => option.name + ' ' + option.title,\n});\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        marginTop: 100,\n    },\n    card: {\n        maxWidth: 450,\n        margin: 'auto',\n    }\n}));\n\nfunction GeoCitiesSearch(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const [searchUser, setSearchUser] = useState(null);\n    const [searchCommunity, setSearchCommunity] = useState(null);\n    const [users, setUsers] = useState([]);\n    const [communities, setCommunities] = useState([]);\n    const [val, setVal] = useState('');\n    const myUsers = [\n        'Simeon',\n    ]\n\n    useEffect(() => {\n        //If the user is not logged in, return to the log in/sign up page. \n        if(props.mainUser === null) {\n            history.push('/');\n        }\n        else {\n            return axios({\n                method: 'GET',\n                url: `http://192.168.0.9:3001/api/fetch/users/${props.mainUser.uniqueUserId}`,\n            }).then(response => {\n                if(response.data.users.length > 0) {\n                    setUsers(response.data.users);\n                    setCommunities(response.data.communities);\n                    //Update the profile theme once the users return.\n                    props.dispatch({type: 'ThemeChange', payload: props.mainUser.profileTheme});\n                }\n                else {\n                    swal(\n                        'Uh Oh!',\n                        'We could not find any users to search.',\n                        'error',\n                    );\n                }\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error getting the data to search from the server! Please try again.',\n                    'error',\n                );\n                history.goBack(1);\n            });\n        }\n    }, []);\n\n    return (\n        <Grid \n            className={classes.root} \n            container \n        >\n            <Card \n                className={classes.card} \n            >\n                <CardContent>\n                    <Typography \n                        variant='h6' \n                        component='h6' \n                        align='center'\n                        style={{\n                            marginBottom: 20,\n                        }}\n                    >\n                        Search for users or communities \n                    </Typography>\n                    {users.length > 0 &&\n                        <Autocomplete \n                            value={searchUser}\n                            filterOptions={userFilterOptions}\n                            onChange={(e, newVal) => setSearchUser(newVal)}\n                            options={users}\n                            getOptionLabel={option => option.firstName + ' ' + option.lastName}\n                            renderOption={option => (\n                                <ListItem \n                                    alignItems='flex-start' \n                                    style={{\n                                        cursor: 'pointer',\n                                    }}\n                                    onClick={() => history.push(`/geouser/${option.uniqueUserId}`)}\n                                >\n                                    <ListItemAvatar>\n                                        <Avatar \n                                            src={`http://192.168.0.9:3001/api/get-photo/${option.avatar}`}\n                                            alt={`${option.username}`}\n                                            title={`${option.username}`} \n                                        />\n                                    </ListItemAvatar>\n                                    <ListItemText \n                                        primary={\n                                            <Typography \n                                                variant='h6' \n                                                component='h6' \n                                            >\n                                                {option.username}\n                                            </Typography>\n                                        }\n                                        secondary={\n                                            <Typography \n                                                component='small'\n                                                color='textSecondary' \n                                            >\n                                                {option.firstName} {option.lastName}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            renderInput={params => (\n                                <TextField \n                                    {...params} \n                                    color='primary'\n                                    variant='outlined' \n                                    label='Search users' \n                                    placeholder='Search users'\n                                    helperText='Search for a GeoCities user'\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    fullWidth \n                                    required \n                                />\n                            )}\n                        />\n                    }\n                    <div \n                        style={{\n                            marginTop: 20,\n                        }}\n                    />\n                    {communities.length > 0 &&\n                        <Autocomplete \n                            value={searchCommunity}\n                            onChange={(e, newVal) => setSearchCommunity(newVal)}\n                            options={communities}\n                            getOptionSelected={(option, value) => option.name === value || option.title === value || option.topics.includes(value)}\n                            getOptionLabel={option => option.name}\n                            renderOption={option => (\n                                <ListItem \n                                    alignItems='flex-start' \n                                    style={{\n                                        cursor: 'pointer',\n                                    }}\n                                    onClick={e => history.push(`/community/${option.name}`)}\n                                >\n                                    <ListItemAvatar>\n                                        <Avatar \n                                            src={`http://192.168.0.9:3001/api/get-photo/${option.avatar}`}\n                                            alt={`${option.name} avatar`}\n                                            title={`${option.name} avatar`} \n                                        />\n                                    </ListItemAvatar>\n                                    <ListItemText \n                                        primary={\n                                            <Grid \n                                                item \n                                                xs={12} \n                                                zeroMinWidth \n                                            >\n                                                <Typography \n                                                    variant='h6' \n                                                    component='h6' \n                                                    noWrap \n                                                >\n                                                    {option.name}\n                                                </Typography>\n                                            </Grid>\n                                        }\n                                        secondary={\n                                            <Typography \n                                                    component='small'\n                                                    color='textSecondary'\n                                                >\n                                                    {option.title}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            renderInput={params => (\n                                <TextField \n                                    {...params} \n                                    color='primary'\n                                    variant='outlined' \n                                    label='Search communities' \n                                    placeholder='Search communities'\n                                    helperText='Search for a GeoCities community'\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    fullWidth \n                                    required \n                                />\n                            )}\n                        />\n                    }\n                </CardContent>\n            </Card>\n        </Grid>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        mainUser: state.userReducer.user,\n        theme: state.userThemeReducer.primary,\n    };\n}\n\nexport default connect(mapStateToProps)(GeoCitiesSearch);\n\n"]},"metadata":{},"sourceType":"module"}