{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\NotificationsComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiCheckBold, mdiClose } from '@mdi/js';\nimport { connect } from 'react-redux';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 100\n  },\n  item: {\n    margin: 'auto'\n  },\n  list: {\n    margin: 'auto',\n    maxWidth: 700\n  }\n}));\n\nfunction NotificationsComponent(props) {\n  _s();\n\n  const [deletingNotification, setDeletingNotification] = useState(false); //Backdrop when we want to delete notification.\n\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {\n    if (props.mainUser === null) {\n      history.push('/');\n    } else {\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/grab/user/${props.mainUser.uniqueUserId}`\n      }).then(response => {\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        props.dispatch({\n          type: 'ThemeChange',\n          payload: response.data.user.profileTheme\n        });\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error gathering your notifications! Please try again', 'error');\n        history.goBack(1);\n      });\n    }\n  }, []);\n\n  function utcToDateString(utc) {\n    let date = new Date(utc);\n    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n    let month = months[date.getMonth()];\n    let day = date.getDate();\n    let year = date.getFullYear();\n    return month + ' ' + day + ', ' + year;\n  }\n\n  function deleteNotification(uniqueNotificationId, link, path, hash) {\n    setDeletingNotification(true);\n    let data = JSON.stringify({\n      uniqueUserId: props.mainUser.uniqueUserId,\n      uniqueNotificationId: uniqueNotificationId,\n      link: link,\n      hash: hash,\n      path: path\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/delete/notification',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setDeletingNotification(false);\n      props.dispatch({\n        type: 'user/updateUser',\n        payload: response.data.user\n      });\n      swal('Great!', 'Notification successfully deleted!', 'success');\n\n      if (response.data.link !== '') {\n        history.push({\n          pathname: response.data.path,\n          hash: response.data.hash\n        });\n      }\n    }).catch(err => {\n      setDeletingNotification(false);\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error deleting that notification!', 'error');\n    });\n  }\n\n  function acceptRejectFollow(followerUsername, followerUniqueUserId, uniqueNotificationId, accept) {\n    setDeletingNotification(true);\n    let data = JSON.stringify({\n      followerUsername: followerUsername,\n      followerUniqueUserId: followerUniqueUserId,\n      uniqueNotificationId: uniqueNotificationId,\n      accept: accept,\n      username: props.mainUser.username,\n      uniqueUserId: props.mainUser.uniqueUserId\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/follow/request/choice',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      props.dispatch({\n        type: 'user/updateUser',\n        payload: response.data.user\n      });\n\n      if (response.data.accept === true) {\n        swal('Great!', 'Successfully accepted that follow request!', 'success');\n        setDeletingNotification(false);\n      } else {\n        swal('Great!', 'Successfully rejected that follow request!', 'success');\n        setDeletingNotification(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error accepting or rejecting that follow request!', 'error');\n      setDeletingNotification(false);\n    });\n  }\n\n  function acceptRejectJoinRequest(username, uniqueUserId, community, uniqueNotificationId, acceptReject) {\n    //This function will handle acception or rejecting a community join request. \n    setDeletingNotification(true);\n    let data = JSON.stringify({\n      uniqueUserId: uniqueUserId,\n      username: username,\n      name: community,\n      uniqueNotificationId: uniqueNotificationId,\n      acceptReject: acceptReject,\n      moderatorUniqueUserId: props.mainUser.uniqueUserId,\n      moderatorUsername: props.mainUser.username\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/accept/reject/community/join',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data.acceptReject === true) {\n        swal('Great!', 'Successfully accepted that community join request!', 'success');\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        setDeletingNotification(false);\n      } else if (response.data.acceptReject === false) {\n        swal('Great!', 'Successfully denied that community join request!', 'success');\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        setDeletingNotification(false);\n      } else {\n        swal('Uh oh!', 'There was an accepting or rejection that community join request!', 'error');\n        setDeletingNotification(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error accepting or rejection that community join request!', 'error');\n      setDeletingNotification(false);\n    });\n  }\n\n  if (props.mainUser !== null) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n        open: deletingNotification,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), props.mainUser.notifications.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: classes.list,\n          children: props.mainUser.notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [notification.type === 'post comment' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 41\n            }, this), notification.type === 'post like' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link, notification.path, notification.hash),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 41\n            }, this), notification.type === 'join accepted' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.9:3001/api/get/avatar/by/community/name/${notification.community}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 41\n            }, this), notification.type === 'new follower' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 41\n            }, this), notification.type === 'comment like' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 41\n            }, this), notification.type === 'follower request' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              style: {\n                marginBottom: 20\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`,\n                    style: {\n                      cursor: 'pointer'\n                    },\n                    onClick: e => history.push(`/geouser/${notification.uniqueSenderId}`)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  color: 'rgb(0, 128, 0)'\n                },\n                \"aria-label\": \"Accept follower request button\",\n                disabled: deletingNotification,\n                onClick: e => acceptRejectFollow(notification.sender, notification.uniqueSenderId, notification.uniqueNotificationId, true),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiCheckBold,\n                  size: 1,\n                  title: \"Acccept follow request\",\n                  \"aria-label\": \"Follow request accept icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  color: 'rgb(255, 0, 0)'\n                },\n                \"aria-label\": \"Deny request button\",\n                disabled: deletingNotification,\n                onClick: e => acceptRejectFollow(notification.sender, notification.uniqueSenderId, notification.uniqueNotificationId, false),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiClose,\n                  size: 1,\n                  title: \"Deny request icon\",\n                  \"aria-label\": \"Deny request icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 41\n            }, this), notification.type === 'community join request' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              style: {\n                marginBottom: 20\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`,\n                    style: {\n                      cursor: 'pointer'\n                    },\n                    onClick: e => history.push(`/geouser/${notification.uniqueSenderId}`)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  color: 'rgb(0, 128, 0)'\n                },\n                \"aria-label\": \"Accept communityJoin request button\",\n                disabled: deletingNotification,\n                onClick: e => acceptRejectJoinRequest(notification.sender, notification.uniqueSenderId, notification.community, notification.uniqueNotificationId, true),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiCheckBold,\n                  size: 1,\n                  title: \"Acccept follow request\",\n                  \"aria-label\": \"Follow request accept icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  color: 'rgb(255, 0, 0)'\n                },\n                \"aria-label\": \"Deny request button\",\n                disabled: deletingNotification,\n                onClick: e => acceptRejectJoinRequest(notification.sender, notification.uniqueSenderId, notification.community, notification.uniqueNotificationId, false),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiClose,\n                  size: 1,\n                  title: \"Deny request icon\",\n                  \"aria-label\": \"Deny request icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 41\n            }, this), notification.type === 'accept follow request' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 616,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 625,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 41\n            }, this)]\n          }, index.toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this), props.mainUser.notifications.length < 1 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          align: \"center\",\n          children: \"No Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: true,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(NotificationsComponent, \"TaioUrxSUjibbY1Gjz3X655ZYjg=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = NotificationsComponent;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user,\n    primary: state.userThemeReducer.primary\n  };\n}\n\nexport default connect(mapStateToProps)(NotificationsComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationsComponent\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/NotificationsComponent.js"],"names":["React","useState","useEffect","Grid","List","ListItem","ListItemAvatar","ListItemText","Typography","IconButton","Icon","mdiCheckBold","mdiClose","connect","Backdrop","CircularProgress","useHistory","makeStyles","swal","axios","Avatar","Paper","useStyles","root","marginTop","item","margin","list","maxWidth","NotificationsComponent","props","deletingNotification","setDeletingNotification","history","classes","mainUser","push","method","url","uniqueUserId","then","response","dispatch","type","payload","data","user","profileTheme","catch","err","console","log","message","goBack","utcToDateString","utc","date","Date","months","month","getMonth","day","getDate","year","getFullYear","deleteNotification","uniqueNotificationId","link","path","hash","JSON","stringify","headers","pathname","acceptRejectFollow","followerUsername","followerUniqueUserId","accept","username","acceptRejectJoinRequest","community","acceptReject","name","moderatorUniqueUserId","moderatorUsername","notifications","length","map","notification","index","cursor","marginBottom","e","uniqueSenderId","sender","msg","color","toString","textAlign","mapStateToProps","state","userReducer","primary","userThemeReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@mdi/react';\r\nimport { mdiCheckBold, mdiClose } from '@mdi/js';\r\nimport { connect } from 'react-redux';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        marginTop: 100,\r\n    },\r\n    item: {\r\n        margin: 'auto',\r\n    },\r\n    list: {\r\n        margin: 'auto',\r\n        maxWidth: 700,\r\n    },\r\n}));\r\n\r\nfunction NotificationsComponent(props) {\r\n    const [deletingNotification, setDeletingNotification] = useState(false); //Backdrop when we want to delete notification.\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    \r\n    useEffect(() => {\r\n        if(props.mainUser === null) {\r\n            history.push('/');\r\n        }\r\n        else {\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/grab/user/${props.mainUser.uniqueUserId}`\r\n            }).then(response => {\r\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error gathering your notifications! Please try again',\r\n                    'error',\r\n                );\r\n                history.goBack(1);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function utcToDateString(utc) {\r\n        let date = new Date(utc);\r\n        let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n        let month = months[date.getMonth()];\r\n        let day = date.getDate();\r\n        let year = date.getFullYear();\r\n        return month + ' ' + day + ', ' + year;\r\n    }\r\n\r\n    function deleteNotification(uniqueNotificationId, link, path, hash) {\r\n        setDeletingNotification(true);\r\n        let data = JSON.stringify({\r\n            uniqueUserId: props.mainUser.uniqueUserId,\r\n            uniqueNotificationId: uniqueNotificationId,\r\n            link: link,\r\n            hash: hash,\r\n            path: path,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/delete/notification',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            setDeletingNotification(false);\r\n            props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n            swal(\r\n                'Great!',\r\n                'Notification successfully deleted!',\r\n                'success',\r\n            );\r\n            if(response.data.link !== '') {\r\n                history.push({\r\n                    pathname: response.data.path,\r\n                    hash: response.data.hash,\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            setDeletingNotification(false);\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error deleting that notification!',\r\n                'error',\r\n            );\r\n        });\r\n    }\r\n\r\n    function acceptRejectFollow(followerUsername, followerUniqueUserId, uniqueNotificationId, accept) {\r\n        setDeletingNotification(true);\r\n        let data = JSON.stringify({\r\n            followerUsername: followerUsername,\r\n            followerUniqueUserId: followerUniqueUserId,\r\n            uniqueNotificationId: uniqueNotificationId,\r\n            accept: accept,\r\n            username: props.mainUser.username,\r\n            uniqueUserId: props.mainUser.uniqueUserId,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/follow/request/choice',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n            if(response.data.accept === true) {\r\n                swal(\r\n                    'Great!',\r\n                    'Successfully accepted that follow request!',\r\n                    'success',\r\n                );\r\n                setDeletingNotification(false);\r\n            }\r\n            else {\r\n                swal(\r\n                    'Great!',\r\n                    'Successfully rejected that follow request!',\r\n                    'success',\r\n                );\r\n                setDeletingNotification(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error accepting or rejecting that follow request!',\r\n                'error',\r\n            );\r\n            setDeletingNotification(false);\r\n        });\r\n    }\r\n\r\n    function acceptRejectJoinRequest(username, uniqueUserId, community, uniqueNotificationId, acceptReject) {\r\n        //This function will handle acception or rejecting a community join request. \r\n        setDeletingNotification(true);\r\n        let data = JSON.stringify({\r\n            uniqueUserId: uniqueUserId,\r\n            username: username,\r\n            name: community,\r\n            uniqueNotificationId: uniqueNotificationId,\r\n            acceptReject: acceptReject,\r\n            moderatorUniqueUserId: props.mainUser.uniqueUserId,\r\n            moderatorUsername: props.mainUser.username,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/accept/reject/community/join',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            if(response.data.acceptReject === true) {\r\n                swal(\r\n                    'Great!',\r\n                    'Successfully accepted that community join request!',\r\n                    'success',\r\n                );\r\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                setDeletingNotification(false);\r\n            }\r\n            else if(response.data.acceptReject === false) {\r\n                swal(\r\n                    'Great!',\r\n                    'Successfully denied that community join request!',\r\n                    'success',\r\n                );\r\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                setDeletingNotification(false);\r\n            }\r\n            else {\r\n                swal(\r\n                    'Uh oh!',\r\n                    'There was an accepting or rejection that community join request!',\r\n                    'error',\r\n                );\r\n                setDeletingNotification(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error accepting or rejection that community join request!',\r\n                'error',\r\n            );\r\n\r\n            setDeletingNotification(false);\r\n        });\r\n    }\r\n\r\n    if(props.mainUser !== null) {\r\n        return (\r\n            <Grid \r\n                container \r\n                className={classes.root}\r\n            >\r\n                <Backdrop \r\n                    open={deletingNotification} \r\n                >\r\n                    <CircularProgress \r\n                        color='primary' \r\n                    />\r\n                </Backdrop>\r\n                {props.mainUser.notifications.length > 0 &&\r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                    >\r\n                        <List\r\n                            className={classes.list} \r\n                        >\r\n                            {props.mainUser.notifications.map((notification, index) => (\r\n                                <div \r\n                                    key={index.toString()} \r\n                                >\r\n                                    {notification.type === 'post comment' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                    {notification.type === 'post like' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link, notification.path, notification.hash)}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                    {notification.type === 'join accepted' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/community/name/${notification.community}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                    {notification.type === 'new follower' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                    {notification.type === 'comment like' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                    {notification.type === 'follower request' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                            style={{\r\n                                                marginBottom: 20,\r\n                                            }}\r\n                                        >\r\n                                            <ListItem\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                        style={{\r\n                                                            cursor: 'pointer',\r\n                                                        }}\r\n                                                        onClick={e => history.push(`/geouser/${notification.uniqueSenderId}`)}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            <IconButton \r\n                                                style={{\r\n                                                    color: 'rgb(0, 128, 0)',\r\n                                                }}\r\n                                                aria-label='Accept follower request button'\r\n                                                disabled={deletingNotification}\r\n                                                onClick={e => acceptRejectFollow(notification.sender, notification.uniqueSenderId, notification.uniqueNotificationId, true)}\r\n                                            >\r\n                                                <Icon \r\n                                                    path={mdiCheckBold} \r\n                                                    size={1}\r\n                                                    title=\"Acccept follow request\" \r\n                                                    aria-label='Follow request accept icon' \r\n                                                />\r\n                                            </IconButton>\r\n                                            <IconButton \r\n                                                style={{\r\n                                                    color: 'rgb(255, 0, 0)'\r\n                                                }}\r\n                                                aria-label='Deny request button'\r\n                                                disabled={deletingNotification}\r\n                                                onClick={e => acceptRejectFollow(notification.sender, notification.uniqueSenderId, notification.uniqueNotificationId, false)}\r\n                                            >\r\n                                                <Icon \r\n                                                    path={mdiClose} \r\n                                                    size={1}\r\n                                                    title='Deny request icon'\r\n                                                    aria-label='Deny request icon' \r\n                                                />\r\n                                            </IconButton>\r\n                                        </Paper>  \r\n                                    }\r\n                                    {/* Below is the notification type for a \"community join request\" */}\r\n                                    {notification.type === 'community join request' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                            style={{\r\n                                                marginBottom: 20,\r\n                                            }}\r\n                                        >\r\n                                            <ListItem\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                        style={{\r\n                                                            cursor: 'pointer',\r\n                                                        }}\r\n                                                        onClick={e => history.push(`/geouser/${notification.uniqueSenderId}`)}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            <IconButton \r\n                                                style={{\r\n                                                    color: 'rgb(0, 128, 0)',\r\n                                                }}\r\n                                                aria-label='Accept communityJoin request button'\r\n                                                disabled={deletingNotification}\r\n                                                onClick={e => acceptRejectJoinRequest(notification.sender, notification.uniqueSenderId, notification.community, notification.uniqueNotificationId, true)}\r\n                                            >\r\n                                                <Icon \r\n                                                    path={mdiCheckBold} \r\n                                                    size={1}\r\n                                                    title=\"Acccept follow request\" \r\n                                                    aria-label='Follow request accept icon' \r\n                                                />\r\n                                            </IconButton>\r\n                                            <IconButton \r\n                                                style={{\r\n                                                    color: 'rgb(255, 0, 0)'\r\n                                                }}\r\n                                                aria-label='Deny request button'\r\n                                                disabled={deletingNotification}\r\n                                                onClick={e => acceptRejectJoinRequest(notification.sender, notification.uniqueSenderId, notification.community, notification.uniqueNotificationId, false)}\r\n                                            >\r\n                                                <Icon \r\n                                                    path={mdiClose} \r\n                                                    size={1}\r\n                                                    title='Deny request icon'\r\n                                                    aria-label='Deny request icon' \r\n                                                />\r\n                                            </IconButton>\r\n                                        </Paper> \r\n                                    }\r\n                                    {notification.type === 'accept follow request' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                </div>\r\n                            ))}\r\n                        </List>\r\n                    </Grid>\r\n                }\r\n                {props.mainUser.notifications.length < 1 &&\r\n                   <Grid \r\n                        item\r\n                        xs={12} \r\n                        style={{\r\n                            textAlign: 'center',\r\n                        }}\r\n                    >\r\n                         <Typography \r\n                            variant='h6' \r\n                            component='h6' \r\n                            align='center' \r\n                        >\r\n                            No Notifications\r\n                        </Typography>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Backdrop\r\n                open={true} \r\n            >\r\n                <CircularProgress color='primary' />\r\n            </Backdrop>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(NotificationsComponent);"]},"metadata":{},"sourceType":"module"}