{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simeonikudabo/Downloads/geocities/src/components/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiThumbUp, mdiComment } from '@mdi/js';\nimport * as _ from 'underscore';\nimport Plyr from 'react-plyr';\nconst useStyles = makeStyles(() => ({\n  grid: {\n    marginTop: 100\n  },\n  card: {\n    maxWidth: 600,\n    margin: 'auto'\n  },\n  media: {\n    height: 0,\n    padding: '56.25%'\n  },\n  image: {\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}));\n\nfunction Feed(props) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    if (props.user !== null) {\n      return axios({\n        method: 'GET',\n        url: `https://www.geocities.cc/api/get/user/feed/posts/${props.user.uniqueUserId}`\n      }).then(response => {\n        props.dispatch({\n          type: 'ThemeChange',\n          payload: props.user.profileTheme\n        });\n        setPosts([...response.data.posts]);\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error rectrieving posts for the feed! Please try again.', 'error');\n        history.goBack(1);\n      });\n    } else {\n      return axios({\n        method: 'GET',\n        url: 'https://www.geocities.cc/api/get/nonuser/feed/posts'\n      }).then(response => {\n        props.dispatch({\n          type: 'ThemeChange',\n          payload: 'rgb(0, 20, 60)'\n        });\n        setPosts([...response.data.posts]);\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error retreiving the posts for the feed! Please try again.', 'error');\n        history.goBack(1);\n      });\n    }\n  }, []);\n\n  function timeDifference(date2, dateString) {\n    //This function will return whether or not we display something like \"2 hrs ago\" \"20 min ago\" or the date string for a post\n    let date1 = Date.now();\n    let difference = date1 - date2;\n    let daysDifference = Math.floor(difference / 1000 / 60 / 60 / 24);\n    let hoursDifference = Math.floor(difference / 1000 / 60 / 60);\n    let minutesDifference = Math.floor(difference / 1000 / 60);\n    let secondsDifference = Math.floor(difference / 1000);\n\n    if (daysDifference > 0) {\n      return dateString;\n    } else if (hoursDifference > 0 && hoursDifference < 23) {\n      return `${hoursDifference} hr ago`;\n    } else if (minutesDifference > 0 && minutesDifference < 60) {\n      return `${minutesDifference} min ago`;\n    } else if (minutesDifference === 0) {\n      return `${secondsDifference} secs ago`;\n    } else {\n      return dateString;\n    }\n  }\n\n  if (props.user !== null) {\n    if (posts.length > 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.grid,\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: !_.find(post.blockList, blocked => blocked.uniqueUserId === props.user.uniqueUserId) && /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              className: classes.card,\n              style: {\n                marginBottom: index < posts.length - 1 ? 20 : 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                title: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"h6\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  onClick: e => post.context === 'personal' ? history.push(`geouser/${post.uniqueUserId}`) : history.push(`/community/${post.community}`),\n                  children: post.context === 'personal' ? post.username : post.community\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 49\n                }, this),\n                subheader: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    component: \"span\",\n                    color: \"textSecondary\",\n                    children: timeDifference(post.utcTime, post.dateString)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 53\n                  }, this), post.context === 'community' ? /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    component: \"span\",\n                    color: \"textSecondary\",\n                    style: {\n                      cursor: 'pointer'\n                    },\n                    onClick: e => history.push(`/geouser/${post.uniqueUserId}`),\n                    children: post.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 57\n                  }, this) : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 49\n                }, this),\n                avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: post.context === 'personal' ? `https://www.geocities.cc/api/get/avatar/by/id/${post.uniqueUserId}` : `https://www.geocities.cc/api/get/avatar/by/community/name/${post.community}`,\n                  alt: `${post.username}`,\n                  title: `${post.username}`,\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  onClick: e => post.context === 'personal' ? history.push(`/geouser/${post.uniqueUserId}`) : history.push(`/community/${post.community}`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 41\n              }, this), post.title && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                component: \"h3\",\n                align: \"center\",\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [post.type === 'photo' && /*#__PURE__*/_jsxDEV(CardMedia, {\n                  className: classes.media,\n                  image: `https://www.geocities.cc/api/get-photo/${post.src}`,\n                  title: `Post by ${post.username}`,\n                  alt: \"GeoCities photo post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 49\n                }, this), post.type === 'link' && /*#__PURE__*/_jsxDEV(CardMedia, {\n                  image: post.linkImage,\n                  title: `Post by ${post.username}`,\n                  alt: \"GeoCities link post\",\n                  className: classes.media\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: post.type === 'video' && /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(Plyr, {\n                    playsinline: true,\n                    playsInline: true,\n                    type: \"video\",\n                    sources: [{\n                      src: `https://www.geocities.cc/api/get-video/${post.src}`\n                    }],\n                    fullscreen: {\n                      enable: true,\n                      fallback: true,\n                      iosNative: false\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: post.type === 'text' && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  component: \"p\",\n                  children: post.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: post.caption && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"p\",\n                  children: post.caption\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    path: mdiThumbUp,\n                    size: 1,\n                    title: \"Like button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 49\n                  }, this), post.likes.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    path: mdiComment,\n                    size: 1,\n                    title: \"Comment button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 49\n                  }, this), post.comments.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: post.context === 'community' ? `/community/${post.community}#${post.uniquePostId}` : `/geouser/${post.uniqueUserId}#${post.uniquePostId}`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    children: \"Go to post\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 41\n              }, this)]\n            }, index.toString(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this)\n          }, index.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.grid,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            align: \"center\",\n            children: \"No posts in feed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    if (posts.length > 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.grid,\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            className: classes.card,\n            id: post.uniquePostId,\n            style: {\n              marginBottom: index < posts.length - 1 ? 20 : 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"h6\",\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: e => post.context === 'personal' ? history.push(`geouser/${post.uniqueUserId}`) : history.push(`/community/${post.community}`),\n                children: post.context === 'personal' ? post.username : post.community\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 41\n              }, this),\n              subheader: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  component: \"span\",\n                  color: \"textSecondary\",\n                  children: timeDifference(post.utcTime, post.dateString)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 45\n                }, this), post.context === 'community' ? /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  component: \"span\",\n                  color: \"textSecondary\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  onClick: e => history.push(`/geouser/${post.uniqueUserId}`),\n                  children: post.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 49\n                }, this) : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 41\n              }, this),\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: post.context === 'personal' ? `https://www.geocities.cc/api/get/avatar/by/id/${post.uniqueUserId}` : `https://www.geocities.cc/api/get/avatar/by/community/name/${post.community}`,\n                alt: `${post.username}`,\n                title: `${post.username}`,\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: e => post.context === 'personal' ? history.push(`/geouser/${post.uniqueUserId}`) : history.push(`/community/${post.community}`)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this), post.title && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              component: \"h3\",\n              align: \"center\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [post.type === 'photo' && /*#__PURE__*/_jsxDEV(CardMedia, {\n                className: classes.media,\n                image: `https://www.geocities.cc/api/get-photo/${post.src}`,\n                title: `Post by ${post.username}`,\n                alt: \"GeoCities photo post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 41\n              }, this), post.type === 'link' && /*#__PURE__*/_jsxDEV(CardMedia, {\n                image: post.linkImage,\n                title: `Post by ${post.username}`,\n                alt: \"GeoCities link post\",\n                className: classes.media\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: post.type === 'video' && /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Plyr, {\n                  playsinline: true,\n                  playsInline: true,\n                  type: \"video\",\n                  sources: [{\n                    src: `https://www.geocities.cc/api/get-video/${post.src}`\n                  }],\n                  fullscreen: {\n                    enable: true,\n                    fallback: true,\n                    iosNative: false\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: post.type === 'text' && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                component: \"p\",\n                children: post.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiThumbUp,\n                  size: 1,\n                  title: \"Like button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 41\n                }, this), post.likes.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiComment,\n                  size: 1,\n                  title: \"Comment button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 41\n                }, this), post.comments.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 37\n              }, this), \"Go to post\", /*#__PURE__*/_jsxDEV(Link, {\n                to: post.context === 'community' ? `/community/${post.community}#${post.uniquePostId}` : `/geouser/${post.uniqueUserId}#${post.uniquePostId}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  children: \"Go to post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 33\n            }, this)]\n          }, index.toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.grid,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            align: \"center\",\n            children: \"No posts in feed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\n\n_s(Feed, \"Xq9irOekgAl421jxLbMDu5WuLKM=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Feed;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    primary: state.themeReducer.theme\n  };\n}\n\nexport default connect(mapStateToProps)(Feed);\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/Feed.js"],"names":["React","useState","useEffect","useHistory","HashLink","Link","swal","axios","connect","Grid","Card","CardHeader","CardMedia","CardContent","CardActions","Button","Avatar","Typography","makeStyles","Backdrop","CircularProgress","IconButton","Icon","mdiThumbUp","mdiComment","_","Plyr","useStyles","grid","marginTop","card","maxWidth","margin","media","height","padding","image","maxHeight","Feed","props","classes","history","posts","setPosts","user","method","url","uniqueUserId","then","response","dispatch","type","payload","profileTheme","data","catch","err","console","log","message","goBack","timeDifference","date2","dateString","date1","Date","now","difference","daysDifference","Math","floor","hoursDifference","minutesDifference","secondsDifference","length","map","post","index","find","blockList","blocked","marginBottom","cursor","e","context","push","community","username","utcTime","title","src","linkImage","enable","fallback","iosNative","text","caption","likes","comments","uniquePostId","toString","mapStateToProps","state","userReducer","primary","themeReducer","theme"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiThumbUp, mdiComment } from '@mdi/js';\nimport * as _ from 'underscore';\nimport Plyr from 'react-plyr';\n\nconst useStyles = makeStyles(() => ({\n    grid: {\n        marginTop: 100,\n    },\n    card: {\n        maxWidth: 600,\n        margin: 'auto',\n    },\n    media: {\n        height: 0,\n        padding: '56.25%',\n    },\n    image: {\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n}));\n\nfunction Feed(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        if(props.user !== null) {\n            return axios({\n                method: 'GET', \n                url: `https://www.geocities.cc/api/get/user/feed/posts/${props.user.uniqueUserId}`,\n            }).then(response => {\n                props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\n                setPosts([...response.data.posts]);\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error rectrieving posts for the feed! Please try again.',\n                    'error',\n                );\n                history.goBack(1);\n            });\n        }\n        else {\n            return axios({\n                method: 'GET',\n                url: 'https://www.geocities.cc/api/get/nonuser/feed/posts',\n            }).then(response => {\n                props.dispatch({type: 'ThemeChange', payload: 'rgb(0, 20, 60)'});\n                setPosts([...response.data.posts]);\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error retreiving the posts for the feed! Please try again.',\n                    'error',\n                );\n                history.goBack(1);\n            });\n        }\n    }, []);\n\n    function timeDifference(date2, dateString) {\n        //This function will return whether or not we display something like \"2 hrs ago\" \"20 min ago\" or the date string for a post\n        let date1 = Date.now();\n        let difference = date1 - date2;\n        let daysDifference = Math.floor(difference/1000/60/60/24);\n        let hoursDifference = Math.floor(difference/1000/60/60);\n        let minutesDifference = Math.floor(difference/1000/60);\n        let secondsDifference = Math.floor(difference/1000);\n        if(daysDifference > 0) {\n            return dateString;\n        }\n        else if(hoursDifference > 0 && hoursDifference < 23) {\n            return `${hoursDifference} hr ago`;\n        }\n        else if(minutesDifference > 0 && minutesDifference < 60) {\n            return `${minutesDifference} min ago`;\n        }\n        else if(minutesDifference === 0) {\n            return `${secondsDifference} secs ago`\n        }\n        else {\n            return dateString;\n        }\n    }\n\n    if(props.user !== null) {\n        if(posts.length > 0) {\n            return (\n                <Grid \n                    className={classes.grid} \n                    container\n                >\n                    <Grid \n                        item \n                        xs={12} \n                    >\n                        {posts.map((post, index) => (\n                            <div \n                                key={index.toString()}\n                            >\n                                {!_.find(post.blockList, blocked => blocked.uniqueUserId === props.user.uniqueUserId) &&\n                                    <Card \n                                        variant='outlined' \n                                        className={classes.card}\n                                        key={index.toString()}\n                                        style={{\n                                            marginBottom: index < posts.length - 1 ? 20 : 0,\n                                        }}\n                                    >\n                                        <CardHeader \n                                            title={\n                                                <Typography \n                                                    variant='h6' \n                                                    component='h6' \n                                                    style={{\n                                                        cursor: 'pointer',\n                                                    }}\n                                                    onClick={e => post.context === 'personal' ? history.push(`geouser/${post.uniqueUserId}`) : history.push(`/community/${post.community}`)}\n                                                >\n                                                    {post.context === 'personal' ? post.username : post.community}\n                                                </Typography>\n                                            }\n                                            subheader={\n                                                <div>\n                                                    <Typography \n                                                        variant='subtitle1' \n                                                        component='span' \n                                                        color='textSecondary' \n                                                    >\n                                                        {timeDifference(post.utcTime, post.dateString)}\n                                                    </Typography>\n                                                    <br />\n                                                    {post.context === 'community' ? (\n                                                        <Typography \n                                                            variant='subtitle2' \n                                                            component='span' \n                                                            color='textSecondary' \n                                                            style={{\n                                                                cursor: 'pointer',\n                                                            }}\n                                                            onClick={e => history.push(`/geouser/${post.uniqueUserId}`)}\n                                                        >\n                                                            {post.username}\n                                                        </Typography>\n                                                    ) : ''}\n                                                </div>\n                                            }\n                                            avatar={\n                                                <Avatar \n                                                    src={post.context === 'personal' ? `https://www.geocities.cc/api/get/avatar/by/id/${post.uniqueUserId}` : `https://www.geocities.cc/api/get/avatar/by/community/name/${post.community}`}\n                                                    alt={`${post.username}`}\n                                                    title={`${post.username}`} \n                                                    style={{\n                                                        cursor: 'pointer',\n                                                    }}\n                                                    onClick={e => post.context === 'personal' ? history.push(`/geouser/${post.uniqueUserId}`) : history.push(`/community/${post.community}`)}\n                                                />\n                                            }\n                                        />\n                                        {post.title &&\n                                            <Typography \n                                                variant='h3' \n                                                component='h3' \n                                                align='center'\n                                            >\n                                                {post.title}\n                                            </Typography>\n                                        }\n                                        <div>\n                                            {post.type === 'photo' &&\n                                                <CardMedia \n                                                    className={classes.media}\n                                                    image={`https://www.geocities.cc/api/get-photo/${post.src}`}\n                                                    title={`Post by ${post.username}`}\n                                                    alt='GeoCities photo post'\n                                                />\n                                            }\n                                            {post.type === 'link' && \n                                                <CardMedia\n                                                    image={post.linkImage}\n                                                    title={`Post by ${post.username}`}\n                                                    alt='GeoCities link post'\n                                                    className={classes.media}\n                                                />\n                                            }\n                                        </div>\n                                        <div>\n                                            {post.type === 'video' &&\n                                                <CardContent>\n                                                    <Plyr \n                                                        playsinline={true}\n                                                        playsInline\n                                                        type='video'\n                                                        sources={[\n                                                            {\n                                                                src: `https://www.geocities.cc/api/get-video/${post.src}`,\n                                                            }\n                                                        ]}\n                                                        fullscreen={{\n                                                            enable: true,\n                                                            fallback: true,\n                                                            iosNative: false,\n                                                        }}\n                                                    />\n                                                </CardContent>\n                                            }\n                                        </div>\n                                        <div>\n                                            {post.type === 'text' &&\n                                                <Typography \n                                                    variant='body2' \n                                                    component='p' \n                                                >\n                                                    {post.text}\n                                                </Typography>\n                                            }\n                                        </div>\n                                        <div>\n                                            {post.caption &&\n                                                <Typography \n                                                    variant='body1' \n                                                    component='p' \n                                                >\n                                                    {post.caption}\n                                                </Typography>\n                                            }\n                                        </div>\n                                        <CardActions>\n                                            <IconButton \n                                                color='primary' \n                                            >\n                                                <Icon\n                                                    path={mdiThumbUp} \n                                                    size={1} \n                                                    title='Like button' \n                                                /> \n                                                {post.likes.length}\n                                            </IconButton>\n                                            <IconButton \n                                                color='primary' \n                                            >\n                                                <Icon\n                                                    path={mdiComment} \n                                                    size={1} \n                                                    title='Comment button' \n                                                />\n                                                {post.comments.length}\n                                            </IconButton>\n                                            <Link \n                                                to={post.context === 'community' ? `/community/${post.community}#${post.uniquePostId}` : `/geouser/${post.uniqueUserId}#${post.uniquePostId}`}\n                                            >\n                                                <Button \n                                                    color='primary' \n                                                >\n                                                    Go to post\n                                                </Button>\n                                            </Link>\n                                         \n                                        </CardActions>\n                                    </Card>\n                                }\n                            </div>\n\n                        ))}\n                    </Grid>\n                </Grid>\n            );\n        }\n        else {\n            return (\n                <Grid \n                    container \n                    className={classes.grid}\n                >\n                    <Grid \n                        item \n                        xs={12} \n                    >\n                        <Typography \n                            variant='h6' \n                            component='h6' \n                            align='center' \n                        >\n                            No posts in feed!\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n    }\n    else {\n        if(posts.length > 0) {\n            return (\n                <Grid \n                    className={classes.grid} \n                    container \n                >\n                    <Grid \n                        item \n                        xs={12} \n                    >\n                        {posts.map((post, index) => (\n                            <Card \n                                variant='outlined' \n                                className={classes.card}\n                                key={index.toString()}\n                                id={post.uniquePostId}\n                                style={{\n                                    marginBottom: index < posts.length - 1 ? 20 : 0,\n                                }}\n                            >\n                                <CardHeader \n                                    title={\n                                        <Typography \n                                            variant='h6' \n                                            component='h6' \n                                            style={{\n                                                cursor: 'pointer',\n                                            }}\n                                            onClick={e => post.context === 'personal' ? history.push(`geouser/${post.uniqueUserId}`) : history.push(`/community/${post.community}`)}\n                                        >\n                                            {post.context === 'personal' ? post.username : post.community}\n                                        </Typography>\n                                    }\n                                    subheader={\n                                        <div>\n                                            <Typography \n                                                variant='subtitle1' \n                                                component='span' \n                                                color='textSecondary' \n                                            >\n                                                {timeDifference(post.utcTime, post.dateString)}\n                                            </Typography>\n                                            {post.context === 'community' ? (\n                                                <Typography \n                                                    variant='subtitle2' \n                                                    component='span' \n                                                    color='textSecondary' \n                                                    style={{\n                                                        cursor: 'pointer',\n                                                    }}\n                                                    onClick={e => history.push(`/geouser/${post.uniqueUserId}`)}\n                                                >\n                                                    {post.username}\n                                                </Typography>\n                                            ) : ''}\n                                        </div>\n                                    }\n                                    avatar={\n                                        <Avatar \n                                            src={post.context === 'personal' ? `https://www.geocities.cc/api/get/avatar/by/id/${post.uniqueUserId}` : `https://www.geocities.cc/api/get/avatar/by/community/name/${post.community}`}\n                                            alt={`${post.username}`}\n                                            title={`${post.username}`} \n                                            style={{\n                                                cursor: 'pointer',\n                                            }}\n                                            onClick={e => post.context === 'personal' ? history.push(`/geouser/${post.uniqueUserId}`) : history.push(`/community/${post.community}`)}\n                                        />\n                                    }\n                                />\n                                {post.title &&\n                                    <Typography \n                                        variant='h3' \n                                        component='h3' \n                                        align='center'\n                                    >\n                                        {post.title}\n                                    </Typography>\n                                }\n                                <div>\n                                    {post.type === 'photo' &&\n                                        <CardMedia \n                                            className={classes.media}\n                                            image={`https://www.geocities.cc/api/get-photo/${post.src}`}\n                                            title={`Post by ${post.username}`}\n                                            alt='GeoCities photo post'\n                                        />\n                                    }\n                                    {post.type === 'link' && \n                                        <CardMedia\n                                            image={post.linkImage}\n                                            title={`Post by ${post.username}`}\n                                            alt='GeoCities link post'\n                                            className={classes.media}\n                                        />\n                                    }\n                                </div>\n                                <div>\n                                    {post.type === 'video' &&\n                                        <CardContent>\n                                            <Plyr \n                                                playsinline={true}\n                                                playsInline\n                                                type='video'\n                                                sources={[\n                                                    {\n                                                        src: `https://www.geocities.cc/api/get-video/${post.src}`,\n                                                    }\n                                                ]}\n                                                fullscreen={{\n                                                    enable: true,\n                                                    fallback: true,\n                                                    iosNative: false,\n                                                }}\n                                            />\n                                        </CardContent>\n                                    }\n                                </div>\n                                <div>\n                                    {post.type === 'text' &&\n                                        <Typography \n                                            variant='body2' \n                                            component='p' \n                                        >\n                                            {post.text}\n                                        </Typography>\n                                    }\n                                </div>\n                                <CardActions>\n                                    <IconButton \n                                        color='primary' \n                                    >\n                                        <Icon\n                                            path={mdiThumbUp} \n                                            size={1} \n                                            title='Like button' \n                                        /> \n                                        {post.likes.length}\n                                    </IconButton>\n                                    <IconButton \n                                        color='primary' \n                                    >\n                                        <Icon\n                                            path={mdiComment} \n                                            size={1} \n                                            title='Comment button' \n                                        />\n                                        {post.comments.length}\n                                    </IconButton>\n                                        Go to post \n                                        <Link \n                                            to={post.context === 'community' ? `/community/${post.community}#${post.uniquePostId}` : `/geouser/${post.uniqueUserId}#${post.uniquePostId}`}\n                                        >\n                                            <Button \n                                                color='primary' \n                                            >\n                                                Go to post\n                                            </Button>\n                                        </Link>\n                                </CardActions>\n                            </Card>\n                        ))}\n                    </Grid>\n                </Grid>\n            );\n        }\n        else {\n            return (\n                <Grid \n                    container \n                    className={classes.grid} \n                >\n                    <Grid \n                        item \n                        xs={12} \n                    >\n                        <Typography \n                            variant='h6' \n                            component='h6' \n                            align='center' \n                        >\n                            No posts in feed!\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n            );\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.userReducer.user,\n        primary: state.themeReducer.theme,\n    };\n}\n\nexport default connect(mapStateToProps)(Feed);"]},"metadata":{},"sourceType":"module"}