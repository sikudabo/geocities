{"ast":null,"code":"import _regeneratorRuntime from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect,useRef}from'react';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import Paper from'@material-ui/core/Paper';import Tabs from'@material-ui/core/Tabs';import Tab from'@material-ui/core/Tab';import Avatar from'@material-ui/core/Avatar';import Backdrop from'@material-ui/core/Backdrop';import CircularProgress from'@material-ui/core/CircularProgress';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import Divider from'@material-ui/core/Divider';import Button from'@material-ui/core/Button';import axios from'axios';import swal from'sweetalert';import Dialog from'@material-ui/core/Dialog';import DialogContent from'@material-ui/core/DialogContent';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import Hidden from'@material-ui/core/Hidden';import*as _ from'underscore';import{connect}from'react-redux';import{useHistory,useParams}from'react-router-dom';import{makeStyles}from'@material-ui/core/styles';import IconButton from'@material-ui/core/IconButton';import Icon from'@mdi/react';import{mdiClose}from'@mdi/js';import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';import CommunityPostsCard from'./CommunityPostsCard';function TabPanel(props){//This component will serve as the panel for each individual tab.\nvar children=props.children,value=props.value,index=props.index,other=_objectWithoutProperties(props,[\"children\",\"value\",\"index\"]);return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({role:\"tabpanel\",hidden:index!==value,id:\"tabpanel-\".concat(index),\"aria-label\":\"tab-\".concat(index),\"aria-labelledby\":\"tab-\".concat(index)},other),{},{style:{marginTop:100},children:value===index&&/*#__PURE__*/_jsx(Grid,{item:true,xs:true,style:{textAlign:'center'},children:children})}));}function a11yProps(index){return{id:\"tab-\".concat(index),'aria-controls':\"tabpanel-\".concat(index)};}function Community(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),community=_useState2[0],setCommunity=_useState2[1];//This variable and setter will manipulate community.\nvar useStyles=makeStyles(function(){return{root:{marginTop:100},centerContent:{margin:'auto',textAlign:'center'},nameGrid:{margin:'auto',textAlign:'center',marginTop:20},avatarLg:{height:168,width:168,margin:'auto'},avatarSm:{height:128,width:128,margin:'auto'},paper:{backgroundColor:community!==null?community.communityTheme:'rgb(0, 20, 60)'},closeIcon:{color:'rgb(255, 255, 255)'}};});var classes=useStyles();//Custom styles for the component. \nvar history=useHistory();//Window history API.\nvar params=useParams();//Access url parameters. \nvar textFormRef=useRef(null);//Ref for validator form when we upload posts.\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),joinSending=_useState4[0],setJoinSending=_useState4[1];//Will disable the button while we send a join or request join to the server.\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),postDialog=_useState6[0],setPostDialog=_useState6[1];//Will open and close the dialog to make a post.\nvar _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),curTab=_useState8[0],setTab=_useState8[1];//Sets the current tab in post upload dialog. \nvar _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),curTab2=_useState10[0],setTab2=_useState10[1];//For the second tab that displays posts, about (and settings if the user is not null and the uniqueUserId matches the mainUser, for moderation)\nvar _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),textPost=_useState12[0],setTextPost=_useState12[1];//Value for text post. \nvar _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),textPostTitle=_useState14[0],setTextPostTitle=_useState14[1];//Value for title.\nvar _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),photoPost=_useState16[0],setPhotoPost=_useState16[1];//Value for photo upload. \nvar _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),photoPostTitle=_useState18[0],setPhotoPostTitle=_useState18[1];//Value for photo post title. \nvar _useState19=useState(null),_useState20=_slicedToArray(_useState19,2),videoPost=_useState20[0],setVideoPost=_useState20[1];//Value for video post. \nvar _useState21=useState(''),_useState22=_slicedToArray(_useState21,2),videoPostTitle=_useState22[0],setVideoPostTitle=_useState22[1];//Video post title. \nvar _useState23=useState(''),_useState24=_slicedToArray(_useState23,2),linkPost=_useState24[0],setLinkPost=_useState24[1];//Value for the link in a link post. \nvar _useState25=useState(''),_useState26=_slicedToArray(_useState25,2),linkPostTitle=_useState26[0],setLinkPostTitle=_useState26[1];//Value for link post title. \nvar _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),posting=_useState28[0],setPosting=_useState28[1];//Will handle disabling buttons and bars when a post is being sent to the server.\nuseEffect(function(){//Add validation rules \nValidatorForm.addValidationRule('titleLength',function(v){if(v.length>75){return false;}else{return true;}});//Rule for text or caption to be 3,000 characters or less. \nValidatorForm.addValidationRule('textLength',function(v){if(v.length>3000){return false;}else{return true;}});//Validation rule to ensure textPost and linkPost are not empty. \nValidatorForm.addValidationRule('requiredText',function(v){if(v.trim()===''){return false;}else{return true;}});//First we need to fetch the community with axios. \nif(true){return axios({method:'GET',url:\"http://10.162.4.11:3001/api/fetch/community/\".concat(params.communityName)}).then(function(response){if(response.data.community){setCommunity(response.data.community);props.dispatch({type:'ThemeChange',payload:response.data.community.communityTheme});//Update the theme to match the community theme.\nprops.dispatch({type:'visitorPosts/updatePosts',payload:response.data.posts});//Update the posts to match what a visitor viewing these posts will see.\n//Now determine if the mainUser is in the blockList, and re-route to the previous page if they are. \nif(props.mainUser!==null){if(_.find(response.data.community.blockList,function(person){return person.uniqueUserId===props.mainUser.uniqueUserId;})){swal('Uh Oh!','You are blocked from this community!','error');history.goBack(1);}}}else{swal('Uh Oh!','We could not find that community!','error');history.goBack(1);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error finding that community! Please try again.','error');history.goBack(1);});}},[]);function publicJoin(){//Function that will enable a member to join a public community. \nvar data=JSON.stringify({username:props.mainUser.username,uniqueUserId:props.mainUser.uniqueUserId,name:community.name});return axios({method:'POST',url:'http://10.162.4.11:3001/api/public/join/community',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){if(response.data.result==='success'){swal('Great!','Successfully joined community!','success');setJoinSending(false);setCommunity(response.data.community);}else{swal('Uh Oh!','There was an error with joining this community! Please try again','error');setJoinSending(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error joining this community! Please try again','error');setJoinSending(false);});}function privateJoinRequest(){//This function will handle sending a join notification to the moderator. \nsetJoinSending(true);var data=JSON.stringify({uniqueUserId:props.mainUser.uniqueUserId,username:props.mainUser.username,moderatorUniqueUserId:community.moderator.uniqueUserId,name:community.name});return axios({method:'POST',url:'http://10.162.4.11:3001/api/community/join/request',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){if(response.data==='duplicate'){swal('Uh Oh!','You have already sent a request to join this community!','error');setJoinSending(false);}else{swal('Great!','Community join request sent!','success');setJoinSending(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error sending a request to join this community! Please try again.','error');setJoinSending(false);});}function sendTextPost(){return _sendTextPost.apply(this,arguments);}function _sendTextPost(){_sendTextPost=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var isValid,date,months,month,day,year,dateString,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://Function that will handle uploading a text post to the server. \nsetPosting(true);isValid=textFormRef.current.isFormValid();if(isValid){_context.next=8;break;}swal('Uh Oh!','Make sure the form is filled out properly','error');setPosting(false);return _context.abrupt(\"return\",false);case 8:date=new Date();months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'];month=months[date.getMonth()];day=date.getDate();year=date.getFullYear();dateString=\"\".concat(month,\" \").concat(day,\", \").concat(year);data=JSON.stringify({text:textPost,title:textPostTitle,uniqueUserId:props.mainUser.uniqueUserId,username:props.mainUser.username,community:community.name,type:'text',dateString:dateString,uniquePostId:Date.now()+props.mainUser.username+'textpost'+'info'+community.name,context:'community',privacy:community.communityPrivacy});return _context.abrupt(\"return\",axios({method:'post',url:'http://10.162.4.11:3001/api/add/community/text/post',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){if(response.data.result==='success'){props.dispatch({type:'visitorPosts/updatePosts',payload:response.data.posts});swal('Great!','Successfully uploaded text post!','success');setTextPost('');setTextPostTitle('');setPosting(false);setPostDialog(false);}else{swal('Uh Oh!','There was an error sending that text post!','error');setPosting(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error sending that text post! Please try again.','error');setPosting(false);}));case 16:case\"end\":return _context.stop();}}},_callee);}));return _sendTextPost.apply(this,arguments);}function leaveCommunity(){//This function will remove a member from a community if they are within it. \nsetJoinSending(true);var data=JSON.stringify({username:props.mainUser.username,uniqueUserId:props.mainUser.uniqueUserId,name:community.name});return axios({method:'POST',url:'http://10.162.4.11:3001/api/leave/community',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){if(response.data.result==='success'){swal('Great!','You have successfully left this community','success');setCommunity(response.data.community);setJoinSending(false);}else{swal('Uh Oh!','There was an error leaving this community! Please try again.','error');setJoinSending(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error leaving this community! Please try again.','error');setJoinSending(false);});}if(community!==null){var _jsx2;return/*#__PURE__*/_jsxs(Grid,{className:classes.root,container:true,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,className:classes.centerContent,children:[/*#__PURE__*/_jsx(Hidden,{smDown:true,children:/*#__PURE__*/_jsx(Avatar,{className:classes.avatarLg,src:\"http://10.162.4.11:3001/api/get-photo/\".concat(community.avatar),alt:\"\".concat(community.name,\" avatar\"),title:\"\".concat(community.name,\" avatar\"),variant:\"square\"})}),/*#__PURE__*/_jsx(Hidden,{mdUp:true,children:/*#__PURE__*/_jsx(Avatar,{src:\"http://10.162.4.11:3001/api/get-photo/\".concat(community.avatar),className:classes.avatarSm,title:\"\".concat(community.name,\" avatar\"),alt:\"\".concat(community.name,\" avatar\"),variant:\"square\"})})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.nameGrid,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:community.name})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.nameGrid,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",justify:\"left\",children:community.title})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,style:{margin:'auto',textAlign:'center',marginTop:20},children:[props.mainUser!==null&&!_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;})&&community.communityPrivacy==='public'&&community.moderator.uniqueUserId!==props.mainUser.uniqueUserId&&/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",onClick:publicJoin,disabled:joinSending,children:joinSending?/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}):'join'}),props.mainUser!==null&&!_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;})&&community.communityPrivacy==='private'&&community.moderator.uniqueUserId!==props.mainUser.uniqueUserid&&/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",onClick:privateJoinRequest,disabled:joinSending,children:joinSending?/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}):'join'}),props.mainUser!==null&&_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;})&&community.moderator.uniqueUserId!==props.mainUser.uniqueUserId&&/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"outlined\",onClick:leaveCommunity,disabled:joinSending,children:joinSending?/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}):'leave'}),props.mainUser===null&&/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:function onClick(e){return history.push('/');},children:\"Sign up or log in!\"}),props.mainUser===null&&community.communityPrivacy==='private'&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"This community is private\"})}),props.mainUser!==null&&!_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;})&&community.communityPrivacy==='private'&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"This community is private\"})}),props.mainUser!==null&&_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;})&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,style:{marginTop:20,marginBottom:20},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",style:{margin:'auto'},children:\"Chat\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"outlined\",onClick:function onClick(e){return setPostDialog(true);},children:\"Post\"})})]})]}),props.mainUser!==null&&_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;})&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Dialog,{open:postDialog,fullScreen:true,children:/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(AppBar,{color:\"primary\",hidden:posting,children:[/*#__PURE__*/_jsx(Icon,{path:mdiClose,size:1,title:\"Dialog close\",style:{cursor:'pointer'},onClick:function onClick(){return setPostDialog(false);}}),/*#__PURE__*/_jsxs(Tabs,{value:curTab,onChange:function onChange(e,newVal){return setTab(newVal);},centered:true,children:[/*#__PURE__*/_jsx(Tab,_objectSpread(_objectSpread({},a11yProps(0)),{},{label:\"Text\",disabled:posting})),/*#__PURE__*/_jsx(Tab,_objectSpread(_objectSpread({},a11yProps(1)),{},{label:\"Photo\",disabled:posting})),/*#__PURE__*/_jsx(Tab,_objectSpread(_objectSpread({},a11yProps(2)),{},{label:\"Video\",disabled:posting})),/*#__PURE__*/_jsx(Tab,_objectSpread(_objectSpread({},a11yProps(3)),{},{label:\"Link\",disabled:posting}))]})]}),/*#__PURE__*/_jsx(TabPanel,{index:0,value:curTab,children:/*#__PURE__*/_jsxs(ValidatorForm,{ref:textFormRef,onSubmit:function onSubmit(e){return e.preventDefault();},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",component:\"small\",color:textPostTitle.length>75?'error':'default',align:\"center\",children:[textPostTitle.length,\"/75\"]}),/*#__PURE__*/_jsx(TextValidator,{label:\"Post title\",placeholder:\"Enter a title for your post of 75 characters or less\",value:textPostTitle,onChange:function onChange(e){return setTextPostTitle(e.target.value);},helperText:\"Enter a title for this text post\",validators:['titleLength'],errorMessages:['Title can only be up to 75 characters'],InputLabelProps:{shrink:true},color:\"primary\",variant:\"outlined\",fullWidth:true}),/*#__PURE__*/_jsxs(Typography,{style:{marginTop:30},variant:\"body1\",component:\"small\",color:textPost.length>3000?'error':'default',align:\"center\",children:[textPost.length,\"/3000\"]}),/*#__PURE__*/_jsx(TextValidator,(_jsx2={label:\"Text post\",placeholder:\"Share a text post!\",value:textPost,onChange:function onChange(e){return setTextPost(e.target.value);},helperText:\"Enter a text post of up to 3,000 characters long!\",validators:['requiredText','textLength'],errorMessages:['Must enter some text!','Text post cannot be more than 3,000 characters long!'],variant:\"outlined\",InputLabelProps:{shrink:true},color:\"primary\"},_defineProperty(_jsx2,\"variant\",\"outlined\"),_defineProperty(_jsx2,\"rows\",3),_defineProperty(_jsx2,\"multiline\",true),_defineProperty(_jsx2,\"required\",true),_defineProperty(_jsx2,\"fullWidth\",true),_jsx2)),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:sendTextPost,disabled:posting,children:posting?/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}):'Upload'})]})})]})})}),(community.communityPrivacy==='public'||props.mainUser!==null&&_.find(community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;}))&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Paper,{className:classes.paper,style:{marginTop:10},children:/*#__PURE__*/_jsxs(Tabs,{value:curTab2,onChange:function onChange(e,newVal){return setTab2(newVal);},centered:true,style:{color:'rgb(255, 255, 255)'},children:[/*#__PURE__*/_jsx(Tab,_objectSpread({label:\"Posts\"},a11yProps(0))),/*#__PURE__*/_jsx(Tab,_objectSpread({label:\"About\"},a11yProps(1))),props.mainUser!==null&&community.moderator.uniqueUserId===props.mainUser.uniqueUserId&&/*#__PURE__*/_jsx(Tab,_objectSpread({label:\"Settings\"},a11yProps(2)))]})}),/*#__PURE__*/_jsxs(TabPanel,{value:0,index:curTab2,children:[props.posts.length<1&&/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"No posts\"}),props.posts.length>0&&/*#__PURE__*/_jsx(\"div\",{children:props.posts.map(function(post,index){return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'left'},children:[props.mainUser!==null&&/*#__PURE__*/_jsx(CommunityPostsCard,{post:post,id:post.uniquePostId,moderator:props.mainUser.uniqueUserId===community.moderator.uniqueUserId}),index<props.posts.length-1&&/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:20}})]},index);})})]})]})]});}else{//If the community is null, simply return a Backdrop with a CircularProgress inside \nreturn/*#__PURE__*/_jsx(Backdrop,{open:true,children:/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"})});}}function mapStateToProps(state){return{mainUser:state.userReducer.user,primary:state.userThemeReducer.primary,posts:state.visitorPostsReducer.posts};}export default connect(mapStateToProps)(Community);","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/Community.js"],"names":["React","useState","useEffect","useRef","Grid","Typography","Paper","Tabs","Tab","Avatar","Backdrop","CircularProgress","List","ListItem","Divider","Button","axios","swal","Dialog","DialogContent","AppBar","Toolbar","Hidden","_","connect","useHistory","useParams","makeStyles","IconButton","Icon","mdiClose","ValidatorForm","TextValidator","CommunityPostsCard","TabPanel","props","children","value","index","other","marginTop","textAlign","a11yProps","id","Community","community","setCommunity","useStyles","root","centerContent","margin","nameGrid","avatarLg","height","width","avatarSm","paper","backgroundColor","communityTheme","closeIcon","color","classes","history","params","textFormRef","joinSending","setJoinSending","postDialog","setPostDialog","curTab","setTab","curTab2","setTab2","textPost","setTextPost","textPostTitle","setTextPostTitle","photoPost","setPhotoPost","photoPostTitle","setPhotoPostTitle","videoPost","setVideoPost","videoPostTitle","setVideoPostTitle","linkPost","setLinkPost","linkPostTitle","setLinkPostTitle","posting","setPosting","addValidationRule","v","length","trim","method","url","communityName","then","response","data","dispatch","type","payload","posts","mainUser","find","blockList","person","uniqueUserId","goBack","catch","err","console","log","message","publicJoin","JSON","stringify","username","name","headers","result","privateJoinRequest","moderatorUniqueUserId","moderator","sendTextPost","isValid","current","isFormValid","date","Date","months","month","getMonth","day","getDate","year","getFullYear","dateString","text","title","uniquePostId","now","context","privacy","communityPrivacy","leaveCommunity","avatar","members","member","uniqueUserid","e","push","marginBottom","cursor","newVal","preventDefault","target","shrink","map","post","mapStateToProps","state","userReducer","user","primary","userThemeReducer","visitorPostsReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Avatar from '@material-ui/core/Avatar';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Hidden from '@material-ui/core/Hidden';\nimport * as _ from 'underscore';\nimport { connect } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom'; \nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiClose } from '@mdi/js';\nimport PropTypes from 'prop-types';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport CommunityPostsCard from './CommunityPostsCard';\n\nfunction TabPanel(props) {\n    //This component will serve as the panel for each individual tab.\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div \n            role='tabpanel'\n            hidden={index !== value} \n            id={`tabpanel-${index}`}\n            aria-label={`tab-${index}`}\n            aria-labelledby={`tab-${index}`}\n            {...other}\n            style={{\n                marginTop: 100,\n            }}\n        >\n            {value === index &&\n                <Grid \n                    item \n                    xs\n                    style={{\n                        textAlign: 'center',\n                    }}\n                >\n                    {children}\n                </Grid>\n            }\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    value: PropTypes.any.isRequired,\n    index: PropTypes.any.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `tab-${index}`,\n        'aria-controls': `tabpanel-${index}`,\n    };\n}\n\n\nfunction Community(props) {\n    const [community, setCommunity] = useState(null); //This variable and setter will manipulate community.\n    const useStyles = makeStyles(() => ({\n        root: {\n            marginTop: 100,\n        },\n        centerContent: {\n            margin: 'auto',\n            textAlign: 'center',\n        },\n        nameGrid: {\n            margin: 'auto',\n            textAlign: 'center',\n            marginTop: 20,\n        },\n        avatarLg: {\n            height: 168,\n            width: 168,\n            margin: 'auto',\n        },\n        avatarSm: {\n            height: 128,\n            width: 128,\n            margin: 'auto',\n        },\n        paper: {\n            backgroundColor: community !== null ? community.communityTheme : 'rgb(0, 20, 60)',\n        },\n        closeIcon: {\n            color: 'rgb(255, 255, 255)',\n        },\n    }));\n    const classes = useStyles(); //Custom styles for the component. \n    const history = useHistory(); //Window history API.\n    const params = useParams(); //Access url parameters. \n    const textFormRef = useRef(null); //Ref for validator form when we upload posts.\n    const [joinSending, setJoinSending] = useState(false); //Will disable the button while we send a join or request join to the server.\n    const [postDialog, setPostDialog] = useState(false); //Will open and close the dialog to make a post.\n    const [curTab, setTab] = useState(0); //Sets the current tab in post upload dialog. \n    const [curTab2, setTab2] = useState(0); //For the second tab that displays posts, about (and settings if the user is not null and the uniqueUserId matches the mainUser, for moderation)\n    const [textPost, setTextPost] = useState(''); //Value for text post. \n    const [textPostTitle, setTextPostTitle] = useState(''); //Value for title.\n    const [photoPost, setPhotoPost] = useState(null); //Value for photo upload. \n    const [photoPostTitle, setPhotoPostTitle] = useState(''); //Value for photo post title. \n    const [videoPost, setVideoPost] = useState(null); //Value for video post. \n    const [videoPostTitle, setVideoPostTitle] = useState(''); //Video post title. \n    const [linkPost, setLinkPost] = useState(''); //Value for the link in a link post. \n    const [linkPostTitle, setLinkPostTitle] = useState(''); //Value for link post title. \n    const [posting, setPosting] = useState(false); //Will handle disabling buttons and bars when a post is being sent to the server.\n\n    useEffect(() => {\n        //Add validation rules \n        ValidatorForm.addValidationRule('titleLength', v => {\n            if(v.length > 75) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n\n        //Rule for text or caption to be 3,000 characters or less. \n        ValidatorForm.addValidationRule('textLength', v => {\n            if(v.length > 3000) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n\n        //Validation rule to ensure textPost and linkPost are not empty. \n        ValidatorForm.addValidationRule('requiredText', v => {\n            if(v.trim() === '') {\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n        //First we need to fetch the community with axios. \n        if(true) {\n            return axios({\n                method: 'GET',\n                url: `http://10.162.4.11:3001/api/fetch/community/${params.communityName}`,\n            }).then(response => {\n                if(response.data.community) {\n                    setCommunity(response.data.community);\n                    props.dispatch({type: 'ThemeChange', payload: response.data.community.communityTheme}); //Update the theme to match the community theme.\n                    props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts}); //Update the posts to match what a visitor viewing these posts will see.\n                    //Now determine if the mainUser is in the blockList, and re-route to the previous page if they are. \n                    if(props.mainUser !== null) {\n                        if(_.find(response.data.community.blockList, person => person.uniqueUserId === props.mainUser.uniqueUserId)) {\n                            swal(\n                                'Uh Oh!',\n                                'You are blocked from this community!',\n                                'error',\n                            );\n                            history.goBack(1);\n                        }\n                    }\n                }\n                else {\n                    swal(\n                        'Uh Oh!',\n                        'We could not find that community!',\n                        'error',\n                    );\n                    history.goBack(1);\n                }\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error finding that community! Please try again.',\n                    'error',\n                );\n                history.goBack(1);\n            });\n        }\n    }, []);\n\n    function publicJoin() {\n        //Function that will enable a member to join a public community. \n        let data = JSON.stringify({\n            username: props.mainUser.username,\n            uniqueUserId: props.mainUser.uniqueUserId,\n            name: community.name,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'http://10.162.4.11:3001/api/public/join/community',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            if(response.data.result === 'success') {\n                swal(\n                    'Great!',\n                    'Successfully joined community!',\n                    'success',\n                );\n                setJoinSending(false);\n                setCommunity(response.data.community);\n            }\n            else {\n                swal(\n                    'Uh Oh!',\n                    'There was an error with joining this community! Please try again',\n                    'error',\n                );\n                setJoinSending(false);\n            }\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error joining this community! Please try again',\n                'error',\n            );\n            setJoinSending(false);\n        });\n    }\n\n    function privateJoinRequest() {\n        //This function will handle sending a join notification to the moderator. \n        setJoinSending(true);\n        let data = JSON.stringify({\n            uniqueUserId: props.mainUser.uniqueUserId,\n            username: props.mainUser.username,\n            moderatorUniqueUserId: community.moderator.uniqueUserId,\n            name: community.name,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'http://10.162.4.11:3001/api/community/join/request',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            if(response.data === 'duplicate') {\n                swal(\n                    'Uh Oh!',\n                    'You have already sent a request to join this community!',\n                    'error',\n                );\n                setJoinSending(false);\n            }\n            else {\n                swal(\n                    'Great!',\n                    'Community join request sent!',\n                    'success',\n                );\n                setJoinSending(false);\n            }\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error sending a request to join this community! Please try again.',\n                'error',\n            );\n            setJoinSending(false);\n        });\n    }\n\n    async function sendTextPost() {\n        //Function that will handle uploading a text post to the server. \n        setPosting(true); \n        let isValid = textFormRef.current.isFormValid();\n        if(!isValid) {\n            swal(\n                'Uh Oh!',\n                'Make sure the form is filled out properly',\n                'error',\n            );\n            setPosting(false);\n            return false;\n        }\n        else {\n            let date = new Date();\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n            let month = months[date.getMonth()];\n            let day = date.getDate();\n            let year = date.getFullYear();\n            let dateString = `${month} ${day}, ${year}`;\n            let data = JSON.stringify({\n                text: textPost,\n                title: textPostTitle,\n                uniqueUserId: props.mainUser.uniqueUserId,\n                username: props.mainUser.username,\n                community: community.name,\n                type: 'text',\n                dateString: dateString,\n                uniquePostId: Date.now() + props.mainUser.username + 'textpost' + 'info' + community.name,\n                context: 'community',\n                privacy: community.communityPrivacy,\n            });\n\n            return axios({\n                method: 'post',\n                url: 'http://10.162.4.11:3001/api/add/community/text/post',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                if(response.data.result === 'success') {\n                    props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\n                    swal(\n                        'Great!',\n                        'Successfully uploaded text post!',\n                        'success',\n                    );\n                    setTextPost('');\n                    setTextPostTitle('');\n                    setPosting(false);\n                    setPostDialog(false);\n                }\n                else {\n                    swal(\n                        'Uh Oh!',\n                        'There was an error sending that text post!',\n                        'error',\n                    );\n                    setPosting(false);\n                }\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error sending that text post! Please try again.',\n                    'error',\n                );\n                setPosting(false);\n            });\n        }\n    }\n\n    function leaveCommunity() {\n        //This function will remove a member from a community if they are within it. \n        setJoinSending(true);\n        let data = JSON.stringify({\n            username: props.mainUser.username,\n            uniqueUserId: props.mainUser.uniqueUserId,\n            name: community.name,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'http://10.162.4.11:3001/api/leave/community',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            if(response.data.result === 'success') {\n                swal(\n                    'Great!',\n                    'You have successfully left this community',\n                    'success',\n                );\n                setCommunity(response.data.community);\n                setJoinSending(false);\n            }\n            else {\n                swal(\n                    'Uh Oh!',\n                    'There was an error leaving this community! Please try again.',\n                    'error',\n                );\n                setJoinSending(false);\n            }\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error leaving this community! Please try again.',\n                'error',\n            );\n            setJoinSending(false);\n        });\n    }\n\n    if(community !== null) {\n        return (\n            <Grid \n                className={classes.root} \n                container \n            >\n                <Grid \n                    item \n                    xs={12} \n                    className={classes.centerContent} \n                >\n                    <Hidden \n                        smDown \n                    >\n                        <Avatar \n                            className={classes.avatarLg} \n                            src={`http://10.162.4.11:3001/api/get-photo/${community.avatar}`}\n                            alt={`${community.name} avatar`}\n                            title={`${community.name} avatar`}\n                            variant='square'\n                        />\n                    </Hidden>\n                    <Hidden \n                        mdUp \n                    >\n                        <Avatar \n                            src={`http://10.162.4.11:3001/api/get-photo/${community.avatar}`}\n                            className={classes.avatarSm} \n                            title={`${community.name} avatar`}\n                            alt={`${community.name} avatar`}\n                            variant='square'\n                        />\n                    </Hidden>\n                </Grid>\n                {/* The grid below will store the name of the community */}\n                <Grid \n                    item \n                    xs={12} \n                    className={classes.nameGrid} \n                >\n                    <Typography \n                        variant='h6' \n                        component='h6' \n                        align='center' \n                    >\n                        {community.name}\n                    </Typography>\n                </Grid>\n                {/* End of the grid to display the community name */}\n                {/* Below is the Grid to display the title of the community */}\n                <Grid \n                    item \n                    xs={12}\n                    className={classes.nameGrid} \n                >\n                    <Typography \n                        variant='body1' \n                        component='p'\n                        justify='left' \n                    >\n                        {community.title}\n                    </Typography>\n                </Grid>\n                {/* End of the Grid to display the title of the community */}\n                {/* Now create a button for the user if they are logged in, not a member, and the community is public */}\n                <Grid \n                    item \n                    xs={12}\n                    style={{\n                        margin: 'auto',\n                        textAlign: 'center',\n                        marginTop: 20,\n                    }}\n                >\n                    {/* Button if the user is logged in, not a member, and the community is public */}\n                    {(props.mainUser !== null && !_.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.communityPrivacy === 'public' && community.moderator.uniqueUserId !== props.mainUser.uniqueUserId) &&\n                        <Button \n                            color='primary' \n                            variant='contained' \n                            onClick={publicJoin}\n                            disabled={joinSending}\n                        >\n                            {joinSending ? <CircularProgress color='primary' /> : 'join'}\n                        </Button>\n                    }\n                    {/* Below is the Button if the user is logged in, not a member, and the community is private */}\n                    {(props.mainUser !== null && !_.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.communityPrivacy === 'private' && community.moderator.uniqueUserId !== props.mainUser.uniqueUserid) &&\n                        <Button \n                            color='primary' \n                            variant='contained' \n                            onClick={privateJoinRequest}\n                            disabled={joinSending}\n                        >\n                            {joinSending ? <CircularProgress color='primary' /> : 'join'}\n                        </Button>\n                    }\n                    {(props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.moderator.uniqueUserId !==  props.mainUser.uniqueUserId) &&\n                        <Button \n                            color='primary'\n                            variant='outlined' \n                            onClick={leaveCommunity}\n                            disabled={joinSending}\n                        >\n                            {joinSending ? <CircularProgress color='primary' /> : 'leave'}\n                        </Button>\n                    }\n                    {/* Below, we will add a button to route someone who is not signed up or logged in to the sign up page */}\n                    {props.mainUser === null &&\n                        <Button \n                            color='primary' \n                            onClick={e => history.push('/')}\n                        >\n                            Sign up or log in!\n                        </Button>\n                    }\n                    {(props.mainUser === null && community.communityPrivacy === 'private') &&\n                        <Grid \n                            item \n                            xs={12} \n                        >\n                            <Typography \n                                variant='h6' \n                                component='h6' \n                                align='center' \n                            >\n                                This community is private\n                            </Typography>\n                        </Grid>\n                    }\n                    {(props.mainUser !== null && !_.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId) && community.communityPrivacy === 'private') && \n                        <Grid \n                            item \n                            xs={12} \n                        >\n                            <Typography \n                                variant='h6' \n                                component='h6' \n                                align='center' \n                            >\n                                This community is private\n                            </Typography>\n                        </Grid>\n                    }\n                    {/*Now I will have two buttons in two grids for members of the community to either chat or post content to the community */}\n                    {(props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId)) &&\n                        <div>\n                            <Grid \n                                item \n                                xs={12} \n                                style={{\n                                    marginTop: 20,\n                                    marginBottom: 20,\n                                }}\n                            >\n                                <Button \n                                    variant='contained' \n                                    color='primary' \n                                    style={{\n                                        margin: 'auto',\n                                    }}\n                                >\n                                    Chat \n                                </Button>\n                            </Grid>\n                            <Grid \n                                item \n                                xs={12} \n                            >\n                                <Button \n                                    color='primary' \n                                    variant='outlined' \n                                    onClick={e => setPostDialog(true)}\n                                >\n                                    Post \n                                </Button>\n                            </Grid>\n                        </div>\n                    }\n                    {/* This is the end of the two Grids for a the chat Button and the Post button */}\n                    {/*Below create the Dialog that will open when the user tries to make a post. Only show when a user is part of the community */}\n                </Grid>\n                {(props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId)) &&\n                    <Grid \n                        item \n                        xs={12} \n                    >\n                        <Dialog \n                            open={postDialog} \n                            fullScreen\n                        >\n                            <DialogContent>\n                                <AppBar \n                                    color='primary'\n                                    hidden={posting}\n                                >\n                                    <Icon \n                                        path={mdiClose} \n                                        size={1} \n                                        title='Dialog close' \n                                        style={{\n                                            cursor: 'pointer'\n                                        }}\n                                        onClick={() => setPostDialog(false)}\n                                    />\n                                    <Tabs \n                                        value={curTab}\n                                        onChange={(e, newVal) => setTab(newVal)} \n                                        centered\n                                    >\n                                        <Tab \n                                            {...a11yProps(0)} \n                                            label='Text' \n                                            disabled={posting}\n                                        />\n                                        <Tab \n                                            {...a11yProps(1)} \n                                            label='Photo' \n                                            disabled={posting}\n                                        />\n                                        <Tab \n                                            {...a11yProps(2)}\n                                            label='Video' \n                                            disabled={posting}\n                                        />\n                                        <Tab \n                                            {...a11yProps(3)}\n                                            label='Link'\n                                            disabled={posting} \n                                        />\n                                    </Tabs>\n                                </AppBar>\n                                <TabPanel \n                                    index={0}\n                                    value={curTab}\n                                >\n                                    <ValidatorForm\n                                        ref={textFormRef} \n                                        onSubmit={e => e.preventDefault()}\n                                    >\n                                        <Typography \n                                            variant='body1' \n                                            component='small' \n                                            color={textPostTitle.length > 75 ? 'error' : 'default'}\n                                            align='center' \n                                        >\n                                            {textPostTitle.length}/75\n                                        </Typography>\n                                        <TextValidator \n                                            label='Post title'\n                                            placeholder='Enter a title for your post of 75 characters or less'\n                                            value={textPostTitle}\n                                            onChange={e => setTextPostTitle(e.target.value)}\n                                            helperText='Enter a title for this text post'\n                                            validators={['titleLength']}\n                                            errorMessages={['Title can only be up to 75 characters']}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            color='primary'\n                                            variant='outlined'\n                                            fullWidth\n                                        />\n                                        <Typography \n                                            style={{\n                                                marginTop: 30,\n                                            }}\n                                            variant='body1' \n                                            component='small'\n                                            color={textPost.length > 3000 ? 'error' : 'default'}\n                                            align='center' \n                                        >\n                                            {textPost.length}/3000\n                                        </Typography>\n                                        <TextValidator \n                                            label='Text post'\n                                            placeholder='Share a text post!'\n                                            value={textPost}\n                                            onChange={e => setTextPost(e.target.value)}\n                                            helperText='Enter a text post of up to 3,000 characters long!'\n                                            validators={['requiredText', 'textLength']}\n                                            errorMessages={['Must enter some text!', 'Text post cannot be more than 3,000 characters long!']}\n                                            variant='outlined' \n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            color='primary' \n                                            variant='outlined' \n                                            rows={3}\n                                            multiline \n                                            required \n                                            fullWidth \n                                        />\n                                        <Button \n                                            variant='contained' \n                                            color='primary' \n                                            onClick={sendTextPost}\n                                            disabled={posting}\n                                        >\n                                            {posting ? <CircularProgress color='primary' /> : 'Upload'}\n                                        </Button>\n                                    </ValidatorForm>\n                                </TabPanel>\n                            </DialogContent>\n                        </Dialog>\n                    </Grid>\n                }\n                {/*End of the Grid for the dialog box for posts if the user is logged in and a member of the community */}\n                {/* Below add the tabpanel for posts, about, and settings (only render settings if moderator is visiting page) */}\n                {(community.communityPrivacy === 'public' || (props.mainUser !== null && _.find(community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId))) &&\n                    <Grid \n                        item \n                        xs={12} \n                    >\n                        <Paper \n                            className={classes.paper}\n                            style={{\n                                marginTop: 10,\n                            }}\n                        >\n                            <Tabs \n                                value={curTab2} \n                                onChange={(e, newVal) => setTab2(newVal)}\n                                centered\n                                style={{\n                                    color: 'rgb(255, 255, 255)',\n                                }}\n                            >\n                                <Tab \n                                    label='Posts' \n                                    {...a11yProps(0)} \n                                />\n                                <Tab \n                                    label='About' \n                                    {...a11yProps(1)} \n                                />\n                                {(props.mainUser !== null && community.moderator.uniqueUserId === props.mainUser.uniqueUserId) &&\n                                    <Tab \n                                        label='Settings' \n                                        {...a11yProps(2)} \n                                    />\n                                }\n                            </Tabs>\n                        </Paper>\n                        {/* Now begin the tab for posts. Have the CommunityPostsCard ONLY for users who are logged in */}\n                        <TabPanel \n                            value={0} \n                            index={curTab2} \n                        >\n                            {props.posts.length < 1 && \n                                <Typography \n                                    variant='h6' \n                                    component='h6' \n                                    align='center' \n                                >\n                                    No posts \n                                </Typography>\n                            }\n                            {props.posts.length > 0 && \n                                <div>\n                                    {props.posts.map((post, index) => (\n                                        <div \n                                            style={{\n                                                textAlign: 'left',\n                                            }}\n                                            key={index}\n                                        >\n                                            {props.mainUser !== null &&       \n                                                <CommunityPostsCard\n                                                    post={post}\n                                                    id={post.uniquePostId}\n                                                    moderator={props.mainUser.uniqueUserId === community.moderator.uniqueUserId}\n                                                />\n                                            }\n                                            {index < props.posts.length - 1 &&\n                                                <div \n                                                    style={{\n                                                        marginBottom: 20,\n                                                    }}\n                                                />\n                                            }\n                                        </div>\n                                    ))}\n                                </div>\n                            }\n                        </TabPanel>\n                    </Grid>\n                }\n                {/* End of the Grid for the main sections of the community page */}\n            </Grid>\n        );\n    }\n    else {\n        //If the community is null, simply return a Backdrop with a CircularProgress inside \n        return (\n            <Backdrop \n                open={true} \n            >\n                <CircularProgress \n                    color='primary' \n                />\n            </Backdrop>\n        );\n    }  \n}\n\nfunction mapStateToProps(state) {\n    return {\n        mainUser: state.userReducer.user,\n        primary: state.userThemeReducer.primary,\n        posts: state.visitorPostsReducer.posts,\n    };\n}\n\nexport default connect(mapStateToProps)(Community);"]},"metadata":{},"sourceType":"module"}