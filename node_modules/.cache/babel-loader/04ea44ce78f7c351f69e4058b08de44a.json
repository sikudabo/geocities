{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simeonikudabo/Downloads/geocities/src/components/NotificationsComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiCheckBold, mdiClose } from '@mdi/js';\nimport { connect } from 'react-redux';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Paper from '@material-ui/core/Paper';\nimport GeoIcon from '../site-icons/geoicon2.png';\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 100\n  },\n  item: {\n    margin: 'auto'\n  },\n  list: {\n    margin: 'auto',\n    maxWidth: 700\n  }\n}));\n\nfunction NotificationsComponent(props) {\n  _s();\n\n  const [deletingNotification, setDeletingNotification] = useState(false); //Backdrop when we want to delete notification.\n\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {\n    if (props.mainUser === null) {\n      history.push('/');\n    } else {\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.17:3001/api/grab/user/${props.mainUser.uniqueUserId}`\n      }).then(response => {\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        props.dispatch({\n          type: 'ThemeChange',\n          payload: response.data.user.profileTheme\n        });\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error gathering your notifications! Please try again', 'error');\n        history.goBack(1);\n      });\n    }\n  }, []);\n\n  function utcToDateString(utc) {\n    let date = new Date(utc);\n    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n    let month = months[date.getMonth()];\n    let day = date.getDate();\n    let year = date.getFullYear();\n    return month + ' ' + day + ', ' + year;\n  }\n\n  function deleteNotification(uniqueNotificationId, link) {\n    setDeletingNotification(true);\n    let data = JSON.stringify({\n      uniqueUserId: props.mainUser.uniqueUserId,\n      uniqueNotificationId: uniqueNotificationId,\n      link: link\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.17:3001/api/delete/notification',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setDeletingNotification(false);\n      props.dispatch({\n        type: 'user/updateUser',\n        payload: response.data.user\n      });\n      swal('Great!', 'Notification successfully deleted!', 'success');\n\n      if (response.data.link !== '') {\n        history.push(response.data.link);\n      }\n    }).catch(err => {\n      setDeletingNotification(false);\n      throw new Error(err);\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error deleting that notification!', 'error');\n    });\n  }\n\n  function acceptRejectFollow(followerUsername, followerUniqueUserId, uniqueNotificationId, accept) {\n    setDeletingNotification(true);\n    let data = JSON.stringify({\n      followerUsername: followerUsername,\n      followerUniqueUserId: followerUniqueUserId,\n      uniqueNotificationId: uniqueNotificationId,\n      accept: accept,\n      username: props.mainUser.username,\n      uniqueUserId: props.mainUser.uniqueUserId\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.17:3001/api/follow/request/choice',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      props.dispatch({\n        type: 'user/updateUser',\n        payload: response.data.user\n      });\n\n      if (response.data.accept === true) {\n        swal('Great!', 'Successfully accepted that follow request!', 'success');\n        setDeletingNotification(false);\n      } else {\n        swal('Great!', 'Successfully rejected that follow request!', 'success');\n        setDeletingNotification(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error accepting or rejecting that follow request!', 'error');\n      setDeletingNotification(false);\n    });\n  }\n\n  function acceptRejectJoinRequest(username, uniqueUserId, community, uniqueNotificationId, acceptReject) {\n    //This function will handle acception or rejecting a community join request. \n    setDeletingNotification(true);\n    let data = JSON.stringify({\n      uniqueUserId: uniqueUserId,\n      username: username,\n      name: community,\n      uniqueNotificationId: uniqueNotificationId,\n      acceptReject: acceptReject,\n      moderatorUniqueUserId: props.mainUser.uniqueUserId,\n      moderatorUsername: props.mainUser.username\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.17:3001/api/accept/reject/community/join',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data.acceptReject === true) {\n        swal('Great!', 'Successfully accepted that community join request!', 'success');\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        setDeletingNotification(false);\n      } else if (response.data.acceptReject === false) {\n        swal('Great!', 'Successfully denied that community join request!', 'success');\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        setDeletingNotification(false);\n      } else {\n        swal('Uh oh!', 'There was an accepting or rejection that community join request!', 'error');\n        setDeletingNotification(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error accepting or rejection that community join request!', 'error');\n      setDeletingNotification(false);\n    });\n  }\n\n  if (props.mainUser !== null) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n        open: deletingNotification,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), props.mainUser.notifications.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: classes.list,\n          children: props.mainUser.notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [notification.type === 'post comment' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 41\n            }, this), notification.type === 'post like' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 41\n            }, this), notification.type === 'join accepted' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.17:3001/api/get/avatar/by/community/name/${notification.community}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 41\n            }, this), notification.type === 'new follower' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 41\n            }, this), notification.type === 'comment like' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 41\n            }, this), notification.type === 'follower request' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              style: {\n                marginBottom: 20\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`,\n                    style: {\n                      cursor: 'pointer'\n                    },\n                    onClick: e => history.push(`/geouser/${notification.uniqueSenderId}`)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  color: 'rgb(0, 128, 0)'\n                },\n                \"aria-label\": \"Accept follower request button\",\n                disabled: deletingNotification,\n                onClick: e => acceptRejectFollow(notification.sender, notification.uniqueSenderId, notification.uniqueNotificationId, true),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiCheckBold,\n                  size: 1,\n                  title: \"Acccept follow request\",\n                  \"aria-label\": \"Follow request accept icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  color: 'rgb(255, 0, 0)'\n                },\n                \"aria-label\": \"Deny request button\",\n                disabled: deletingNotification,\n                onClick: e => acceptRejectFollow(notification.sender, notification.uniqueSenderId, notification.uniqueNotificationId, false),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiClose,\n                  size: 1,\n                  title: \"Deny request icon\",\n                  \"aria-label\": \"Deny request icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 41\n            }, this), notification.type === 'community join request' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              style: {\n                marginBottom: 20\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`,\n                    style: {\n                      cursor: 'pointer'\n                    },\n                    onClick: e => history.push(`/geouser/${notification.uniqueSenderId}`)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  color: 'rgb(0, 128, 0)'\n                },\n                \"aria-label\": \"Accept communityJoin request button\",\n                disabled: deletingNotification,\n                onClick: e => acceptRejectJoinRequest(notification.sender, notification.uniqueSenderId, notification.community, notification.uniqueNotificationId, true),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiCheckBold,\n                  size: 1,\n                  title: \"Acccept follow request\",\n                  \"aria-label\": \"Follow request accept icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  color: 'rgb(255, 0, 0)'\n                },\n                \"aria-label\": \"Deny request button\",\n                disabled: deletingNotification,\n                onClick: e => acceptRejectJoinRequest(notification.sender, notification.uniqueSenderId, notification.community, notification.uniqueNotificationId, false),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiClose,\n                  size: 1,\n                  title: \"Deny request icon\",\n                  \"aria-label\": \"Deny request icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 41\n            }, this), notification.type === 'welcome' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: \"GeoCities logo\",\n                    title: \"GeoCities logo\",\n                    src: GeoIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    children: \"Welcome to GeoCities. We hope that you have fun building communites and connecting with others!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 41\n            }, this), notification.type === 'accept follow request' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                onClick: e => deleteNotification(notification.uniqueNotificationId, notification.link),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 644,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 653,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 41\n            }, this)]\n          }, index.toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), props.mainUser.notifications.length < 1 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          align: \"center\",\n          children: \"No Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: true,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(NotificationsComponent, \"TaioUrxSUjibbY1Gjz3X655ZYjg=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = NotificationsComponent;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user,\n    primary: state.userThemeReducer.primary\n  };\n}\n\nexport default connect(mapStateToProps)(NotificationsComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationsComponent\");","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/NotificationsComponent.js"],"names":["React","useState","useEffect","Grid","List","ListItem","ListItemAvatar","ListItemText","Typography","IconButton","Icon","mdiCheckBold","mdiClose","connect","Backdrop","CircularProgress","useHistory","makeStyles","swal","axios","Avatar","Paper","GeoIcon","useStyles","root","marginTop","item","margin","list","maxWidth","NotificationsComponent","props","deletingNotification","setDeletingNotification","history","classes","mainUser","push","method","url","uniqueUserId","then","response","dispatch","type","payload","data","user","profileTheme","catch","err","console","log","message","goBack","utcToDateString","utc","date","Date","months","month","getMonth","day","getDate","year","getFullYear","deleteNotification","uniqueNotificationId","link","JSON","stringify","headers","Error","acceptRejectFollow","followerUsername","followerUniqueUserId","accept","username","acceptRejectJoinRequest","community","acceptReject","name","moderatorUniqueUserId","moderatorUsername","notifications","length","map","notification","index","cursor","marginBottom","e","uniqueSenderId","sender","msg","color","toString","textAlign","mapStateToProps","state","userReducer","primary","userThemeReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiCheckBold, mdiClose } from '@mdi/js';\nimport { connect } from 'react-redux';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Paper from '@material-ui/core/Paper';\nimport GeoIcon from '../site-icons/geoicon2.png';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        marginTop: 100,\n    },\n    item: {\n        margin: 'auto',\n    },\n    list: {\n        margin: 'auto',\n        maxWidth: 700,\n    },\n}));\n\nfunction NotificationsComponent(props) {\n    const [deletingNotification, setDeletingNotification] = useState(false); //Backdrop when we want to delete notification.\n    const history = useHistory();\n    const classes = useStyles();\n    \n    useEffect(() => {\n        if(props.mainUser === null) {\n            history.push('/');\n        }\n        else {\n            return axios({\n                method: 'GET',\n                url: `http://192.168.0.17:3001/api/grab/user/${props.mainUser.uniqueUserId}`\n            }).then(response => {\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\n                props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error gathering your notifications! Please try again',\n                    'error',\n                );\n                history.goBack(1);\n            });\n        }\n    }, []);\n\n    function utcToDateString(utc) {\n        let date = new Date(utc);\n        let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n        let month = months[date.getMonth()];\n        let day = date.getDate();\n        let year = date.getFullYear();\n        return month + ' ' + day + ', ' + year;\n    }\n\n    function deleteNotification(uniqueNotificationId, link) {\n        setDeletingNotification(true);\n        let data = JSON.stringify({\n            uniqueUserId: props.mainUser.uniqueUserId,\n            uniqueNotificationId: uniqueNotificationId,\n            link: link,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'http://192.168.0.17:3001/api/delete/notification',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            setDeletingNotification(false);\n            props.dispatch({type: 'user/updateUser', payload: response.data.user});\n            swal(\n                'Great!',\n                'Notification successfully deleted!',\n                'success',\n            );\n            if(response.data.link !== '') {\n                history.push(response.data.link);\n            }\n        }).catch(err => {\n            setDeletingNotification(false);\n            throw new Error(err);\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error deleting that notification!',\n                'error',\n            );\n        });\n    }\n\n    function acceptRejectFollow(followerUsername, followerUniqueUserId, uniqueNotificationId, accept) {\n        setDeletingNotification(true);\n        let data = JSON.stringify({\n            followerUsername: followerUsername,\n            followerUniqueUserId: followerUniqueUserId,\n            uniqueNotificationId: uniqueNotificationId,\n            accept: accept,\n            username: props.mainUser.username,\n            uniqueUserId: props.mainUser.uniqueUserId,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'http://192.168.0.17:3001/api/follow/request/choice',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            props.dispatch({type: 'user/updateUser', payload: response.data.user});\n            if(response.data.accept === true) {\n                swal(\n                    'Great!',\n                    'Successfully accepted that follow request!',\n                    'success',\n                );\n                setDeletingNotification(false);\n            }\n            else {\n                swal(\n                    'Great!',\n                    'Successfully rejected that follow request!',\n                    'success',\n                );\n                setDeletingNotification(false);\n            }\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error accepting or rejecting that follow request!',\n                'error',\n            );\n            setDeletingNotification(false);\n        });\n    }\n\n    function acceptRejectJoinRequest(username, uniqueUserId, community, uniqueNotificationId, acceptReject) {\n        //This function will handle acception or rejecting a community join request. \n        setDeletingNotification(true);\n        let data = JSON.stringify({\n            uniqueUserId: uniqueUserId,\n            username: username,\n            name: community,\n            uniqueNotificationId: uniqueNotificationId,\n            acceptReject: acceptReject,\n            moderatorUniqueUserId: props.mainUser.uniqueUserId,\n            moderatorUsername: props.mainUser.username,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'http://192.168.0.17:3001/api/accept/reject/community/join',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            if(response.data.acceptReject === true) {\n                swal(\n                    'Great!',\n                    'Successfully accepted that community join request!',\n                    'success',\n                );\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\n                setDeletingNotification(false);\n            }\n            else if(response.data.acceptReject === false) {\n                swal(\n                    'Great!',\n                    'Successfully denied that community join request!',\n                    'success',\n                );\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\n                setDeletingNotification(false);\n            }\n            else {\n                swal(\n                    'Uh oh!',\n                    'There was an accepting or rejection that community join request!',\n                    'error',\n                );\n                setDeletingNotification(false);\n            }\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error accepting or rejection that community join request!',\n                'error',\n            );\n\n            setDeletingNotification(false);\n        });\n    }\n\n    if(props.mainUser !== null) {\n        return (\n            <Grid \n                container \n                className={classes.root}\n            >\n                <Backdrop \n                    open={deletingNotification} \n                >\n                    <CircularProgress \n                        color='primary' \n                    />\n                </Backdrop>\n                {props.mainUser.notifications.length > 0 &&\n                    <Grid \n                        item \n                        xs={12} \n                    >\n                        <List\n                            className={classes.list} \n                        >\n                            {props.mainUser.notifications.map((notification, index) => (\n                                <div \n                                    key={index.toString()} \n                                >\n                                    {notification.type === 'post comment' &&\n                                        <Paper\n                                            elevation={3}\n                                        >\n                                            <ListItem \n                                                style={{\n                                                    cursor: 'pointer',\n                                                    marginBottom: 20,\n                                                }}\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\n                                            >\n                                                <ListItemAvatar>\n                                                    <Avatar \n                                                        src={`http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\n                                                        alt={`${notification.sender}`}\n                                                        title={`${notification.sender}`}\n                                                    />\n                                                </ListItemAvatar>\n                                                <ListItemText \n                                                    primary={\n                                                        <Typography \n                                                            variant='h6' \n                                                            component='h6' \n                                                            align='center' \n                                                        >\n                                                            {utcToDateString(notification.date)}\n                                                        </Typography>\n                                                    }\n                                                    secondary={\n                                                        <Typography \n                                                            variant='body1' \n                                                            component='p' \n                                                            align='center' \n                                                        >\n                                                            {notification.msg}\n                                                        </Typography>\n                                                    }\n                                                />\n                                            </ListItem>\n                                        </Paper>\n                                    }\n                                    {notification.type === 'post like' &&\n                                        <Paper\n                                            elevation={3}\n                                        >\n                                            <ListItem \n                                                style={{\n                                                    cursor: 'pointer',\n                                                    marginBottom: 20,\n                                                }}\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\n                                            >\n                                                <ListItemAvatar>\n                                                    <Avatar \n                                                        src={`http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\n                                                        alt={`${notification.sender}`}\n                                                        title={`${notification.sender}`}\n                                                    />\n                                                </ListItemAvatar>\n                                                <ListItemText \n                                                    primary={\n                                                        <Typography \n                                                            variant='h6' \n                                                            component='h6' \n                                                            align='center' \n                                                        >\n                                                            {utcToDateString(notification.date)}\n                                                        </Typography>\n                                                    }\n                                                    secondary={\n                                                        <Typography \n                                                            variant='body1' \n                                                            component='p' \n                                                            align='center' \n                                                        >\n                                                            {notification.msg}\n                                                        </Typography>\n                                                    }\n                                                />\n                                            </ListItem>\n                                        </Paper>\n                                    }\n                                    {notification.type === 'join accepted' &&\n                                        <Paper\n                                            elevation={3}\n                                        >\n                                            <ListItem \n                                                style={{\n                                                    cursor: 'pointer',\n                                                    marginBottom: 20,\n                                                }}\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\n                                            >\n                                                <ListItemAvatar>\n                                                    <Avatar \n                                                        src={`http://192.168.0.17:3001/api/get/avatar/by/community/name/${notification.community}`}\n                                                        alt={`${notification.sender}`}\n                                                        title={`${notification.sender}`}\n                                                    />\n                                                </ListItemAvatar>\n                                                <ListItemText \n                                                    primary={\n                                                        <Typography \n                                                            variant='h6' \n                                                            component='h6' \n                                                            align='center' \n                                                        >\n                                                            {utcToDateString(notification.date)}\n                                                        </Typography>\n                                                    }\n                                                    secondary={\n                                                        <Typography \n                                                            variant='body1' \n                                                            component='p' \n                                                            align='center' \n                                                        >\n                                                            {notification.msg}\n                                                        </Typography>\n                                                    }\n                                                />\n                                            </ListItem>\n                                        </Paper>\n                                    }\n                                    {notification.type === 'new follower' &&\n                                        <Paper\n                                            elevation={3}\n                                        >\n                                            <ListItem \n                                                style={{\n                                                    cursor: 'pointer',\n                                                    marginBottom: 20,\n                                                }}\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\n                                            >\n                                                <ListItemAvatar>\n                                                    <Avatar \n                                                        src={`http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\n                                                        alt={`${notification.sender}`}\n                                                        title={`${notification.sender}`}\n                                                    />\n                                                </ListItemAvatar>\n                                                <ListItemText \n                                                    primary={\n                                                        <Typography \n                                                            variant='h6' \n                                                            component='h6' \n                                                            align='center' \n                                                        >\n                                                            {utcToDateString(notification.date)}\n                                                        </Typography>\n                                                    }\n                                                    secondary={\n                                                        <Typography \n                                                            variant='body1' \n                                                            component='p' \n                                                            align='center' \n                                                        >\n                                                            {notification.msg}\n                                                        </Typography>\n                                                    }\n                                                />\n                                            </ListItem>\n                                        </Paper>\n                                    }\n                                    {notification.type === 'comment like' &&\n                                        <Paper\n                                            elevation={3}\n                                        >\n                                            <ListItem \n                                                style={{\n                                                    cursor: 'pointer',\n                                                    marginBottom: 20,\n                                                }}\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\n                                            >\n                                                <ListItemAvatar>\n                                                    <Avatar \n                                                        src={`http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\n                                                        alt={`${notification.sender}`}\n                                                        title={`${notification.sender}`}\n                                                    />\n                                                </ListItemAvatar>\n                                                <ListItemText \n                                                    primary={\n                                                        <Typography \n                                                            variant='h6' \n                                                            component='h6' \n                                                            align='center' \n                                                        >\n                                                            {utcToDateString(notification.date)}\n                                                        </Typography>\n                                                    }\n                                                    secondary={\n                                                        <Typography \n                                                            variant='body1' \n                                                            component='p' \n                                                            align='center' \n                                                        >\n                                                            {notification.msg}\n                                                        </Typography>\n                                                    }\n                                                />\n                                            </ListItem>\n                                        </Paper>\n                                    }\n                                    {notification.type === 'follower request' &&\n                                        <Paper\n                                            elevation={3}\n                                            style={{\n                                                marginBottom: 20,\n                                            }}\n                                        >\n                                            <ListItem\n                                            >\n                                                <ListItemAvatar>\n                                                    <Avatar \n                                                        src={`http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\n                                                        alt={`${notification.sender}`}\n                                                        title={`${notification.sender}`}\n                                                        style={{\n                                                            cursor: 'pointer',\n                                                        }}\n                                                        onClick={e => history.push(`/geouser/${notification.uniqueSenderId}`)}\n                                                    />\n                                                </ListItemAvatar>\n                                                <ListItemText \n                                                    primary={\n                                                        <Typography \n                                                            variant='h6' \n                                                            component='h6' \n                                                            align='center' \n                                                        >\n                                                            {utcToDateString(notification.date)}\n                                                        </Typography>\n                                                    }\n                                                    secondary={\n                                                        <Typography \n                                                            variant='body1' \n                                                            component='p' \n                                                            align='center' \n                                                        >\n                                                            {notification.msg}\n                                                        </Typography>\n                                                    }\n                                                />\n                                            </ListItem>\n                                            <IconButton \n                                                style={{\n                                                    color: 'rgb(0, 128, 0)',\n                                                }}\n                                                aria-label='Accept follower request button'\n                                                disabled={deletingNotification}\n                                                onClick={e => acceptRejectFollow(notification.sender, notification.uniqueSenderId, notification.uniqueNotificationId, true)}\n                                            >\n                                                <Icon \n                                                    path={mdiCheckBold} \n                                                    size={1}\n                                                    title=\"Acccept follow request\" \n                                                    aria-label='Follow request accept icon' \n                                                />\n                                            </IconButton>\n                                            <IconButton \n                                                style={{\n                                                    color: 'rgb(255, 0, 0)'\n                                                }}\n                                                aria-label='Deny request button'\n                                                disabled={deletingNotification}\n                                                onClick={e => acceptRejectFollow(notification.sender, notification.uniqueSenderId, notification.uniqueNotificationId, false)}\n                                            >\n                                                <Icon \n                                                    path={mdiClose} \n                                                    size={1}\n                                                    title='Deny request icon'\n                                                    aria-label='Deny request icon' \n                                                />\n                                            </IconButton>\n                                        </Paper>  \n                                    }\n                                    {/* Below is the notification type for a \"community join request\" */}\n                                    {notification.type === 'community join request' &&\n                                        <Paper\n                                            elevation={3}\n                                            style={{\n                                                marginBottom: 20,\n                                            }}\n                                        >\n                                            <ListItem\n                                            >\n                                                <ListItemAvatar>\n                                                    <Avatar \n                                                        src={`http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\n                                                        alt={`${notification.sender}`}\n                                                        title={`${notification.sender}`}\n                                                        style={{\n                                                            cursor: 'pointer',\n                                                        }}\n                                                        onClick={e => history.push(`/geouser/${notification.uniqueSenderId}`)}\n                                                    />\n                                                </ListItemAvatar>\n                                                <ListItemText \n                                                    primary={\n                                                        <Typography \n                                                            variant='h6' \n                                                            component='h6' \n                                                            align='center' \n                                                        >\n                                                            {utcToDateString(notification.date)}\n                                                        </Typography>\n                                                    }\n                                                    secondary={\n                                                        <Typography \n                                                            variant='body1' \n                                                            component='p' \n                                                            align='center' \n                                                        >\n                                                            {notification.msg}\n                                                        </Typography>\n                                                    }\n                                                />\n                                            </ListItem>\n                                            <IconButton \n                                                style={{\n                                                    color: 'rgb(0, 128, 0)',\n                                                }}\n                                                aria-label='Accept communityJoin request button'\n                                                disabled={deletingNotification}\n                                                onClick={e => acceptRejectJoinRequest(notification.sender, notification.uniqueSenderId, notification.community, notification.uniqueNotificationId, true)}\n                                            >\n                                                <Icon \n                                                    path={mdiCheckBold} \n                                                    size={1}\n                                                    title=\"Acccept follow request\" \n                                                    aria-label='Follow request accept icon' \n                                                />\n                                            </IconButton>\n                                            <IconButton \n                                                style={{\n                                                    color: 'rgb(255, 0, 0)'\n                                                }}\n                                                aria-label='Deny request button'\n                                                disabled={deletingNotification}\n                                                onClick={e => acceptRejectJoinRequest(notification.sender, notification.uniqueSenderId, notification.community, notification.uniqueNotificationId, false)}\n                                            >\n                                                <Icon \n                                                    path={mdiClose} \n                                                    size={1}\n                                                    title='Deny request icon'\n                                                    aria-label='Deny request icon' \n                                                />\n                                            </IconButton>\n                                        </Paper> \n                                    }\n                                    {notification.type === 'welcome' && \n                                        <Paper \n                                            elevation={3} \n                                        >\n                                            <ListItem \n                                                style={{\n                                                    cursor: 'pointer',\n                                                    marginBottom: 20,\n                                                }}\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\n                                            >\n                                                <ListItemAvatar>\n                                                    <Avatar \n                                                        alt='GeoCities logo'\n                                                        title='GeoCities logo'\n                                                        src={GeoIcon}\n                                                    />\n                                                </ListItemAvatar>\n                                                <ListItemText \n                                                    secondary={\n                                                        <Typography \n                                                            variant='body1' \n                                                            component='p'\n                                                        >\n                                                            Welcome to GeoCities. We hope that you have fun building communites and connecting with others!\n                                                        </Typography>\n                                                    }\n                                                />\n                                            </ListItem>\n                                        </Paper>\n                                    }\n                                    {notification.type === 'accept follow request' &&\n                                        <Paper\n                                            elevation={3}\n                                        >\n                                            <ListItem \n                                                style={{\n                                                    cursor: 'pointer',\n                                                    marginBottom: 20,\n                                                }}\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\n                                            >\n                                                <ListItemAvatar>\n                                                    <Avatar \n                                                        src={`http://192.168.0.17:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\n                                                        alt={`${notification.sender}`}\n                                                        title={`${notification.sender}`}\n                                                    />\n                                                </ListItemAvatar>\n                                                <ListItemText \n                                                    primary={\n                                                        <Typography \n                                                            variant='h6' \n                                                            component='h6' \n                                                            align='center' \n                                                        >\n                                                            {utcToDateString(notification.date)}\n                                                        </Typography>\n                                                    }\n                                                    secondary={\n                                                        <Typography \n                                                            variant='body1' \n                                                            component='p' \n                                                            align='center' \n                                                        >\n                                                            {notification.msg}\n                                                        </Typography>\n                                                    }\n                                                />\n                                            </ListItem>\n                                        </Paper>\n                                    }\n                                </div>\n                            ))}\n                        </List>\n                    </Grid>\n                }\n                {props.mainUser.notifications.length < 1 &&\n                   <Grid \n                        item\n                        xs={12} \n                        style={{\n                            textAlign: 'center',\n                        }}\n                    >\n                         <Typography \n                            variant='h6' \n                            component='h6' \n                            align='center' \n                        >\n                            No Notifications\n                        </Typography>\n                    </Grid>\n                }\n            </Grid>\n        );\n    }\n    else {\n        return (\n            <Backdrop\n                open={true} \n            >\n                <CircularProgress color='primary' />\n            </Backdrop>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        mainUser: state.userReducer.user,\n        primary: state.userThemeReducer.primary,\n    };\n}\n\nexport default connect(mapStateToProps)(NotificationsComponent);"]},"metadata":{},"sourceType":"module"}