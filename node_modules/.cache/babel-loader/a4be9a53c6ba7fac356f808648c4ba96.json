{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\GeoUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport * as _ from 'underscore';\nimport swal from 'sweetalert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport Icon from '@mdi/react';\nimport { mdiCheckBold, mdiPencil, mdiClose, mdiCamera, mdiVideo, mdiTwitter, mdiInstagram, mdiYoutube } from '@mdi/js';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Divider from '@material-ui/core/Divider';\nimport Link from '@material-ui/core/Link';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction TabPanel(props) {\n  //This component will serve as the panel for each individual tab.\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: index !== value,\n    id: `tabpanel-${index}`,\n    \"aria-label\": `tab-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    style: {\n      marginTop: 100\n    },\n    children: value === index && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      style: {\n        textAlign: 'center'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.any.isRequired,\n  index: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`\n  };\n}\n\nfunction GeoUser(props) {\n  _s();\n\n  const [geoUser, setGeoUser] = useState(null);\n  const params = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    if (props.mainUser === null) {\n      //Call the API to get a public profile view for a user who is not logged in.\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/get/public/geo/user/${params.uniqueUserId}`\n      }).then(response => {\n        if (response.data.geoUser) {\n          //If we were able to get a user, set post and theme globally, and the local geoUser state.\n          props.dispatch({\n            type: 'visitorPosts/updatePosts',\n            payload: response.data.posts\n          });\n          props.dispatch({\n            type: 'ThemeChange',\n            payload: response.data.geoUser\n          });\n          setGeoUser(response.data.geoUser); //Set the local geoUser state variable.\n\n          console.log(response.data.geoUser);\n        } else {\n          swal('Uh Oh!', 'We could not find that user! Their profile might not exist.', 'error');\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error finding that user! Please try again.', 'error');\n      });\n    } else if (props.mainUser !== null) {\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/get/geo/user/${params.uniqueUserId}/${props.mainUser.uniqueUserId}`\n      }).then(response => {\n        if (response.data.geoUser && response.data.mainUser) {\n          if (response.data.geoUser.uniqueUserId === props.mainUser.uniqueUserId) {\n            history.push('/profile');\n          } else {\n            if (response.data.geoUser.blockList.includes(response.data.mainUser.uniqueUserId)) {\n              swal('Uh Oh!', 'This user has blocked you!', 'error');\n              history.goBack(1);\n            } else {\n              props.dispatch({\n                type: 'user/updateUser',\n                payload: response.data.mainUser\n              });\n              props.dispatch({\n                type: 'ThemeChange',\n                payload: response.data.geoUser.profileTheme\n              });\n              props.dispatch({\n                type: 'visitorPosts/updatePosts',\n                payload: response.data.posts\n              });\n              setGeoUser(response.data.geoUser);\n            }\n          }\n        } else {\n          swal('Uh Oh!', 'Could not find that GeoCities user!', 'error');\n          history.goBack(1);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error getting that users profile! Please try again.', 'error');\n        history.goBack(1);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [geoUser !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: geoUser.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }, this), geoUser === null && /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: true,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GeoUser, \"C7w3U9Kj+odUTzqKeiYOf0V8QUo=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c2 = GeoUser;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user,\n    primary: state.userThemeReducer.primary,\n    posts: state.visitorPostsReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(GeoUser);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"GeoUser\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/GeoUser.js"],"names":["React","useState","useEffect","useLayoutEffect","useRef","useHistory","useParams","Grid","Avatar","Typography","Button","Tabs","Tab","Dialog","DialogContent","AppBar","Toolbar","connect","axios","_","swal","makeStyles","Hidden","Icon","mdiCheckBold","mdiPencil","mdiClose","mdiCamera","mdiVideo","mdiTwitter","mdiInstagram","mdiYoutube","Paper","PropTypes","ListItem","ListItemText","ListItemIcon","Divider","Link","Backdrop","CircularProgress","TabPanel","props","children","value","index","other","marginTop","textAlign","propTypes","node","any","isRequired","a11yProps","id","GeoUser","geoUser","setGeoUser","params","history","mainUser","method","url","uniqueUserId","then","response","data","dispatch","type","payload","posts","console","log","catch","err","message","push","blockList","includes","goBack","profileTheme","username","mapStateToProps","state","userReducer","user","primary","userThemeReducer","visitorPostsReducer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,eAArC,EAAsDC,MAAtD,QAAoE,OAApE;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,CAAZ,MAAmB,YAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,QAAlC,EAA4CC,SAA5C,EAAuDC,QAAvD,EAAiEC,UAAjE,EAA6EC,YAA7E,EAA2FC,UAA3F,QAA6G,SAA7G;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0B,OAAGC;AAA7B,MAAuCJ,KAA7C;AAEA,sBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,MAAM,EAAEG,KAAK,KAAKD,KAFtB;AAGI,IAAA,EAAE,EAAG,YAAWC,KAAM,EAH1B;AAII,kBAAa,OAAMA,KAAM,EAJ7B;AAKI,uBAAkB,OAAMA,KAAM,EALlC;AAAA,OAMQC,KANR;AAOI,IAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAE;AADR,KAPX;AAAA,cAWKH,KAAK,KAAKC,KAAV,iBACG,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,MAFN;AAGI,MAAA,KAAK,EAAE;AACHG,QAAAA,SAAS,EAAE;AADR,OAHX;AAAA,gBAOKL;AAPL;AAAA;AAAA;AAAA;AAAA;AAZR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;KA7BQF,Q;AA+BTA,QAAQ,CAACQ,SAAT,GAAqB;AACjBN,EAAAA,QAAQ,EAAEV,SAAS,CAACiB,IADH;AAEjBN,EAAAA,KAAK,EAAEX,SAAS,CAACkB,GAAV,CAAcC,UAFJ;AAGjBP,EAAAA,KAAK,EAAEZ,SAAS,CAACkB,GAAV,CAAcC;AAHJ,CAArB;;AAMA,SAASC,SAAT,CAAmBR,KAAnB,EAA0B;AACtB,SAAO;AACHS,IAAAA,EAAE,EAAG,OAAMT,KAAM,EADd;AAEH,qBAAkB,YAAWA,KAAM;AAFhC,GAAP;AAIH;;AAED,SAASU,OAAT,CAAiBb,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBxD,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMyD,MAAM,GAAGpD,SAAS,EAAxB;AACA,QAAMqD,OAAO,GAAGtD,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGwC,KAAK,CAACkB,QAAN,KAAmB,IAAtB,EAA4B;AACxB;AACA,aAAO1C,KAAK,CAAC;AACT2C,QAAAA,MAAM,EAAE,KADC;AAETC,QAAAA,GAAG,EAAG,mDAAkDJ,MAAM,CAACK,YAAa;AAFnE,OAAD,CAAL,CAGJC,IAHI,CAGCC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,IAAT,CAAcV,OAAjB,EAA0B;AACtB;AACAd,UAAAA,KAAK,CAACyB,QAAN,CAAe;AAACC,YAAAA,IAAI,EAAE,0BAAP;AAAmCC,YAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcI;AAA1D,WAAf;AACA5B,UAAAA,KAAK,CAACyB,QAAN,CAAe;AAACC,YAAAA,IAAI,EAAE,aAAP;AAAsBC,YAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcV;AAA7C,WAAf;AACAC,UAAAA,UAAU,CAACQ,QAAQ,CAACC,IAAT,CAAcV,OAAf,CAAV,CAJsB,CAIa;;AACnCe,UAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACC,IAAT,CAAcV,OAA1B;AACH,SAND,MAOK;AACDpC,UAAAA,IAAI,CACA,QADA,EAEA,6DAFA,EAGA,OAHA,CAAJ;AAOH;AACJ,OApBM,EAoBJqD,KApBI,CAoBEC,GAAG,IAAI;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,OAAhB;AACAvD,QAAAA,IAAI,CACA,QADA,EAEA,yDAFA,EAGA,OAHA,CAAJ;AAKH,OA3BM,CAAP;AA4BH,KA9BD,MA+BK,IAAGsB,KAAK,CAACkB,QAAN,KAAmB,IAAtB,EAA4B;AAC7B,aAAO1C,KAAK,CAAC;AACT2C,QAAAA,MAAM,EAAE,KADC;AAETC,QAAAA,GAAG,EAAG,4CAA2CJ,MAAM,CAACK,YAAa,IAAGrB,KAAK,CAACkB,QAAN,CAAeG,YAAa;AAF3F,OAAD,CAAL,CAGJC,IAHI,CAGCC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,IAAT,CAAcV,OAAd,IAAyBS,QAAQ,CAACC,IAAT,CAAcN,QAA1C,EAAoD;AAChD,cAAGK,QAAQ,CAACC,IAAT,CAAcV,OAAd,CAAsBO,YAAtB,KAAuCrB,KAAK,CAACkB,QAAN,CAAeG,YAAzD,EAAuE;AACnEJ,YAAAA,OAAO,CAACiB,IAAR,CAAa,UAAb;AACH,WAFD,MAGK;AACD,gBAAGX,QAAQ,CAACC,IAAT,CAAcV,OAAd,CAAsBqB,SAAtB,CAAgCC,QAAhC,CAAyCb,QAAQ,CAACC,IAAT,CAAcN,QAAd,CAAuBG,YAAhE,CAAH,EAAkF;AAC9E3C,cAAAA,IAAI,CACA,QADA,EAEA,4BAFA,EAGA,OAHA,CAAJ;AAKAuC,cAAAA,OAAO,CAACoB,MAAR,CAAe,CAAf;AACH,aAPD,MAQK;AACDrC,cAAAA,KAAK,CAACyB,QAAN,CAAe;AAACC,gBAAAA,IAAI,EAAE,iBAAP;AAA0BC,gBAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcN;AAAjD,eAAf;AACAlB,cAAAA,KAAK,CAACyB,QAAN,CAAe;AAACC,gBAAAA,IAAI,EAAE,aAAP;AAAsBC,gBAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcV,OAAd,CAAsBwB;AAArD,eAAf;AACAtC,cAAAA,KAAK,CAACyB,QAAN,CAAe;AAACC,gBAAAA,IAAI,EAAE,0BAAP;AAAmCC,gBAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcI;AAA1D,eAAf;AACAb,cAAAA,UAAU,CAACQ,QAAQ,CAACC,IAAT,CAAcV,OAAf,CAAV;AACH;AACJ;AACJ,SApBD,MAqBK;AACDpC,UAAAA,IAAI,CACA,QADA,EAEA,qCAFA,EAGA,OAHA,CAAJ;AAKAuC,UAAAA,OAAO,CAACoB,MAAR,CAAe,CAAf;AACH;AACJ,OAjCM,EAiCJN,KAjCI,CAiCEC,GAAG,IAAI;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,OAAhB;AACAvD,QAAAA,IAAI,CACA,QADA,EAEA,kEAFA,EAGA,OAHA,CAAJ;AAKAuC,QAAAA,OAAO,CAACoB,MAAR,CAAe,CAAf;AACH,OAzCM,CAAP;AA0CH;AACJ,GA5EQ,EA4EN,EA5EM,CAAT;AA8EA,sBACI;AAAA,eACKvB,OAAO,KAAK,IAAZ,iBACG;AAAA,gBACKA,OAAO,CAACyB;AADb;AAAA;AAAA;AAAA;AAAA,YAFR,EAOKzB,OAAO,KAAK,IAAZ,iBACG,QAAC,QAAD;AACI,MAAA,IAAI,EAAE,IADV;AAAA,6BAGI,QAAC,gBAAD;AACI,QAAA,KAAK,EAAC;AADV;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YARR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAtGQD,O;UAEUjD,S,EACCD,U;;;MAHXkD,O;;AA0GT,SAAS2B,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHvB,IAAAA,QAAQ,EAAEuB,KAAK,CAACC,WAAN,CAAkBC,IADzB;AAEHC,IAAAA,OAAO,EAAEH,KAAK,CAACI,gBAAN,CAAuBD,OAF7B;AAGHhB,IAAAA,KAAK,EAAEa,KAAK,CAACK,mBAAN,CAA0BlB;AAH9B,GAAP;AAKH;;AAED,eAAerD,OAAO,CAACiE,eAAD,CAAP,CAAyB3B,OAAzB,CAAf","sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef}  from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport * as _ from 'underscore';\r\nimport swal from 'sweetalert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Icon from '@mdi/react';\r\nimport { mdiCheckBold, mdiPencil, mdiClose, mdiCamera, mdiVideo, mdiTwitter, mdiInstagram, mdiYoutube } from '@mdi/js';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Link from '@material-ui/core/Link';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction TabPanel(props) {\r\n    //This component will serve as the panel for each individual tab.\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div \r\n            role='tabpanel'\r\n            hidden={index !== value} \r\n            id={`tabpanel-${index}`}\r\n            aria-label={`tab-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n            style={{\r\n                marginTop: 100,\r\n            }}\r\n        >\r\n            {value === index &&\r\n                <Grid \r\n                    item \r\n                    xs\r\n                    style={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    {children}\r\n                </Grid>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    value: PropTypes.any.isRequired,\r\n    index: PropTypes.any.isRequired,\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `tab-${index}`,\r\n        'aria-controls': `tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction GeoUser(props) {\r\n    const [geoUser, setGeoUser] = useState(null);\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(props.mainUser === null) {\r\n            //Call the API to get a public profile view for a user who is not logged in.\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/get/public/geo/user/${params.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.geoUser) {\r\n                    //If we were able to get a user, set post and theme globally, and the local geoUser state.\r\n                    props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.geoUser});\r\n                    setGeoUser(response.data.geoUser); //Set the local geoUser state variable.\r\n                    console.log(response.data.geoUser);\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find that user! Their profile might not exist.',\r\n                        'error',\r\n                    );\r\n\r\n                    \r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error finding that user! Please try again.',\r\n                    'error',\r\n                );\r\n            });\r\n        }\r\n        else if(props.mainUser !== null) {\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/get/geo/user/${params.uniqueUserId}/${props.mainUser.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.geoUser && response.data.mainUser) {\r\n                    if(response.data.geoUser.uniqueUserId === props.mainUser.uniqueUserId) {\r\n                        history.push('/profile');\r\n                    }\r\n                    else {\r\n                        if(response.data.geoUser.blockList.includes(response.data.mainUser.uniqueUserId)) {\r\n                            swal(\r\n                                'Uh Oh!',\r\n                                'This user has blocked you!',\r\n                                'error',\r\n                            );\r\n                            history.goBack(1);\r\n                        }\r\n                        else {\r\n                            props.dispatch({type: 'user/updateUser', payload: response.data.mainUser});\r\n                            props.dispatch({type: 'ThemeChange', payload: response.data.geoUser.profileTheme});\r\n                            props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\r\n                            setGeoUser(response.data.geoUser);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'Could not find that GeoCities user!',\r\n                        'error',\r\n                    );\r\n                    history.goBack(1);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error getting that users profile! Please try again.',\r\n                    'error',\r\n                );\r\n                history.goBack(1);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {geoUser !== null &&\r\n                <p>\r\n                    {geoUser.username}\r\n                </p>\r\n\r\n            }\r\n            {geoUser === null &&\r\n                <Backdrop \r\n                    open={true} \r\n                >\r\n                    <CircularProgress \r\n                        color='primary' \r\n                    />\r\n                </Backdrop>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n        posts: state.visitorPostsReducer.posts,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GeoUser);"]},"metadata":{},"sourceType":"module"}