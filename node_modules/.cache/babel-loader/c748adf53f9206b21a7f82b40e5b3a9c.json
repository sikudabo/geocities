{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\TextPostCardP.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@mdi/react';\nimport { mdiThumbUp, mdiThumbUpOutline, mdiComment, mdiCommentOutline, mdiDelete, mdiChevronDown, mdiChevronUp } from '@mdi/js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Divider from '@material-ui/core/Divider';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as _ from 'underscore';\nconst useStyles = makeStyles(() => ({\n  card: {\n    maxWidth: 600,\n    margin: 'auto'\n  },\n  media: {\n    height: 0,\n    padding: '56.25%'\n  }\n}));\n\nfunction TextPostCardP(props) {\n  _s();\n\n  const classes = useStyles();\n  const [expand, setExpand] = useState(false); //Expansion variable and setter for comments in Collapse\n\n  const [commentVal, setCommentVal] = useState(''); //This will hold the value of a comment a user posts on a post.\n\n  const [commentSending, setCommentSending] = useState(false); //This will disable the send button if a comment is sending\n\n  function timeDifference(date2, dateString) {\n    //This function will return whether or not we display something like \"2 hrs ago\" \"20 min ago\" or the date string for a post\n    let date1 = Date.now();\n    let difference = date1 - date2;\n    let daysDifference = Math.floor(difference / 1000 / 60 / 60 / 24);\n    let hoursDifference = Math.floor(difference / 1000 / 60 / 60);\n    let minutesDifference = Math.floor(difference / 1000 / 60);\n    let secondsDifference = Math.floor(difference / 1000);\n\n    if (daysDifference > 0) {\n      return dateString;\n    } else if (hoursDifference > 0 && hoursDifference < 23) {\n      return `${hoursDifference} hr ago`;\n    } else if (minutesDifference > 0 && minutesDifference < 60) {\n      return `${minutesDifference} min ago`;\n    } else if (minutesDifference === 0) {\n      return `${secondsDifference} secs ago`;\n    } else {\n      return dateString;\n    }\n  }\n\n  function sendComment() {\n    //This function will handle sending a comment \n    setCommentSending(true);\n\n    if (!commentVal) {\n      swal('Uh Oh', 'You must enter some text to send a comment!', 'error');\n      setCommentSending(false);\n    } else {\n      let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n      let myDate = new Date();\n      let month = months[myDate.getMonth()];\n      let day = myDate.getDate();\n      let year = myDate.getFullYear();\n      let dateString = `${month} ${day}, ${year}`;\n      let data = JSON.stringify({\n        uniqueCommentId: Date.now() + props.mainUser.uniqueUserId + props.post.uniquePostId,\n        uniqueUserId: props.mainUser.uniqueUserId,\n        username: props.mainUser.username,\n        dateString: dateString,\n        text: commentVal,\n        receiver: props.post.uniqueUserId,\n        uniquePostId: props.post.uniquePostId\n      });\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.9:3001/api/add/comment',\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.data.comments) {\n          swal('Great!', 'Comment successfully added', 'success');\n          props.post.comments = response.data.comments;\n          setCommentSending(false);\n          setCommentVal('');\n        } else {\n          swal('Uh Oh!', 'There was an error sending that comment! Please try again.', 'error');\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error sending that comment! Please try again.', 'error');\n        setCommentSending(false);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    id: props.post.uniquePostId,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        children: props.user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this),\n      subheader: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        component: \"span\",\n        color: \"textSecondary\",\n        children: timeDifference(props.post.utcTime, props.post.dateString)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this),\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: props.post.context === 'personal' ? `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}` : 'path to community photo upload',\n        title: props.user.username,\n        alt: props.user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: props.post.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: props.post.likes.includes(props.mainUser.uniqueUserId) ? mdiThumbUp : mdiThumbUpOutline,\n          size: 1,\n          \"aria-label\": \"Like Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.post.likes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.post.likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: _.find(props.post.comments, comment => comment.uniqueUserId === props.mainUser.uniqueUserId) ? mdiComment : mdiCommentOutline,\n          size: 1,\n          \"aria-label\": \"Comment Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.post.comments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.post.comments.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.post.uniqueUserId === props.user.uniqueUserId && /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"Delete post button\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            path: mdiDelete,\n            size: 1,\n            \"aria-label\": \"Delete Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          marginLeft: 'auto'\n        },\n        onClick: () => setExpand(!expand),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          path: expand ? mdiChevronUp : mdiChevronDown,\n          size: 1,\n          \"aria-label\": expand ? 'Close comments' : 'Expand comments'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: expand,\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [props.mainUser !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Comment\",\n            placeholder: \"Comment...\",\n            value: commentVal,\n            onChange: e => setCommentVal(e.target.value),\n            rows: 3,\n            color: \"primary\",\n            variant: \"outlined\",\n            rows: 4,\n            multiline: true,\n            fullWidth: true,\n            disabled: commentSending\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            style: {\n              marginTop: 20\n            },\n            disabled: commentSending,\n            onClick: sendComment,\n            children: commentSending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 51\n            }, this) : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: props.post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              id: comment.uniqueCommentId,\n              alignItems: \"start\",\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: `http://192.168.0.9:3001/api/get/avatar/by/id/${comment.uniqueUserId}`,\n                  alt: `${comment.username}`,\n                  title: `${comment.username}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    children: comment.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    component: \"small\",\n                    color: \"textSecondary\",\n                    children: timeDifference(comment.utcTime, comment.dateString)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 45\n                }, this),\n                secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"p\",\n                  children: comment.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 33\n            }, this), index < props.post.comments.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TextPostCardP, \"Rdx74+rq9GxJppO586oJAQjdV9A=\", false, function () {\n  return [useStyles];\n});\n\n_c = TextPostCardP;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user\n  };\n}\n\nexport default connect(mapStateToProps)(TextPostCardP);\n\nvar _c;\n\n$RefreshReg$(_c, \"TextPostCardP\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/TextPostCardP.js"],"names":["React","useState","Card","CardHeader","CardMedia","CardContent","CardActions","IconButton","Collapse","Avatar","Typography","Icon","mdiThumbUp","mdiThumbUpOutline","mdiComment","mdiCommentOutline","mdiDelete","mdiChevronDown","mdiChevronUp","makeStyles","TextField","Button","CircularProgress","Divider","connect","useHistory","swal","axios","List","ListItem","ListItemAvatar","ListItemText","_","useStyles","card","maxWidth","margin","media","height","padding","TextPostCardP","props","classes","expand","setExpand","commentVal","setCommentVal","commentSending","setCommentSending","timeDifference","date2","dateString","date1","Date","now","difference","daysDifference","Math","floor","hoursDifference","minutesDifference","secondsDifference","sendComment","months","myDate","month","getMonth","day","getDate","year","getFullYear","data","JSON","stringify","uniqueCommentId","mainUser","uniqueUserId","post","uniquePostId","username","text","receiver","method","url","headers","then","response","comments","catch","err","console","log","message","user","utcTime","context","avatar","likes","includes","length","find","comment","marginLeft","e","target","value","marginTop","map","index","mapStateToProps","state","userReducer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,UAAT,EAAqBC,iBAArB,EAAwCC,UAAxC,EAAoDC,iBAApD,EAAuEC,SAAvE,EAAkFC,cAAlF,EAAkGC,YAAlG,QAAsH,SAAtH;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,KAAKC,CAAZ,MAAmB,YAAnB;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAAC,OAAO;AAChCe,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,GADR;AAEFC,IAAAA,MAAM,EAAE;AAFN,GAD0B;AAKhCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,CADL;AAEHC,IAAAA,OAAO,EAAE;AAFN;AALyB,CAAP,CAAD,CAA5B;;AAWA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsB3C,QAAQ,CAAC,KAAD,CAApC,CAF0B,CAEmB;;AAC7C,QAAM,CAAC4C,UAAD,EAAaC,aAAb,IAA8B7C,QAAQ,CAAC,EAAD,CAA5C,CAH0B,CAGwB;;AAClD,QAAM,CAAC8C,cAAD,EAAiBC,iBAAjB,IAAsC/C,QAAQ,CAAC,KAAD,CAApD,CAJ0B,CAImC;;AAE7D,WAASgD,cAAT,CAAwBC,KAAxB,EAA+BC,UAA/B,EAA2C;AACvC;AACA,QAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAZ;AACA,QAAIC,UAAU,GAAGH,KAAK,GAAGF,KAAzB;AACA,QAAIM,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWH,UAAU,GAAC,IAAX,GAAgB,EAAhB,GAAmB,EAAnB,GAAsB,EAAjC,CAArB;AACA,QAAII,eAAe,GAAGF,IAAI,CAACC,KAAL,CAAWH,UAAU,GAAC,IAAX,GAAgB,EAAhB,GAAmB,EAA9B,CAAtB;AACA,QAAIK,iBAAiB,GAAGH,IAAI,CAACC,KAAL,CAAWH,UAAU,GAAC,IAAX,GAAgB,EAA3B,CAAxB;AACA,QAAIM,iBAAiB,GAAGJ,IAAI,CAACC,KAAL,CAAWH,UAAU,GAAC,IAAtB,CAAxB;;AACA,QAAGC,cAAc,GAAG,CAApB,EAAuB;AACnB,aAAOL,UAAP;AACH,KAFD,MAGK,IAAGQ,eAAe,GAAG,CAAlB,IAAuBA,eAAe,GAAG,EAA5C,EAAgD;AACjD,aAAQ,GAAEA,eAAgB,SAA1B;AACH,KAFI,MAGA,IAAGC,iBAAiB,GAAG,CAApB,IAAyBA,iBAAiB,GAAG,EAAhD,EAAoD;AACrD,aAAQ,GAAEA,iBAAkB,UAA5B;AACH,KAFI,MAGA,IAAGA,iBAAiB,KAAK,CAAzB,EAA4B;AAC7B,aAAQ,GAAEC,iBAAkB,WAA5B;AACH,KAFI,MAGA;AACD,aAAOV,UAAP;AACH;AACJ;;AAED,WAASW,WAAT,GAAuB;AACnB;AACAd,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;;AAEA,QAAG,CAACH,UAAJ,EAAgB;AACZnB,MAAAA,IAAI,CACA,OADA,EAEA,6CAFA,EAGA,OAHA,CAAJ;AAKAsB,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KAPD,MAQK;AACD,UAAIe,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,MAAzD,EAAiE,KAAjE,EAAwE,KAAxE,EAA+E,KAA/E,CAAb;AACA,UAAIC,MAAM,GAAG,IAAIX,IAAJ,EAAb;AACA,UAAIY,KAAK,GAAGF,MAAM,CAACC,MAAM,CAACE,QAAP,EAAD,CAAlB;AACA,UAAIC,GAAG,GAAGH,MAAM,CAACI,OAAP,EAAV;AACA,UAAIC,IAAI,GAAGL,MAAM,CAACM,WAAP,EAAX;AACA,UAAInB,UAAU,GAAI,GAAEc,KAAM,IAAGE,GAAI,KAAIE,IAAK,EAA1C;AACA,UAAIE,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACtBC,QAAAA,eAAe,EAAErB,IAAI,CAACC,GAAL,KAAab,KAAK,CAACkC,QAAN,CAAeC,YAA5B,GAA2CnC,KAAK,CAACoC,IAAN,CAAWC,YADjD;AAEtBF,QAAAA,YAAY,EAAEnC,KAAK,CAACkC,QAAN,CAAeC,YAFP;AAGtBG,QAAAA,QAAQ,EAAEtC,KAAK,CAACkC,QAAN,CAAeI,QAHH;AAItB5B,QAAAA,UAAU,EAAEA,UAJU;AAKtB6B,QAAAA,IAAI,EAAEnC,UALgB;AAMtBoC,QAAAA,QAAQ,EAAExC,KAAK,CAACoC,IAAN,CAAWD,YANC;AAOtBE,QAAAA,YAAY,EAAErC,KAAK,CAACoC,IAAN,CAAWC;AAPH,OAAf,CAAX;AAUA,aAAOnD,KAAK,CAAC;AACTuD,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,GAAG,EAAE,yCAFI;AAGTZ,QAAAA,IAAI,EAAEA,IAHG;AAITa,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAJA,OAAD,CAAL,CAOJC,IAPI,CAOCC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACf,IAAT,CAAcgB,QAAjB,EAA2B;AACvB7D,UAAAA,IAAI,CACA,QADA,EAEA,4BAFA,EAGA,SAHA,CAAJ;AAKAe,UAAAA,KAAK,CAACoC,IAAN,CAAWU,QAAX,GAAsBD,QAAQ,CAACf,IAAT,CAAcgB,QAApC;AACAvC,UAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAF,UAAAA,aAAa,CAAC,EAAD,CAAb;AACH,SATD,MAUK;AACDpB,UAAAA,IAAI,CACA,QADA,EAEA,4DAFA,EAGA,OAHA,CAAJ;AAKH;AACJ,OAzBM,EAyBJ8D,KAzBI,CAyBEC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACAlE,QAAAA,IAAI,CACA,QADA,EAEA,4DAFA,EAGA,OAHA,CAAJ;AAKAsB,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,OAjCM,CAAP;AAkCH;AACJ;;AAED,sBACI,QAAC,IAAD;AACI,IAAA,SAAS,EAAEN,OAAO,CAACR,IADvB;AAEI,IAAA,EAAE,EAAEO,KAAK,CAACoC,IAAN,CAAWC,YAFnB;AAAA,4BAII,QAAC,UAAD;AACI,MAAA,KAAK,eACD,QAAC,UAAD;AACI,QAAA,OAAO,EAAC,IADZ;AAEI,QAAA,SAAS,EAAC,IAFd;AAAA,kBAIKrC,KAAK,CAACoD,IAAN,CAAWd;AAJhB;AAAA;AAAA;AAAA;AAAA,cAFR;AASI,MAAA,SAAS,eACL,QAAC,UAAD;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,SAAS,EAAC,MAFd;AAGI,QAAA,KAAK,EAAC,eAHV;AAAA,kBAKK9B,cAAc,CAACR,KAAK,CAACoC,IAAN,CAAWiB,OAAZ,EAAqBrD,KAAK,CAACoC,IAAN,CAAW1B,UAAhC;AALnB;AAAA;AAAA;AAAA;AAAA,cAVR;AAkBI,MAAA,MAAM,eACF,QAAC,MAAD;AACI,QAAA,GAAG,EAAEV,KAAK,CAACoC,IAAN,CAAWkB,OAAX,KAAuB,UAAvB,GAAqC,yCAAwCtD,KAAK,CAACoD,IAAN,CAAWG,MAAO,EAA/F,GAAmG,gCAD5G;AAEI,QAAA,KAAK,EAAEvD,KAAK,CAACoD,IAAN,CAAWd,QAFtB;AAGI,QAAA,GAAG,EAAEtC,KAAK,CAACoD,IAAN,CAAWd;AAHpB;AAAA;AAAA;AAAA;AAAA;AAnBR;AAAA;AAAA;AAAA;AAAA,YAJJ,eA8BI,QAAC,WAAD;AAAA,gBACKtC,KAAK,CAACoC,IAAN,CAAWG;AADhB;AAAA;AAAA;AAAA;AAAA,YA9BJ,eAiCI,QAAC,WAAD;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,KAAK,EAAC,SADV;AAAA,gCAGI,QAAC,IAAD;AACI,UAAA,IAAI,EAAEvC,KAAK,CAACoC,IAAN,CAAWoB,KAAX,CAAiBC,QAAjB,CAA0BzD,KAAK,CAACkC,QAAN,CAAeC,YAAzC,IAAyDhE,UAAzD,GAAsEC,iBADhF;AAEI,UAAA,IAAI,EAAE,CAFV;AAGI,wBAAW;AAHf;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAQI;AAAA,oBACK4B,KAAK,CAACoC,IAAN,CAAWoB,KAAX,CAAiBE,MAAjB,GAA0B,CAA1B,iBACG;AAAA,sBACK1D,KAAK,CAACoC,IAAN,CAAWoB,KAAX,CAAiBE;AADtB;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAiBI,QAAC,UAAD;AACI,QAAA,KAAK,EAAC,SADV;AAAA,gCAGI,QAAC,IAAD;AACI,UAAA,IAAI,EAAEnE,CAAC,CAACoE,IAAF,CAAO3D,KAAK,CAACoC,IAAN,CAAWU,QAAlB,EAA4Bc,OAAO,IAAIA,OAAO,CAACzB,YAAR,KAAyBnC,KAAK,CAACkC,QAAN,CAAeC,YAA/E,IAA+F9D,UAA/F,GAA4GC,iBADtH;AAEI,UAAA,IAAI,EAAE,CAFV;AAGI,wBAAW;AAHf;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAQI;AAAA,oBACK0B,KAAK,CAACoC,IAAN,CAAWU,QAAX,CAAoBY,MAApB,GAA6B,CAA7B,iBACG;AAAA,sBACK1D,KAAK,CAACoC,IAAN,CAAWU,QAAX,CAAoBY;AADzB;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAiCI;AAAA,kBACK1D,KAAK,CAACoC,IAAN,CAAWD,YAAX,KAA4BnC,KAAK,CAACoD,IAAN,CAAWjB,YAAvC,iBACG,QAAC,UAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,wBAAW,oBAFf;AAAA,iCAII,QAAC,IAAD;AACI,YAAA,IAAI,EAAE5D,SADV;AAEI,YAAA,IAAI,EAAE,CAFV;AAGI,0BAAW;AAHf;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cAjCJ,eA+CI,QAAC,UAAD;AACI,QAAA,KAAK,EAAE;AACHsF,UAAAA,UAAU,EAAE;AADT,SADX;AAII,QAAA,OAAO,EAAE,MAAM1D,SAAS,CAAC,CAACD,MAAF,CAJ5B;AAAA,+BAMI,QAAC,IAAD;AACI,UAAA,IAAI,EAAEA,MAAM,GAAGzB,YAAH,GAAkBD,cADlC;AAEI,UAAA,IAAI,EAAE,CAFV;AAGI,wBAAY0B,MAAM,GAAG,gBAAH,GAAsB;AAH5C;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCJ,eA6FI,QAAC,QAAD;AACI,MAAA,EAAE,EAAEA,MADR;AAAA,8BAGI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,WAAD;AAAA,mBACKF,KAAK,CAACkC,QAAN,KAAmB,IAAnB,iBACG;AAAA,kCACI,QAAC,SAAD;AACI,YAAA,KAAK,EAAC,SADV;AAEI,YAAA,WAAW,EAAC,YAFhB;AAGI,YAAA,KAAK,EAAE9B,UAHX;AAII,YAAA,QAAQ,EAAE0D,CAAC,IAAIzD,aAAa,CAACyD,CAAC,CAACC,MAAF,CAASC,KAAV,CAJhC;AAKI,YAAA,IAAI,EAAE,CALV;AAMI,YAAA,KAAK,EAAC,SANV;AAOI,YAAA,OAAO,EAAC,UAPZ;AAQI,YAAA,IAAI,EAAE,CARV;AASI,YAAA,SAAS,MATb;AAUI,YAAA,SAAS,MAVb;AAWI,YAAA,QAAQ,EAAE1D;AAXd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAcI,QAAC,MAAD;AACI,YAAA,OAAO,EAAC,UADZ;AAEI,YAAA,KAAK,EAAC,SAFV;AAGI,YAAA,KAAK,EAAE;AACH2D,cAAAA,SAAS,EAAE;AADR,aAHX;AAMI,YAAA,QAAQ,EAAE3D,cANd;AAOI,YAAA,OAAO,EAAEe,WAPb;AAAA,sBASKf,cAAc,gBAAG,QAAC,gBAAD;AAAkB,cAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,oBAAH,GAA0C;AAT7D;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,eA6BI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBA7BJ,eA8BI,QAAC,IAAD;AAAA,oBACKN,KAAK,CAACoC,IAAN,CAAWU,QAAX,CAAoBoB,GAApB,CAAwB,CAACN,OAAD,EAAUO,KAAV,kBACrB;AAAA,oCAGI,QAAC,QAAD;AACI,cAAA,EAAE,EAAEP,OAAO,CAAC3B,eADhB;AAEI,cAAA,UAAU,EAAC,OAFf;AAAA,sCAII,QAAC,cAAD;AAAA,uCACI,QAAC,MAAD;AACI,kBAAA,GAAG,EAAG,gDAA+C2B,OAAO,CAACzB,YAAa,EAD9E;AAEI,kBAAA,GAAG,EAAG,GAAEyB,OAAO,CAACtB,QAAS,EAF7B;AAGI,kBAAA,KAAK,EAAG,GAAEsB,OAAO,CAACtB,QAAS;AAH/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAWI,QAAC,YAAD;AACI,gBAAA,OAAO,eACH,QAAC,KAAD,CAAO,QAAP;AAAA,0CACI,QAAC,UAAD;AACI,oBAAA,OAAO,EAAC,IADZ;AAEI,oBAAA,SAAS,EAAC,IAFd;AAAA,8BAIKsB,OAAO,CAACtB;AAJb;AAAA;AAAA;AAAA;AAAA,0BADJ,eAOI,QAAC,UAAD;AACI,oBAAA,OAAO,EAAC,WADZ;AAEI,oBAAA,SAAS,EAAC,OAFd;AAGI,oBAAA,KAAK,EAAC,eAHV;AAAA,8BAKK9B,cAAc,CAACoD,OAAO,CAACP,OAAT,EAAkBO,OAAO,CAAClD,UAA1B;AALnB;AAAA;AAAA;AAAA;AAAA,0BAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFR;AAkBI,gBAAA,SAAS,eACL,QAAC,UAAD;AACI,kBAAA,OAAO,EAAC,OADZ;AAEI,kBAAA,SAAS,EAAC,GAFd;AAAA,4BAIKkD,OAAO,CAACrB;AAJb;AAAA;AAAA;AAAA;AAAA;AAnBR;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EA0CK4B,KAAK,GAAGnE,KAAK,CAACoC,IAAN,CAAWU,QAAX,CAAoBY,MAApB,GAA6B,CAArC,iBACG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBA3CR;AAAA,aACSS,KADT;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA7FJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsLH;;GAvRQpE,a;UACWP,S;;;KADXO,a;;AAyRT,SAASqE,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHnC,IAAAA,QAAQ,EAAEmC,KAAK,CAACC,WAAN,CAAkBlB;AADzB,GAAP;AAGH;;AAED,eAAerE,OAAO,CAACqF,eAAD,CAAP,CAAyBrE,aAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from '@material-ui/core/card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@mdi/react';\r\nimport { mdiThumbUp, mdiThumbUpOutline, mdiComment, mdiCommentOutline, mdiDelete, mdiChevronDown, mdiChevronUp } from '@mdi/js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport * as _ from 'underscore';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    card: {\r\n        maxWidth: 600,\r\n        margin: 'auto',\r\n    },\r\n    media: {\r\n        height: 0,\r\n        padding: '56.25%',\r\n    }\r\n}));\r\n\r\nfunction TextPostCardP(props) {\r\n    const classes = useStyles();\r\n    const [expand, setExpand] = useState(false); //Expansion variable and setter for comments in Collapse\r\n    const [commentVal, setCommentVal] = useState(''); //This will hold the value of a comment a user posts on a post.\r\n    const [commentSending, setCommentSending] = useState(false); //This will disable the send button if a comment is sending\r\n\r\n    function timeDifference(date2, dateString) {\r\n        //This function will return whether or not we display something like \"2 hrs ago\" \"20 min ago\" or the date string for a post\r\n        let date1 = Date.now();\r\n        let difference = date1 - date2;\r\n        let daysDifference = Math.floor(difference/1000/60/60/24);\r\n        let hoursDifference = Math.floor(difference/1000/60/60);\r\n        let minutesDifference = Math.floor(difference/1000/60);\r\n        let secondsDifference = Math.floor(difference/1000);\r\n        if(daysDifference > 0) {\r\n            return dateString;\r\n        }\r\n        else if(hoursDifference > 0 && hoursDifference < 23) {\r\n            return `${hoursDifference} hr ago`;\r\n        }\r\n        else if(minutesDifference > 0 && minutesDifference < 60) {\r\n            return `${minutesDifference} min ago`;\r\n        }\r\n        else if(minutesDifference === 0) {\r\n            return `${secondsDifference} secs ago`\r\n        }\r\n        else {\r\n            return dateString;\r\n        }\r\n    }\r\n\r\n    function sendComment() {\r\n        //This function will handle sending a comment \r\n        setCommentSending(true);\r\n\r\n        if(!commentVal) {\r\n            swal(\r\n                'Uh Oh',\r\n                'You must enter some text to send a comment!',\r\n                'error',\r\n            );\r\n            setCommentSending(false);\r\n        }\r\n        else {\r\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n            let myDate = new Date();\r\n            let month = months[myDate.getMonth()];\r\n            let day = myDate.getDate();\r\n            let year = myDate.getFullYear();\r\n            let dateString = `${month} ${day}, ${year}`;\r\n            let data = JSON.stringify({\r\n                uniqueCommentId: Date.now() + props.mainUser.uniqueUserId + props.post.uniquePostId,\r\n                uniqueUserId: props.mainUser.uniqueUserId,\r\n                username: props.mainUser.username,\r\n                dateString: dateString,\r\n                text: commentVal,\r\n                receiver: props.post.uniqueUserId,\r\n                uniquePostId: props.post.uniquePostId,\r\n            });\r\n\r\n            return axios({\r\n                method: 'POST',\r\n                url: 'http://192.168.0.9:3001/api/add/comment',\r\n                data: data,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then(response => {\r\n                if(response.data.comments) {\r\n                    swal(\r\n                        'Great!',\r\n                        'Comment successfully added',\r\n                        'success',\r\n                    );\r\n                    props.post.comments = response.data.comments;\r\n                    setCommentSending(false);\r\n                    setCommentVal('');\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'There was an error sending that comment! Please try again.',\r\n                        'error',\r\n                    );\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error sending that comment! Please try again.',\r\n                    'error',\r\n                );\r\n                setCommentSending(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card \r\n            className={classes.card} \r\n            id={props.post.uniquePostId}\r\n        >\r\n            <CardHeader \r\n                title={\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        {props.user.username}\r\n                    </Typography>\r\n                }\r\n                subheader={\r\n                    <Typography \r\n                        variant='subtitle1' \r\n                        component='span'\r\n                        color='textSecondary'\r\n                    >\r\n                        {timeDifference(props.post.utcTime, props.post.dateString)}\r\n                    </Typography>\r\n                }\r\n                avatar={\r\n                    <Avatar \r\n                        src={props.post.context === 'personal' ? `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}` : 'path to community photo upload'}\r\n                        title={props.user.username} \r\n                        alt={props.user.username}\r\n                    />\r\n                }\r\n            />\r\n            <CardContent>\r\n                {props.post.text}\r\n            </CardContent>\r\n            <CardActions>\r\n                <IconButton \r\n                    color='primary' \r\n                >\r\n                    <Icon \r\n                        path={props.post.likes.includes(props.mainUser.uniqueUserId) ? mdiThumbUp : mdiThumbUpOutline} \r\n                        size={1} \r\n                        aria-label='Like Button' \r\n                    />\r\n                    <div>\r\n                        {props.post.likes.length > 0 &&\r\n                            <div>\r\n                                {props.post.likes.length} \r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </IconButton>\r\n                <IconButton \r\n                    color='primary' \r\n                >\r\n                    <Icon \r\n                        path={_.find(props.post.comments, comment => comment.uniqueUserId === props.mainUser.uniqueUserId) ? mdiComment : mdiCommentOutline} \r\n                        size={1} \r\n                        aria-label='Comment Button' \r\n                    />\r\n                    <div>\r\n                        {props.post.comments.length > 0 &&\r\n                            <div>\r\n                                {props.post.comments.length} \r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </IconButton>\r\n                <div>\r\n                    {props.post.uniqueUserId === props.user.uniqueUserId &&\r\n                        <IconButton \r\n                            color='primary' \r\n                            aria-label='Delete post button'\r\n                        >\r\n                            <Icon \r\n                                path={mdiDelete} \r\n                                size={1} \r\n                                aria-label='Delete Icon' \r\n                            />\r\n                        </IconButton>\r\n                    }\r\n                </div>\r\n                <IconButton \r\n                    style={{\r\n                        marginLeft: 'auto',\r\n                    }}\r\n                    onClick={() => setExpand(!expand)}\r\n                >\r\n                    <Icon \r\n                        path={expand ? mdiChevronUp : mdiChevronDown} \r\n                        size={1} \r\n                        aria-label={expand ? 'Close comments' : 'Expand comments'} \r\n                    />\r\n                </IconButton>\r\n            </CardActions>\r\n            <Collapse \r\n                in={expand} \r\n            >\r\n                <Divider />\r\n                <CardContent>\r\n                    {props.mainUser !== null &&\r\n                        <div>\r\n                            <TextField \r\n                                label='Comment' \r\n                                placeholder='Comment...'\r\n                                value={commentVal}\r\n                                onChange={e => setCommentVal(e.target.value)}\r\n                                rows={3} \r\n                                color='primary'\r\n                                variant='outlined' \r\n                                rows={4} \r\n                                multiline\r\n                                fullWidth \r\n                                disabled={commentSending}\r\n                            />\r\n                            <Button \r\n                                variant='outlined' \r\n                                color='primary' \r\n                                style={{\r\n                                    marginTop: 20,\r\n                                }}\r\n                                disabled={commentSending}\r\n                                onClick={sendComment}\r\n                            >\r\n                                {commentSending ? <CircularProgress color='primary' /> : 'Send'}\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                    <Divider />\r\n                    <List>\r\n                        {props.post.comments.map((comment, index) => (\r\n                            <div \r\n                                key={index} \r\n                            >\r\n                                <ListItem\r\n                                    id={comment.uniqueCommentId} \r\n                                    alignItems='start'\r\n                                >\r\n                                    <ListItemAvatar>\r\n                                        <Avatar \r\n                                            src={`http://192.168.0.9:3001/api/get/avatar/by/id/${comment.uniqueUserId}`}\r\n                                            alt={`${comment.username}`}\r\n                                            title={`${comment.username}`} \r\n                                        />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText \r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                <Typography \r\n                                                    variant='h6' \r\n                                                    component='h6' \r\n                                                >\r\n                                                    {comment.username}\r\n                                                </Typography>\r\n                                                <Typography \r\n                                                    variant='subtitle2' \r\n                                                    component='small' \r\n                                                    color='textSecondary'\r\n                                                >\r\n                                                    {timeDifference(comment.utcTime, comment.dateString)}\r\n                                                </Typography>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        secondary={\r\n                                            <Typography \r\n                                                variant='body1'\r\n                                                component='p'\r\n                                            >\r\n                                                {comment.text}\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                {index < props.post.comments.length - 1 &&\r\n                                    <Divider />\r\n                                }\r\n                            </div>\r\n                        ))}\r\n                    </List>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TextPostCardP);"]},"metadata":{},"sourceType":"module"}