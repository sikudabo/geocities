{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\BgExample.js\";\nimport React from 'react';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nconst numbers = ['One', 'Two', 'Three'];\nexport default function BgExample() {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: numbers.map((num, index) => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            children: num\n          }, index.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: numbers.map((num, index) => {\n          /*#__PURE__*/\n          _jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            children: num\n          }, index.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: numbes.map((num, index) => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            children: num\n          }, index.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = BgExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"BgExample\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/BgExample.js"],"names":["React","ButtonGroup","Button","Grid","numbers","BgExample","map","num","index","toString","numbes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,OAAO,GAAG,CACZ,KADY,EAEZ,KAFY,EAGZ,OAHY,CAAhB;AAMA,eAAe,SAASC,SAAT,GAAqB;AAChC,sBACI,QAAC,IAAD;AACI,IAAA,SAAS,MADb;AAAA,4BAGI,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAAA,6BAII,QAAC,WAAD;AAAA,kBACKD,OAAO,CAACE,GAAR,CAAY,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzB,8BACI,QAAC,MAAD;AACI,YAAA,OAAO,EAAC,UADZ;AAEI,YAAA,KAAK,EAAC,SAFV;AAAA,sBAKKD;AALL,aAGSC,KAAK,CAACC,QAAN,EAHT;AAAA;AAAA;AAAA;AAAA,kBADJ;AASH,SAVA;AADL;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAqBI,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAAA,6BAII,QAAC,WAAD;AAAA,kBACKL,OAAO,CAACE,GAAR,CAAY,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzB;AAAA,kBAAC,MAAD;AAEI,YAAA,OAAO,EAAC,WAFZ;AAGI,YAAA,KAAK,EAAC,SAHV;AAAA,sBAKKD;AALL,aACSC,KAAK,CAACC,QAAN,EADT;AAAA;AAAA;AAAA;AAAA;AAOH,SARA;AADL;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YArBJ,eAqCI,QAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAAA,6BAII,QAAC,WAAD;AAAA,kBACKC,MAAM,CAACJ,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACxB,8BACI,QAAC,MAAD;AACI,YAAA,KAAK,EAAC,SADV;AAAA,sBAIKD;AAJL,aAESC,KAAK,CAACC,QAAN,EAFT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SATA;AADL;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyDH;KA1DuBJ,S","sourcesContent":["import React from 'react';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst numbers = [\r\n    'One',\r\n    'Two',\r\n    'Three',\r\n];\r\n\r\nexport default function BgExample() {\r\n    return (\r\n        <Grid \r\n            container \r\n        >\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <ButtonGroup>\r\n                    {numbers.map((num, index) => {\r\n                        return (\r\n                            <Button \r\n                                variant='outlined' \r\n                                color='primary' \r\n                                key={index.toString()}\r\n                            >\r\n                                {num}\r\n                            </Button>\r\n                        )\r\n                    })}\r\n                </ButtonGroup>\r\n            </Grid>\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <ButtonGroup>\r\n                    {numbers.map((num, index) => {\r\n                        <Button \r\n                            key={index.toString()}\r\n                            variant='contained' \r\n                            color='primary' \r\n                        >\r\n                            {num}\r\n                        </Button>\r\n                    })}\r\n                </ButtonGroup>\r\n            </Grid>\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <ButtonGroup>\r\n                    {numbes.map((num, index) => {\r\n                        return (\r\n                            <Button \r\n                                color='primary' \r\n                                key={index.toString()}\r\n                            >\r\n                                {num}\r\n                            </Button>\r\n                        )\r\n                    })}\r\n                </ButtonGroup>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}