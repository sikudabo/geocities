{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simeonikudabo/Downloads/geocities/src/components/UserSettings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport { validatorForm, textValidator } from 'react-material-ui-form-validator';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { SwatchesPicker } from 'react-color';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nconst myCities = [\"Abbeville\", \"Aberdeen\", \"Abilene\", \"Abingdon\", \"Abington\", \"Acoma\", \"Ada\", \"Adams\", \"Adrian\", \"Aiken\", \"Ajo\", \"Akron\", \"Alameda\", \"Alamogordo\", \"Alamosa\", \"Albany\", \"Albert Lea\", \"Albuquerque\", \"Alcoa\", \"Alexander City\", \"Alexandria\", \"Alhambra\", \"Aliquippa\", \"Allentown\", \"Alliance\", \"Alma\", \"Alpine\", \"Alta\", \"Alton\", \"Altoona\", \"Altus\", \"Alva\", \"Amana Colonies\", \"Amarillo\", \"Ambridge\", \"American Fork\", \"Americus\", \"Ames\", \"Amesbury\", \"Amherst\", \"Amsterdam\", \"Anaconda\", \"Anacortes\", \"Anadarko\", \"Anaheim\", \"Anchorage\", \"Andalusia\", \"Anderson\", \"Andersonville\", \"Andover\", \"Ann Arbor\", \"Annapolis\", \"Anniston\", \"Ansonia\", \"Antioch\", \"Apalachicola\", \"Appleton\", \"Arcadia\", \"Ardmore\", \"Arkadelphia\", \"Arkansas City\", \"Arkansas Post\", \"Arlington\", \"Arlington Heights\", \"Artesia\", \"Arthur\", \"Asbury Park\", \"Asheboro\", \"Asheville\", \"Ashland\", \"Ashtabula\", \"Aspen\", \"Astoria\", \"Atchison\", \"Athens\", \"Athol\", \"Atlanta\", \"Atlantic City\", \"Atmore\", \"Attleboro\", \"Auburn\", \"Augusta\", \"Aurora\", \"Austin\", \"Avondale\", \"Babylon\", \"Bainbridge\", \"Baker City\", \"Bakersfield\", \"Baltimore\", \"Bangor\", \"Bar Harbor\", \"Baraboo\", \"Barberton\", \"Barbourville\", \"Bardstown\", \"Barnstable\", \"Barre\", \"Barrington\", \"Barstow\", \"Bartlesville\", \"Bartow\", \"Bastrop\", \"Batavia\", \"Batesville\", \"Bath\", \"Baton Rouge\", \"Battle Creek\", \"Bay City\", \"Bay Saint Louis\", \"Bayonne\", \"Baytown\", \"Beacon\", \"Beatrice\", \"Beaufort\", \"Beaumont\", \"Beaverton\", \"Beckley\", \"Bedford\", \"Belen\", \"Belfast\", \"Belle Fourche\", \"Belle Glade\", \"Bellefontaine\", \"Belleville\", \"Bellevue\", \"Bellingham\", \"Bellows Falls\", \"Belmont\", \"Beloit\", \"Belvidere\", \"Bemidji\", \"Bend\", \"Bennington\", \"Benton\", \"Benton Harbor\", \"Berea\", \"Berkeley\", \"Berlin\", \"Bessemer\", \"Bethany\", \"Bethesda-Chevy Chase\", \"Bethlehem\", \"Beverly\", \"Beverly Hills\", \"Biddeford\", \"Big Spring\", \"Billings\", \"Biloxi\", \"Binghamton\", \"Birmingham\", \"Bisbee\", \"Bismarck\", \"Blackfoot\", \"Blairsville\", \"Bloomfield\", \"Bloomfield Hills\", \"Bloomington\", \"Bloomsburg\", \"Bluefield\", \"Blytheville\", \"Boca Raton\", \"Bogalusa\", \"Boise\", \"Bonners Ferry\", \"Boone\", \"Boonesborough\", \"Boonville\", \"Boothbay Harbor\", \"Bordentown\", \"Borger\", \"Bossier City\", \"Boston\", \"Boulder\", \"Boulder City\", \"Bound Brook\", \"Bountiful\", \"Bourne\", \"Bowie\", \"Bowling Green\", \"Boys Town\", \"Bozeman\", \"Bradenton\", \"Bradford\", \"Brainerd\", \"Braintree\", \"Branford\", \"Branson\", \"Brattleboro\", \"Brea\", \"Breckenridge\", \"Bremerton\", \"Bridgeport\", \"Bridgeton\", \"Brigham City\", \"Brighton\", \"Bristol\", \"Brockton\", \"Bronx\", \"Brookfield\", \"Brookings\", \"Brookline\", \"Brooklyn\", \"Brownsville\", \"Brunswick\", \"Bryan\", \"Buckhannon\", \"Buena Park\", \"Buffalo\", \"Burbank\", \"Burlington\", \"Burns\", \"Butte\", \"Cadillac\", \"Cahokia\", \"Cairo\", \"Calais\", \"Caldwell\", \"Calexico\", \"Calhoun\", \"Calistoga\", \"Calumet City\", \"Cambridge\", \"Camden\", \"Campbellsville\", \"Canon City\", \"Canton\", \"Canyon\", \"Cape Coral\", \"Cape Girardeau\", \"Cape May\", \"Carbondale\", \"Caribou\", \"Carlinville\", \"Carlisle\", \"Carlsbad\", \"Carmel\", \"Carrollton\", \"Carson City\", \"Carthage\", \"Casa Grande\", \"Casper\", \"Castine\", \"Catonsville\", \"Cedar City\", \"Cedar Falls\", \"Cedar Rapids\", \"Central City\", \"Central Falls\", \"Centralia\", \"Chadron\", \"Chambersburg\", \"Champaign\", \"Chandler\", \"Chanute\", \"Chapel Hill\", \"Charles City\", \"Charles Town\", \"Charleston\", \"Charlestown\", \"Charlevoix\", \"Charlotte\", \"Charlottesville\", \"Chattanooga\", \"Chautauqua\", \"Cheboygan\", \"Cheektowaga\", \"Chelmsford\", \"Chelsea\", \"Cherokee\", \"Chesapeake\", \"Chester\", \"Cheyenne\", \"Chicago\", \"Chicago Heights\", \"Chickasaw\", \"Chickasha\", \"Chico\", \"Chicopee\", \"Chillicothe\", \"Chula Vista\", \"Cicero\", \"Cincinnati\", \"Clanton\", \"Claremont\", \"Claremore\", \"Clarksburg\", \"Clarksdale\", \"Clarksville\", \"Clayton\", \"Clearfield\", \"Clearwater\", \"Cleburne\", \"Cleveland\", \"Cleveland Heights\", \"Clifton\", \"Climax\", \"Clinton\", \"Clovis\", \"Cocoa Beach\", \"Cocoa-Rockledge\", \"Cody\", \"Coeur dâ€™Alene\", \"Coffeyville\", \"Cohasset\", \"Cohoes\", \"College Park\", \"College Station\", \"Collinsville\", \"Colorado Springs\", \"Columbia\", \"Columbus\", \"Compton\", \"Concord\", \"Coney Island\", \"Conneaut\", \"Connersville\", \"Conway\", \"Cookeville\", \"Cooperstown\", \"Coos Bay\", \"Coral Gables\", \"Cordova\", \"Corinth\", \"Corning\", \"Corona\", \"Coronado\", \"Corpus Christi\", \"Cortez\", \"Cortland\", \"Corvallis\", \"Corydon\", \"Costa Mesa\", \"Coulee Dam\", \"Council Bluffs\", \"Council Grove\", \"Coupeville\", \"Coventry\", \"Covington\", \"Cranford\", \"Cranston\", \"Crawfordsville\", \"Cripple Creek\", \"Crookston\", \"Crossett\", \"Crown Point\", \"Crystal City\", \"Cullman\", \"Culver City\", \"Cumberland\", \"Cushing\", \"Custer\", \"Cuyahoga Falls\", \"Dahlonega\", \"Dallas\", \"Dalton\", \"Daly City\", \"Danbury\", \"Danvers\", \"Danville\", \"Darien\", \"Darlington\", \"Dartmouth\", \"Davenport\", \"Davis\", \"Dayton\", \"Daytona Beach\", \"De Land\", \"De Smet\", \"DeKalb\", \"Deadwood\", \"Dearborn\", \"Decatur\", \"Dedham\", \"Deerfield Beach\", \"Defiance\", \"Del Rio\", \"Delaware\", \"Delray Beach\", \"Delta\", \"Deming\", \"Demopolis\", \"Denison\", \"Dennis\", \"Denton\", \"Denver\", \"Derby\", \"Derry\", \"Des Moines\", \"Des Plaines\", \"Detroit\", \"Devils Lake\", \"Dickinson\", \"Dillon\", \"Dixon\", \"Dodge City\", \"Dothan\", \"Douglas\", \"Dover\", \"Downey\", \"Dubuque\", \"Duluth\", \"Duncan\", \"Dunkirk\", \"Durango\", \"Durant\", \"Durham\", \"Duxbury\", \"Eagle Pass\", \"East Aurora\", \"East Chicago\", \"East Cleveland\", \"East Greenwich\", \"East Hampton\", \"East Hartford\", \"East Haven\", \"East Lansing\", \"East Liverpool\", \"East Moline\", \"East Orange\", \"East Point\", \"East Providence\", \"East Saint Louis\", \"Eastchester\", \"Eastham\", \"Easton\", \"Eastpointe\", \"Eastport\", \"Eau Claire\", \"Ecorse\", \"Edenton\", \"Edgartown\", \"Edinburg\", \"Edison\", \"Edmond\", \"Effingham\", \"El Centro\", \"El Cerrito\", \"El Dorado\", \"El Monte\", \"El Paso\", \"El Reno\", \"Elgin\", \"Elizabeth\", \"Elizabeth City\", \"Elizabethton\", \"Elizabethtown\", \"Elk City\", \"Elkhart\", \"Elkins\", \"Elko\", \"Elkton\", \"Ellensburg\", \"Ellsworth\", \"Elmhurst\", \"Elmira\", \"Elwood\", \"Ely\", \"Elyria\", \"Emmitsburg\", \"Emporia\", \"Enfield\", \"Englewood\", \"Enid\", \"Enterprise\", \"Ephrata\", \"Erie\", \"Escanaba\", \"Escondido\", \"Essex\", \"Estes Park\", \"Estherville\", \"Euclid\", \"Eufaula\", \"Eugene\", \"Eureka\", \"Evanston\", \"Evansville\", \"Eveleth\", \"Everett\", \"Excelsior Springs\", \"Exeter\", \"Fairbanks\", \"Fairfax\", \"Fairfield\", \"Fairhaven\", \"Fairmont\", \"Fall River\", \"Fallon\", \"Falls Church\", \"Falmouth\", \"Fargo\", \"Faribault\", \"Farmington\", \"Fayetteville\", \"Fergus Falls\", \"Ferguson\", \"Fernandina Beach\", \"Fillmore\", \"Findlay\", \"Fitchburg\", \"Fitzgerald\", \"Flagstaff\", \"Flint\", \"Florence\", \"Florissant\", \"Flushing\", \"Fond du Lac\", \"Fontana\", \"Forest Hills\", \"Forrest City\", \"Fort Benton\", \"Fort Collins\", \"Fort Dodge\", \"Fort Kent\", \"Fort Lauderdale\", \"Fort Lee\", \"Fort Morgan\", \"Fort Myers\", \"Fort Payne\", \"Fort Pierce\", \"Fort Scott\", \"Fort Smith\", \"Fort Valley\", \"Fort Walton Beach\", \"Fort Wayne\", \"Fort Worth\", \"Framingham\", \"Frankfort\", \"Franklin\", \"Frederick\", \"Fredericksburg\", \"Fredonia\", \"Freeport\", \"Fremont\", \"French Lick\", \"Fresno\", \"Fullerton\", \"Fulton\", \"Gadsden\", \"Gaffney\", \"Gainesville\", \"Galena\", \"Galesburg\", \"Gallatin\", \"Gallipolis\", \"Gallup\", \"Galveston\", \"Garden City\", \"Garden Grove\", \"Gardiner\", \"Garland\", \"Gary\", \"Gastonia\", \"Gatlinburg\", \"Geneva\", \"Genoa\", \"Georgetown\", \"Germantown\", \"Gettysburg\", \"Gila Bend\", \"Gillette\", \"Glassboro\", \"Glen Ellyn\", \"Glendale\", \"Glendive\", \"Glens Falls\", \"Glenview\", \"Glenwood Springs\", \"Globe\", \"Gloucester\", \"Gloversville\", \"Golden\", \"Goldfield\", \"Goldsboro\", \"Goliad\", \"Goshen\", \"Grafton\", \"Grand Forks\", \"Grand Haven\", \"Grand Island\", \"Grand Junction\", \"Grand Rapids\", \"Granite City\", \"Grants\", \"Grants Pass\", \"Grayling\", \"Great Barrington\", \"Great Bend\", \"Great Falls\", \"Great Neck\", \"Greeley\", \"Green Bay\", \"Green River\", \"Greenbelt\", \"Greeneville\", \"Greenfield\", \"Greensboro\", \"Greensburg\", \"Greenville\", \"Greenwich\", \"Greenwood\", \"Grenada\", \"Gretna\", \"Grinnell\", \"Grosse Pointe\", \"Groton\", \"Guilford\", \"Gulfport\", \"Gunnison\", \"Guntersville\", \"Guthrie\", \"Guymon\", \"Hackensack\", \"Haddonfield\", \"Hagerstown\", \"Haines\", \"Halifax\", \"Hallandale Beach\", \"Hamden\", \"Hamilton\", \"Hammond\", \"Hammondsport\", \"Hampton\", \"Hanalei\", \"Hancock\", \"Hannibal\", \"Hanover\", \"Harlan\", \"Harlem\", \"Harlingen\", \"Harmony\", \"Harpers Ferry\", \"Harrisburg\", \"Harrison\", \"Harrodsburg\", \"Hartford\", \"Hartsville\", \"Harwich\", \"Hastings\", \"Hattiesburg\", \"Haverhill\", \"Havre\", \"Hays\", \"Hayward\", \"Hazard\", \"Hazleton\", \"Heber City\", \"Helena\", \"Hempstead\", \"Henderson\", \"Herkimer\", \"Herrin\", \"Hershey\", \"Hialeah\", \"Hibbing\", \"Hickory\", \"High Point\", \"Highland Park\", \"Hillsboro\", \"Hillsborough\", \"Hilo\", \"Hingham\", \"Hinton\", \"Hobart\", \"Hobbs\", \"Hoboken\", \"Hodgenville\", \"Holdenville\", \"Holland\", \"Holly Springs\", \"Hollywood\", \"Holyoke\", \"Homer\", \"Homestead\", \"Honaunau\", \"Honesdale\", \"Honolulu\", \"Hood River\", \"Hope\", \"Hopewell\", \"Hopkinsville\", \"Hoquiam\", \"Hot Springs\", \"Houghton\", \"Houlton\", \"Houma\", \"Houston\", \"Hudson\", \"Hugo\", \"Huntington\", \"Huntington Beach\", \"Huntsville\", \"Huron\", \"Hutchinson\", \"Hyannis\", \"Hyattsville\", \"Hyde Park\", \"Idaho City\", \"Idaho Falls\", \"Ilion\", \"Independence\", \"Indiana\", \"Indianapolis\", \"Indianola\", \"Indio\", \"Inglewood\", \"Interlochen\", \"International Falls\", \"Iowa City\", \"Ipswich\", \"Iron Mountain\", \"Ironwood\", \"Irvine\", \"Irving\", \"Irvington\", \"Ishpeming\", \"Ithaca\", \"Jackson\", \"Jacksonville\", \"Jamestown\", \"Janesville\", \"Jasper\", \"Jeannette\", \"Jefferson City\", \"Jeffersonville\", \"Jersey City\", \"Jim Thorpe\", \"John Day\", \"Johnson City\", \"Johnstown\", \"Joliet\", \"Jonesboro\", \"Jonesborough\", \"Joplin\", \"Junction City\", \"Juneau\", \"Kahului\", \"Kalamazoo\", \"Kalispell\", \"Kanab\", \"Kaneohe\", \"Kankakee\", \"Kansas City\", \"Kapaa\", \"Kaskaskia\", \"Kawaihae\", \"Kearney\", \"Keene\", \"Kellogg\", \"Kelso\", \"Kennebunkport\", \"Kennewick\", \"Kenosha\", \"Kent\", \"Keokuk\", \"Ketchikan\", \"Kettering\", \"Kewanee\", \"Key West\", \"Keyser\", \"Kilgore\", \"Killeen\", \"Kingman\", \"Kingsport\", \"Kingston\", \"Kingsville\", \"Kinston\", \"Kirksville\", \"Kittery\", \"Kitty Hawk\", \"Klamath Falls\", \"Knoxville\", \"Kodiak\", \"Kokomo\", \"Kotzebue\", \"La Crosse\", \"La Grande\", \"La Grange\", \"La Habra\", \"La Junta\", \"La Salle\", \"Lackawanna\", \"Laconia\", \"Lafayette\", \"Laguna Beach\", \"Lahaina\", \"Laie\", \"Lake Charles\", \"Lake City\", \"Lake Forest\", \"Lake Geneva\", \"Lake Havasu City\", \"Lake Oswego\", \"Lake Placid\", \"Lake Wales\", \"Lakehurst\", \"Lakeland\", \"Lakeview\", \"Lakewood\", \"Lamar\", \"Lancaster\", \"Lander\", \"Lansing\", \"Laramie\", \"Laredo\", \"Largo\", \"Las Cruces\", \"Las Vegas\", \"Laurel\", \"Lawrence\", \"Lawton\", \"Layton\", \"Lead\", \"Leadville\", \"Leavenworth\", \"Lebanon\", \"Lehi\", \"Lenox\", \"Leominster\", \"Levittown\", \"Lewes\", \"Lewisburg\", \"Lewiston\", \"Lewistown\", \"Lexington\", \"Liberal\", \"Libertyville\", \"Lima\", \"Lincoln\", \"Lisle\", \"Litchfield\", \"Little Falls\", \"Little Rock\", \"Littleton\", \"Livermore\", \"Livingston\", \"Livonia\", \"Lock Haven\", \"Lockport\", \"Lodi\", \"Logan\", \"Lombard\", \"Lompoc\", \"Long Beach\", \"Long Branch\", \"Longmont\", \"Longview\", \"Lorain\", \"Los Alamos\", \"Los Angeles\", \"Louisville\", \"Loveland\", \"Lovington\", \"Lowell\", \"Lower Southampton\", \"Lubbock\", \"Lubec\", \"Ludington\", \"Ludlow\", \"Lufkin\", \"Lumberton\", \"Lynchburg\", \"Lynn\", \"Machias\", \"Mackinaw City\", \"Macomb\", \"Macon\", \"Madison\", \"Magnolia\", \"Malden\", \"Malibu\", \"Mamaroneck\", \"Manassas\", \"Manchester\", \"Mandan\", \"Manhattan\", \"Manistee\", \"Manitowoc\", \"Mankato\", \"Mansfield\", \"Manti\", \"Marblehead\", \"Marietta\", \"Marinette\", \"Marion\", \"Marlborough\", \"Marquette\", \"Marshall\", \"Martinez\", \"Martins Ferry\", \"Martinsburg\", \"Martinsville\", \"Marysville\", \"Maryville\", \"Mason City\", \"Massena\", \"Massillon\", \"Mattoon\", \"Mayfield\", \"Maysville\", \"McAlester\", \"McAllen\", \"McCook\", \"McKeesport\", \"McKinney\", \"McMinnville\", \"McPherson\", \"Meadville\", \"Medford\", \"Medicine Lodge\", \"Melbourne\", \"Memphis\", \"Menasha\", \"Menlo Park\", \"Menominee\", \"Mentor\", \"Merced\", \"Meriden\", \"Meridian\", \"Mesa\", \"Mesquite\", \"Mexico\", \"Miami\", \"Miami Beach\", \"Michigan City\", \"Middlebury\", \"Middlesboro\", \"Middletown\", \"Midland\", \"Midwest City\", \"Milan\", \"Milbank\", \"Miles City\", \"Milford\", \"Millburn\", \"Milledgeville\", \"Millville\", \"Milton\", \"Milwaukee\", \"Minden\", \"Mineola\", \"Minneapolis\", \"Minot\", \"Mishawaka\", \"Mission\", \"Missoula\", \"Mitchell\", \"Moab\", \"Mobile\", \"Mobridge\", \"Modesto\", \"Moline\", \"Monett\", \"Monmouth\", \"Monroe\", \"Monroeville\", \"Montclair\", \"Monterey\", \"Montgomery\", \"Monticello\", \"Montpelier\", \"Montrose\", \"Moore\", \"Moorhead\", \"Morehead City\", \"Morgan City\", \"Morganton\", \"Morgantown\", \"Morrilton\", \"Morristown\", \"Moscow\", \"Moses Lake\", \"Moundsville\", \"Mount Clemens\", \"Mount Holly\", \"Mount Pleasant\", \"Mount Vernon\", \"Mountain View\", \"Muncie\", \"Mundelein\", \"Murfreesboro\", \"Murray\", \"Muscatine\", \"Muskegon\", \"Muskogee\", \"Myrtle Beach\", \"Mystic\", \"Nacogdoches\", \"Nags Head\", \"Nahant\", \"Nampa\", \"Nanticoke\", \"Naperville\", \"Naples\", \"Nappanee\", \"Narragansett\", \"Nashua\", \"Nashville\", \"Natchez\", \"Natchitoches\", \"Natick\", \"Naugatuck\", \"Nauvoo\", \"Nebraska City\", \"Needles\", \"Neenah\", \"Neosho\", \"Nephi\", \"New Albany\", \"New Bedford\", \"New Bern\", \"New Braunfels\", \"New Britain\", \"New Brunswick\", \"New Castle\", \"New Glarus\", \"New Harmony\", \"New Haven\", \"New Hope\", \"New Iberia\", \"New Kensington\", \"New London\", \"New Madrid\", \"New Market\", \"New Martinsville\", \"New Milford\", \"New Orleans\", \"New Paltz\", \"New Philadelphia\", \"New Rochelle\", \"New Smyrna Beach\", \"New Ulm\", \"New Windsor\", \"New York City\", \"Newark\", \"Newberg\", \"Newburgh\", \"Newburyport\", \"Newcastle\", \"Newport\", \"Newport Beach\", \"Newport News\", \"Newton\", \"Niagara Falls\", \"Niles\", \"Nogales\", \"Nome\", \"Norfolk\", \"Normal\", \"Norman\", \"Norris\", \"Norristown\", \"North Adams\", \"North Chicago\", \"North College Hill\", \"North Haven\", \"North Hempstead\", \"North Kingstown\", \"North Las Vegas\", \"North Little Rock\", \"North Platte\", \"Northampton\", \"Northfield\", \"Norton\", \"Norwalk\", \"Norwich\", \"Norwood\", \"Novato\", \"Nyack\", \"Oak Harbor\", \"Oak Park\", \"Oak Ridge\", \"Oakland\", \"Oberlin\", \"Ocala\", \"Ocean City\", \"Ocean Springs\", \"Oceanside\", \"Oconto\", \"Odessa\", \"Ogden\", \"Ogdensburg\", \"Oil City\", \"Ojai\", \"Oklahoma City\", \"Okmulgee\", \"Olathe\", \"Old Saybrook\", \"Olean\", \"Olympia\", \"Omaha\", \"Oneida\", \"Oneonta\", \"Ontario\", \"Opelika\", \"Opelousas\", \"Oraibi\", \"Orange\", \"Orangeburg\", \"Orderville\", \"Oregon\", \"Oregon City\", \"Orem\", \"Orlando\", \"Ormond Beach\", \"Orono\", \"Oroville\", \"Osawatomie\", \"Osceola\", \"Oshkosh\", \"Oskaloosa\", \"Ossining\", \"Oswego\", \"Ottawa\", \"Ottumwa\", \"Ouray\", \"Overland Park\", \"Owatonna\", \"Owensboro\", \"Oxford\", \"Oxnard\", \"Oyster Bay\", \"Ozark\", \"Pacific Grove\", \"Paducah\", \"Pagosa Springs\", \"Painesville\", \"Palatine\", \"Palatka\", \"Palm Bay\", \"Palm Beach\", \"Palm Springs\", \"Palmdale\", \"Palmer\", \"Palmyra\", \"Palo Alto\", \"Pampa\", \"Panama City\", \"Panguitch\", \"Paris\", \"Park City\", \"Park Forest\", \"Park Ridge\", \"Parkersburg\", \"Parma\", \"Parsippanyâ€“Troy Hills\", \"Pasadena\", \"Pascagoula\", \"Pasco\", \"Pass Christian\", \"Passaic\", \"Paterson\", \"Pauls Valley\", \"Pawhuska\", \"Pawtucket\", \"Payson\", \"Peabody\", \"Pecos\", \"Peekskill\", \"Pekin\", \"Pendleton\", \"Pensacola\", \"Peoria\", \"Perry\", \"Perth Amboy\", \"Peru\", \"Peshtigo\", \"Petaluma\", \"Peterborough\", \"Petersburg\", \"Petoskey\", \"Pharr\", \"Phenix City\", \"Philadelphia\", \"Philippi\", \"Phoenix\", \"Phoenixville\", \"Pierre\", \"Pine Bluff\", \"Pinehurst\", \"Pipestone\", \"Piqua\", \"Pittsburg\", \"Pittsburgh\", \"Pittsfield\", \"Plainfield\", \"Plains\", \"Plainview\", \"Plano\", \"Plattsburgh\", \"Plattsmouth\", \"Plymouth\", \"Pocatello\", \"Point Pleasant\", \"Point Roberts\", \"Pomona\", \"Pompano Beach\", \"Ponca City\", \"Pontiac\", \"Port Angeles\", \"Port Arthur\", \"Port Gibson\", \"Port Hueneme\", \"Port Huron\", \"Port Lavaca\", \"Port Orford\", \"Port Washington\", \"Portage\", \"Portales\", \"Portland\", \"Portsmouth\", \"Potsdam\", \"Pottstown\", \"Pottsville\", \"Poughkeepsie\", \"Powell\", \"Prairie du Chien\", \"Prescott\", \"Presque Isle\", \"Price\", \"Prichard\", \"Priest River\", \"Princeton\", \"Prineville\", \"Providence\", \"Provincetown\", \"Provo\", \"Pryor\", \"Pueblo\", \"Pullman\", \"Put-in-Bay\", \"Puyallup\", \"Queens\", \"Quincy\", \"Racine\", \"Raleigh\", \"Rancho Cucamonga\", \"Randolph\", \"Rantoul\", \"Rapid City\", \"Raton\", \"Rawlins\", \"Reading\", \"Red Bluff\", \"Red Cloud\", \"Red Wing\", \"Redding\", \"Redlands\", \"Redmond\", \"Redondo Beach\", \"Redwood City\", \"Reedsport\", \"Reno\", \"Rensselaer\", \"Renton\", \"Reston\", \"Revere\", \"Rexburg\", \"Rhinelander\", \"Richardson\", \"Richland\", \"Richmond\", \"Ridgewood\", \"Ripon\", \"River Forest\", \"Riverside\", \"Riverton\", \"Roanoke\", \"Rochester\", \"Rock Hill\", \"Rock Island\", \"Rock Springs\", \"Rockford\", \"Rockland\", \"Rockville\", \"Rocky Mount\", \"Rogers\", \"Rolla\", \"Rome\", \"Romney\", \"Roseburg\", \"Roselle\", \"Roseville\", \"Roswell\", \"Rotterdam\", \"Royal Oak\", \"Rugby\", \"Rumford\", \"Ruston\", \"Rutherford\", \"Rutland\", \"Rye\", \"Saco\", \"Sacramento\", \"Sag Harbor\", \"Saginaw\", \"Saint Albans\", \"Saint Augustine\", \"Saint Charles\", \"Saint Cloud\", \"Saint George\", \"Saint Ignace\", \"Saint Johnsbury\", \"Saint Joseph\", \"Saint Louis\", \"Saint Martinville\", \"Saint Marys City\", \"Saint Paul\", \"Saint Petersburg\", \"Sainte Genevieve\", \"Salem\", \"Salina\", \"Salinas\", \"Salisbury\", \"Sallisaw\", \"Salt Lake City\", \"San Angelo\", \"San Antonio\", \"San Bernardino\", \"San Clemente\", \"San Diego\", \"San Felipe\", \"San Fernando\", \"San Francisco\", \"San Gabriel\", \"San Jose\", \"San Juan Capistrano\", \"San Leandro\", \"San Luis Obispo\", \"San Marcos\", \"San Marino\", \"San Mateo\", \"San Pedro\", \"San Rafael\", \"San Simeon\", \"Sand Springs\", \"Sandusky\", \"Sandwich\", \"Sanford\", \"Santa Ana\", \"Santa Barbara\", \"Santa Clara\", \"Santa Clarita\", \"Santa Claus\", \"Santa Cruz\", \"Santa Fe\", \"Santa Monica\", \"Santa Rosa\", \"Sapulpa\", \"Saranac Lake\", \"Sarasota\", \"Saratoga Springs\", \"Saugus\", \"Sauk Centre\", \"Sault Sainte Marie\", \"Sausalito\", \"Savannah\", \"Scarborough\", \"Scarsdale\", \"Schenectady\", \"Scottsboro\", \"Scottsdale\", \"Scranton\", \"Searcy\", \"Seaside\", \"Seattle\", \"Sebring\", \"Sedalia\", \"Selma\", \"Seminole\", \"Seneca Falls\", \"Seward\", \"Seymour\", \"Shaker Heights\", \"Shamokin\", \"Sharon\", \"Shawnee\", \"Shawneetown\", \"Sheboygan\", \"Sheffield\", \"Shelby\", \"Shelbyville\", \"Shelton\", \"Shepherdstown\", \"Sheridan\", \"Sherman\", \"Shiprock\", \"Shreveport\", \"Sidney\", \"Sierra Vista\", \"Silver City\", \"Silver Spring\", \"Silverton\", \"Simi Valley\", \"Simsbury\", \"Sioux City\", \"Sioux Falls\", \"Sitka\", \"Skagway\", \"Skokie\", \"Smith Center\", \"Smyrna\", \"Socorro\", \"Somersworth\", \"Somerville\", \"Sonoma\", \"South Bend\", \"South Charleston\", \"South Hadley\", \"South Holland\", \"South Kingstown\", \"South Orange Village\", \"South Saint Paul\", \"South San Francisco\", \"Southampton\", \"Southington\", \"Spanish Fork\", \"Sparks\", \"Spartanburg\", \"Spearfish\", \"Spokane\", \"Spring Green\", \"Springfield\", \"Springville\", \"Stamford\", \"Starkville\", \"State College\", \"Staten Island\", \"Staunton\", \"Steamboat Springs\", \"Sterling\", \"Steubenville\", \"Stevens Point\", \"Stillwater\", \"Stockbridge\", \"Stockton\", \"Stonington\", \"Stony Brook\", \"Stony Point\", \"Stoughton\", \"Stratford\", \"Streator\", \"Stroudsburg\", \"Sturbridge\", \"Sturgeon Bay\", \"Sturgis\", \"Stuttgart\", \"Sudbury\", \"Suffolk\", \"Summersville\", \"Summit\", \"Sumter\", \"Sun Valley\", \"Sunbury\", \"Sunnyvale\", \"Superior\", \"Susanville\", \"Swarthmore\", \"Sweetwater\", \"Sylacauga\", \"Syracuse\", \"Tacoma\", \"Tahlequah\", \"Takoma Park\", \"Talladega\", \"Tallahassee\", \"Tamaqua\", \"Tampa\", \"Taos\", \"Tarpon Springs\", \"Tarrytown\", \"Taunton\", \"Telluride\", \"Tempe\", \"Temple\", \"Ten Sleep\", \"Terre Haute\", \"Tewksbury\", \"Texarkana\", \"Texas City\", \"The Dalles\", \"The Village\", \"Thermopolis\", \"Thibodaux\", \"Thousand Oaks\", \"Ticonderoga\", \"Tiffin\", \"Tillamook\", \"Titusville\", \"Tiverton\", \"Toccoa\", \"Toledo\", \"Tombstone\", \"Tonawanda\", \"Tooele\", \"Topeka\", \"Torrance\", \"Torrington\", \"Totowa\", \"Towson\", \"Traverse City\", \"Trenton\", \"Trinidad\", \"Troy\", \"Truro\", \"Truth or Consequences\", \"Tucson\", \"Tucumcari\", \"Tullahoma\", \"Tulsa\", \"Tupelo\", \"Turlock\", \"Tuscaloosa\", \"Tuscumbia\", \"Tuskegee\", \"Twin Falls\", \"Tyler\", \"Ukiah\", \"Union\", \"Union City\", \"Uniontown\", \"Urbana\", \"Utica\", \"Uvalde\", \"Vail\", \"Valdez\", \"Valdosta\", \"Vallejo\", \"Valley City\", \"Valparaiso\", \"Van Buren\", \"Vancouver\", \"Vandalia\", \"Venice\", \"Ventura\", \"Vermillion\", \"Vernal\", \"Vicksburg\", \"Victoria\", \"Victorville\", \"Vincennes\", \"Vineland\", \"Vinita\", \"Virden\", \"Virginia\", \"Virginia Beach\", \"Virginia City\", \"Visalia\", \"Wabash\", \"Waco\", \"Wahiawa\", \"Wahpeton\", \"Wailuku\", \"Waimea\", \"Walla Walla\", \"Wallingford\", \"Walnut Creek\", \"Walpi\", \"Walsenburg\", \"Warm Springs\", \"Warner Robins\", \"Warren\", \"Warrensburg\", \"Warwick\", \"Washington\", \"Waterbury\", \"Waterford\", \"Waterloo\", \"Watertown\", \"Waterville\", \"Watervliet\", \"Watkins Glen\", \"Watts\", \"Waukegan\", \"Waukesha\", \"Wausau\", \"Wauwatosa\", \"Waycross\", \"Wayne\", \"Waynesboro\", \"Weatherford\", \"Webster\", \"Webster City\", \"Weehawken\", \"Weirton\", \"Welch\", \"Wellesley\", \"Wellfleet\", \"Wellsburg\", \"Wenatchee\", \"West Allis\", \"West Bend\", \"West Bridgewater\", \"West Chester\", \"West Covina\", \"West Des Moines\", \"West Hartford\", \"West Haven\", \"West Lafayette\", \"West Memphis\", \"West New York\", \"West Orange\", \"West Palm Beach\", \"West Plains\", \"West Point\", \"West Seneca\", \"West Springfield\", \"Westerly\", \"Westfield\", \"Westminster\", \"Weston\", \"Westport\", \"Wethersfield\", \"Wewoka\", \"Weymouth\", \"Wheaton\", \"Wheeling\", \"White Plains\", \"White Springs\", \"White Sulphur Springs\", \"Whitman\", \"Whittier\", \"Wichita\", \"Wichita Falls\", \"Wickford\", \"Wilkes-Barre\", \"Williamsburg\", \"Williamson\", \"Williamsport\", \"Williamstown\", \"Willimantic\", \"Willingboro\", \"Williston\", \"Willmar\", \"Wilmette\", \"Wilmington\", \"Wilson\", \"Winchester\", \"Windham\", \"Window Rock\", \"Windsor\", \"Windsor Locks\", \"Winnemucca\", \"Winnetka\", \"Winona\", \"Winooski\", \"Winslow\", \"Winsted\", \"Winston-Salem\", \"Winter Haven\", \"Winter Park\", \"Wisconsin Dells\", \"Woburn\", \"Wood River\", \"Woodbridge\", \"Woodland\", \"Woods Hole\", \"Woodstock\", \"Woodward\", \"Woonsocket\", \"Wooster\", \"Worcester\", \"Worland\", \"Worthington\", \"Wyandotte\", \"Xenia\", \"Yakima\", \"Yankton\", \"Yazoo City\", \"Yellow Springs\", \"Yonkers\", \"Yorba Linda\", \"York\", \"Youngstown\", \"Ypsilanti\", \"Ysleta\", \"Yuba City\", \"Yuma\", \"Zanesville\", \"Zion\", \"Zionsville\"];\nconst myStates = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"];\nconst useStyles = makeStyles({\n  topMarg: {\n    marginTop: 100\n  },\n  gridMarg: {\n    marginTop: 25\n  }\n});\n\nfunction UserSettings(props) {\n  _s();\n\n  const history = useHistory(); //Variable for navigation. \n\n  const classes = useStyles(); //Variable for custom styles\n\n  const [newUsername, setNewUsername] = useState(''); //Variable and setter for updated username\n\n  const [newPassword, setNewPassword] = useState(''); //Variable and setter for a new password\n\n  const [newEmail, setNewEmail] = useState(''); //Variable and setter for a new emabil address. \n\n  const usernameRef = useRef(null);\n  const [makingEdit, setMakingEdit] = useState(false); //Variable and setter to disable buttons when change is being made\n\n  const [town, setTown] = useState(myCities[0]); //Variable and setter for selected city.\n\n  const [userState, setUserState] = useState(myStates[0]); //This will be the home state that the user is from.\n\n  const regularExpressions = {\n    usernameExpression: /^\\w+$/,\n    alphaStartRe: /^[A-Za-z]+$/,\n    emailRe: /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/\n  }; //These are the regular expressions that must be matched!\n\n  useEffect(() => {\n    //First we need to see if the user is logged in. If not, we re-route them home. \n    if (props.user === null) {\n      swal('Uh Oh!', 'You must be logged in to manage your settings!', 'error');\n      history.push('/');\n    } else {\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.17:3001/api/grab/user/${props.user.uniqueUserId}`\n      }).then(response => {\n        //After the call, update the user and the theme color. \n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        props.dispatch({\n          type: 'ThemeChange',\n          payload: response.data.user.profileTheme\n        });\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error trying to update your settings!', 'error');\n        history.goBack(1);\n      });\n    }\n  }, []);\n\n  function preventSpaces(e) {\n    //This function will prevent a user from adding spaces to their username \n    if (e.keyCode === 32) {\n      e.preventDefault();\n      return false;\n    }\n  }\n\n  function changeUsername() {\n    //This function will handle updating a username \n    setMakingEdit(true);\n\n    if (newUsername.length.trim < 6) {\n      swal('Uh Oh!', 'Username must be at least 6 characters long!', 'error');\n      setMakingEdit(false);\n      return false;\n    } else if (newUsername.length > 24) {\n      swal('Uh Oh!', 'Username must not be more than 24 characters long!', 'error');\n      setMakingEdit(false);\n      return false;\n    } else if (!regularExpressions.usernameExpression.test(newUsername)) {\n      swal('Uh Oh!', 'Username can only contain letters, numbers, and underscores, and it must start with a letter!', 'error');\n      setMakingEdit(false);\n      return false;\n    } else if (!regularExpressions.alphaStartRe.test(newUsername.slice(0, 1))) {\n      swal('Uh Oh!', 'Username must start with a letter', 'error');\n      setMakingEdit(false);\n      return false;\n    } else {\n      let data = JSON.stringify({\n        uniqueUserId: props.user.uniqueUserId,\n        username: newUsername\n      });\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.17:3001/api/change/username',\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.data === 'username taken') {\n          swal('Uh Oh!', 'That username is taken. Please select another one!', 'error');\n          setMakingEdit(false);\n        } else {\n          swal('Great!', 'You successfully changed your username!', 'success');\n          props.dispatch({\n            type: 'user/updateUser',\n            payload: response.data.user\n          });\n          setNewUsername('');\n          setMakingEdit(false);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error trying to update your username!', 'error');\n        setMakingEdit(false);\n      });\n    }\n  }\n\n  function changePassword() {\n    //This function will handle changing the user password. \n    setMakingEdit(true);\n\n    if (newPassword.trim().length < 6) {\n      swal('Uh Oh!', 'Your password must be at least 6-characters long!', 'error');\n      setMakingEdit(false);\n      return false;\n    } else {\n      let data = JSON.stringify({\n        uniqueUserId: props.user.uniqueUserId,\n        password: newPassword\n      });\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.17:3001/api/change/password',\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        swal('Great!', 'You successfully changed your password', 'success');\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        setNewPassword('');\n        setMakingEdit(false);\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error updating your password!', 'error');\n        setMakingEdit(false);\n      });\n    }\n  }\n\n  function changeEmail() {\n    //This function will handle changing a user email \n    setMakingEdit(true);\n\n    if (!regularExpressions.emailRe.test(newEmail)) {\n      swal('Uh Oh!', 'Email must be in valid email format!', 'error');\n      setMakingEdit(false);\n      return false;\n    } else {\n      let data = JSON.stringify({\n        email: newEmail,\n        uniqueUserId: props.user.uniqueUserId\n      });\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.17:3001/api/change/email',\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        swal('Great!', 'Successfully updated your email address!', 'success');\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        setNewEmail('');\n        setMakingEdit(false);\n      });\n    }\n  }\n\n  function updateCity() {\n    //This function will handle updating the users city!\n    setMakingEdit(true);\n    let data = JSON.stringify({\n      uniqueUserId: props.user.uniqueUserId,\n      city: town\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.17:3001/api/update/user/city',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      swal('Great!', 'You have successfully updated your city!', 'success');\n      props.dispatch({\n        type: 'user/updateUser',\n        payload: response.data.user\n      });\n      setTown(myCities[0]);\n      setMakingEdit(false);\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error updating your city! Please try again!', 'error');\n      setMakingEdit(false);\n    });\n  }\n\n  if (props.user) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.topMarg,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          align: \"center\",\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          align: \"center\",\n          color: newUsername.length < 6 || newUsername.length > 24 ? 'error' : 'default',\n          children: [newUsername.length, \"/24\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: newUsername,\n          onChange: e => setNewUsername(e.target.value),\n          label: \"Update username\",\n          placeholder: props.user.username,\n          helperText: newUsername.length > 24 || newUsername.length < 6 ? 'Username must be between 6 and 24 characters long!' : 'Username must start with a letter and can only contain letters numbers and underscores with no spaces',\n          onKeyDown: preventSpaces,\n          color: \"primary\",\n          variant: \"outlined\",\n          \"aria-label\": \"Username\",\n          InputLabelProps: {\n            shrink: true\n          },\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: 20,\n            margin: 'auto'\n          },\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: changeUsername,\n          disabled: makingEdit,\n          children: makingEdit ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 39\n          }, this) : 'change username'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 30\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            align: \"center\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            variant: \"outlined\",\n            placeholer: \"Password\",\n            type: \"password\",\n            label: \"password\",\n            helperText: \"Password must be at least 6-characters long!\",\n            InputLabelProps: {\n              shrink: true\n            },\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginTop: 20\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: makingEdit,\n            onClick: changePassword,\n            children: makingEdit ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 43\n            }, this) : 'Update password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 25\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            align: \"center\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onKeyDown: preventSpaces,\n            value: newEmail,\n            onChange: e => setNewEmail(e.target.value),\n            placeholer: props.user.email,\n            label: \"Email\",\n            variant: \"outlined\",\n            InputLabelProps: {\n              shrink: true\n            },\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: makingEdit,\n            onClick: changeEmail,\n            style: {\n              marginTop: 25\n            },\n            children: makingEdit ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 43\n            }, this) : 'Change email'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          style: {\n            marginTop: 25\n          },\n          value: town,\n          onChange: (e, newVal) => setTown(newVal),\n          options: myCities,\n          getOptionLabel: option => option,\n          renderOption: option => /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 29\n          }, this),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            color: \"primary\",\n            variant: \"outlined\",\n            label: \"City\",\n            placeholder: \"City\",\n            helperText: \"If your city is not in the list, select the nearest city!\",\n            InputLabelProps: {\n              shrink: true\n            },\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: 20\n          },\n          color: \"primary\",\n          variant: \"contained\",\n          disabled: makingEdit,\n          onClick: updateCity,\n          children: makingEdit ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 39\n          }, this) : 'Update city'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: 30\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          align: \"center\",\n          children: \"Update state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: userState,\n          onChange: e => setUserState(e.target.value),\n          variant: \"outlined\",\n          color: \"primary\",\n          fullWidth: true,\n          children: myStates.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item,\n            children: item\n          }, index.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: 20\n          },\n          color: \"primary\",\n          variant: \"contained\",\n          disabled: makingEdit,\n          children: makingEdit ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 39\n          }, this) : 'Update State'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: true,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(UserSettings, \"f2RCc+HPrsBQAQMfmKIbEfquH7U=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = UserSettings;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    theme: state.userThemeReducer.primary\n  };\n}\n\nexport default connect(mapStateToProps)(UserSettings);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSettings\");","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/UserSettings.js"],"names":["React","useState","useEffect","useRef","Grid","Typography","Button","Backdrop","CircularProgress","TextField","Divider","validatorForm","textValidator","axios","connect","Autocomplete","Select","FormControl","FormLabel","FormControlLabel","FormGroup","Checkbox","SwatchesPicker","swal","useHistory","makeStyles","myCities","myStates","useStyles","topMarg","marginTop","gridMarg","UserSettings","props","history","classes","newUsername","setNewUsername","newPassword","setNewPassword","newEmail","setNewEmail","usernameRef","makingEdit","setMakingEdit","town","setTown","userState","setUserState","regularExpressions","usernameExpression","alphaStartRe","emailRe","user","push","method","url","uniqueUserId","then","response","dispatch","type","payload","data","profileTheme","catch","err","console","log","message","goBack","preventSpaces","e","keyCode","preventDefault","changeUsername","length","trim","test","slice","JSON","stringify","username","headers","changePassword","password","changeEmail","email","updateCity","city","target","value","shrink","margin","newVal","option","params","map","item","index","toString","mapStateToProps","state","userReducer","theme","userThemeReducer","primary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport { validatorForm, textValidator } from 'react-material-ui-form-validator';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { SwatchesPicker } from 'react-color';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst myCities = [\"Abbeville\",\"Aberdeen\",\"Abilene\",\"Abingdon\",\"Abington\",\"Acoma\",\"Ada\",\"Adams\",\"Adrian\",\"Aiken\",\"Ajo\",\"Akron\",\"Alameda\",\"Alamogordo\",\"Alamosa\",\"Albany\",\"Albert Lea\",\"Albuquerque\",\"Alcoa\",\"Alexander City\",\"Alexandria\",\"Alhambra\",\"Aliquippa\",\"Allentown\",\"Alliance\",\"Alma\",\"Alpine\",\"Alta\",\"Alton\",\"Altoona\",\"Altus\",\"Alva\",\"Amana Colonies\",\"Amarillo\",\"Ambridge\",\"American Fork\",\"Americus\",\"Ames\",\"Amesbury\",\"Amherst\",\"Amsterdam\",\"Anaconda\",\"Anacortes\",\"Anadarko\",\"Anaheim\",\"Anchorage\",\"Andalusia\",\"Anderson\",\"Andersonville\",\"Andover\",\"Ann Arbor\",\"Annapolis\",\"Anniston\",\"Ansonia\",\"Antioch\",\"Apalachicola\",\"Appleton\",\"Arcadia\",\"Ardmore\",\"Arkadelphia\",\"Arkansas City\",\"Arkansas Post\",\"Arlington\",\"Arlington Heights\",\"Artesia\",\"Arthur\",\"Asbury Park\",\"Asheboro\",\"Asheville\",\"Ashland\",\"Ashtabula\",\"Aspen\",\"Astoria\",\"Atchison\",\"Athens\",\"Athol\",\"Atlanta\",\"Atlantic City\",\"Atmore\",\"Attleboro\",\"Auburn\",\"Augusta\",\"Aurora\",\"Austin\",\"Avondale\",\"Babylon\",\"Bainbridge\",\"Baker City\",\"Bakersfield\",\"Baltimore\",\"Bangor\",\"Bar Harbor\",\"Baraboo\",\"Barberton\",\"Barbourville\",\"Bardstown\",\"Barnstable\",\"Barre\",\"Barrington\",\"Barstow\",\"Bartlesville\",\"Bartow\",\"Bastrop\",\"Batavia\",\"Batesville\",\"Bath\",\"Baton Rouge\",\"Battle Creek\",\"Bay City\",\"Bay Saint Louis\",\"Bayonne\",\"Baytown\",\"Beacon\",\"Beatrice\",\"Beaufort\",\"Beaumont\",\"Beaverton\",\"Beckley\",\"Bedford\",\"Belen\",\"Belfast\",\"Belle Fourche\",\"Belle Glade\",\"Bellefontaine\",\"Belleville\",\"Bellevue\",\"Bellingham\",\"Bellows Falls\",\"Belmont\",\"Beloit\",\"Belvidere\",\"Bemidji\",\"Bend\",\"Bennington\",\"Benton\",\"Benton Harbor\",\"Berea\",\"Berkeley\",\"Berlin\",\"Bessemer\",\"Bethany\",\"Bethesda-Chevy Chase\",\"Bethlehem\",\"Beverly\",\"Beverly Hills\",\"Biddeford\",\"Big Spring\",\"Billings\",\"Biloxi\",\"Binghamton\",\"Birmingham\",\"Bisbee\",\"Bismarck\",\"Blackfoot\",\"Blairsville\",\"Bloomfield\",\"Bloomfield Hills\",\"Bloomington\",\"Bloomsburg\",\"Bluefield\",\"Blytheville\",\"Boca Raton\",\"Bogalusa\",\"Boise\",\"Bonners Ferry\",\"Boone\",\"Boonesborough\",\"Boonville\",\"Boothbay Harbor\",\"Bordentown\",\"Borger\",\"Bossier City\",\"Boston\",\"Boulder\",\"Boulder City\",\"Bound Brook\",\"Bountiful\",\"Bourne\",\"Bowie\",\"Bowling Green\",\"Boys Town\",\"Bozeman\",\"Bradenton\",\"Bradford\",\"Brainerd\",\"Braintree\",\"Branford\",\"Branson\",\"Brattleboro\",\"Brea\",\"Breckenridge\",\"Bremerton\",\"Bridgeport\",\"Bridgeton\",\"Brigham City\",\"Brighton\",\"Bristol\",\"Brockton\",\"Bronx\",\"Brookfield\",\"Brookings\",\"Brookline\",\"Brooklyn\",\"Brownsville\",\"Brunswick\",\"Bryan\",\"Buckhannon\",\"Buena Park\",\"Buffalo\",\"Burbank\",\"Burlington\",\"Burns\",\"Butte\",\"Cadillac\",\"Cahokia\",\"Cairo\",\"Calais\",\"Caldwell\",\"Calexico\",\"Calhoun\",\"Calistoga\",\"Calumet City\",\"Cambridge\",\"Camden\",\"Campbellsville\",\"Canon City\",\"Canton\",\"Canyon\",\"Cape Coral\",\"Cape Girardeau\",\"Cape May\",\"Carbondale\",\"Caribou\",\"Carlinville\",\"Carlisle\",\"Carlsbad\",\"Carmel\",\"Carrollton\",\"Carson City\",\"Carthage\",\"Casa Grande\",\"Casper\",\"Castine\",\"Catonsville\",\"Cedar City\",\"Cedar Falls\",\"Cedar Rapids\",\"Central City\",\"Central Falls\",\"Centralia\",\"Chadron\",\"Chambersburg\",\"Champaign\",\"Chandler\",\"Chanute\",\"Chapel Hill\",\"Charles City\",\"Charles Town\",\"Charleston\",\"Charlestown\",\"Charlevoix\",\"Charlotte\",\"Charlottesville\",\"Chattanooga\",\"Chautauqua\",\"Cheboygan\",\"Cheektowaga\",\"Chelmsford\",\"Chelsea\",\"Cherokee\",\"Chesapeake\",\"Chester\",\"Cheyenne\",\"Chicago\",\"Chicago Heights\",\"Chickasaw\",\"Chickasha\",\"Chico\",\"Chicopee\",\"Chillicothe\",\"Chula Vista\",\"Cicero\",\"Cincinnati\",\"Clanton\",\"Claremont\",\"Claremore\",\"Clarksburg\",\"Clarksdale\",\"Clarksville\",\"Clayton\",\"Clearfield\",\"Clearwater\",\"Cleburne\",\"Cleveland\",\"Cleveland Heights\",\"Clifton\",\"Climax\",\"Clinton\",\"Clovis\",\"Cocoa Beach\",\"Cocoa-Rockledge\",\"Cody\",\"Coeur dâ€™Alene\",\"Coffeyville\",\"Cohasset\",\"Cohoes\",\"College Park\",\"College Station\",\"Collinsville\",\"Colorado Springs\",\"Columbia\",\"Columbus\",\"Compton\",\"Concord\",\"Coney Island\",\"Conneaut\",\"Connersville\",\"Conway\",\"Cookeville\",\"Cooperstown\",\"Coos Bay\",\"Coral Gables\",\"Cordova\",\"Corinth\",\"Corning\",\"Corona\",\"Coronado\",\"Corpus Christi\",\"Cortez\",\"Cortland\",\"Corvallis\",\"Corydon\",\"Costa Mesa\",\"Coulee Dam\",\"Council Bluffs\",\"Council Grove\",\"Coupeville\",\"Coventry\",\"Covington\",\"Cranford\",\"Cranston\",\"Crawfordsville\",\"Cripple Creek\",\"Crookston\",\"Crossett\",\"Crown Point\",\"Crystal City\",\"Cullman\",\"Culver City\",\"Cumberland\",\"Cushing\",\"Custer\",\"Cuyahoga Falls\",\"Dahlonega\",\"Dallas\",\"Dalton\",\"Daly City\",\"Danbury\",\"Danvers\",\"Danville\",\"Darien\",\"Darlington\",\"Dartmouth\",\"Davenport\",\"Davis\",\"Dayton\",\"Daytona Beach\",\"De Land\",\"De Smet\",\"DeKalb\",\"Deadwood\",\"Dearborn\",\"Decatur\",\"Dedham\",\"Deerfield Beach\",\"Defiance\",\"Del Rio\",\"Delaware\",\"Delray Beach\",\"Delta\",\"Deming\",\"Demopolis\",\"Denison\",\"Dennis\",\"Denton\",\"Denver\",\"Derby\",\"Derry\",\"Des Moines\",\"Des Plaines\",\"Detroit\",\"Devils Lake\",\"Dickinson\",\"Dillon\",\"Dixon\",\"Dodge City\",\"Dothan\",\"Douglas\",\"Dover\",\"Downey\",\"Dubuque\",\"Duluth\",\"Duncan\",\"Dunkirk\",\"Durango\",\"Durant\",\"Durham\",\"Duxbury\",\"Eagle Pass\",\"East Aurora\",\"East Chicago\",\"East Cleveland\",\"East Greenwich\",\"East Hampton\",\"East Hartford\",\"East Haven\",\"East Lansing\",\"East Liverpool\",\"East Moline\",\"East Orange\",\"East Point\",\"East Providence\",\"East Saint Louis\",\"Eastchester\",\"Eastham\",\"Easton\",\"Eastpointe\",\"Eastport\",\"Eau Claire\",\"Ecorse\",\"Edenton\",\"Edgartown\",\"Edinburg\",\"Edison\",\"Edmond\",\"Effingham\",\"El Centro\",\"El Cerrito\",\"El Dorado\",\"El Monte\",\"El Paso\",\"El Reno\",\"Elgin\",\"Elizabeth\",\"Elizabeth City\",\"Elizabethton\",\"Elizabethtown\",\"Elk City\",\"Elkhart\",\"Elkins\",\"Elko\",\"Elkton\",\"Ellensburg\",\"Ellsworth\",\"Elmhurst\",\"Elmira\",\"Elwood\",\"Ely\",\"Elyria\",\"Emmitsburg\",\"Emporia\",\"Enfield\",\"Englewood\",\"Enid\",\"Enterprise\",\"Ephrata\",\"Erie\",\"Escanaba\",\"Escondido\",\"Essex\",\"Estes Park\",\"Estherville\",\"Euclid\",\"Eufaula\",\"Eugene\",\"Eureka\",\"Evanston\",\"Evansville\",\"Eveleth\",\"Everett\",\"Excelsior Springs\",\"Exeter\",\"Fairbanks\",\"Fairfax\",\"Fairfield\",\"Fairhaven\",\"Fairmont\",\"Fall River\",\"Fallon\",\"Falls Church\",\"Falmouth\",\"Fargo\",\"Faribault\",\"Farmington\",\"Fayetteville\",\"Fergus Falls\",\"Ferguson\",\"Fernandina Beach\",\"Fillmore\",\"Findlay\",\"Fitchburg\",\"Fitzgerald\",\"Flagstaff\",\"Flint\",\"Florence\",\"Florissant\",\"Flushing\",\"Fond du Lac\",\"Fontana\",\"Forest Hills\",\"Forrest City\",\"Fort Benton\",\"Fort Collins\",\"Fort Dodge\",\"Fort Kent\",\"Fort Lauderdale\",\"Fort Lee\",\"Fort Morgan\",\"Fort Myers\",\"Fort Payne\",\"Fort Pierce\",\"Fort Scott\",\"Fort Smith\",\"Fort Valley\",\"Fort Walton Beach\",\"Fort Wayne\",\"Fort Worth\",\"Framingham\",\"Frankfort\",\"Franklin\",\"Frederick\",\"Fredericksburg\",\"Fredonia\",\"Freeport\",\"Fremont\",\"French Lick\",\"Fresno\",\"Fullerton\",\"Fulton\",\"Gadsden\",\"Gaffney\",\"Gainesville\",\"Galena\",\"Galesburg\",\"Gallatin\",\"Gallipolis\",\"Gallup\",\"Galveston\",\"Garden City\",\"Garden Grove\",\"Gardiner\",\"Garland\",\"Gary\",\"Gastonia\",\"Gatlinburg\",\"Geneva\",\"Genoa\",\"Georgetown\",\"Germantown\",\"Gettysburg\",\"Gila Bend\",\"Gillette\",\"Glassboro\",\"Glen Ellyn\",\"Glendale\",\"Glendive\",\"Glens Falls\",\"Glenview\",\"Glenwood Springs\",\"Globe\",\"Gloucester\",\"Gloversville\",\"Golden\",\"Goldfield\",\"Goldsboro\",\"Goliad\",\"Goshen\",\"Grafton\",\"Grand Forks\",\"Grand Haven\",\"Grand Island\",\"Grand Junction\",\"Grand Rapids\",\"Granite City\",\"Grants\",\"Grants Pass\",\"Grayling\",\"Great Barrington\",\"Great Bend\",\"Great Falls\",\"Great Neck\",\"Greeley\",\"Green Bay\",\"Green River\",\"Greenbelt\",\"Greeneville\",\"Greenfield\",\"Greensboro\",\"Greensburg\",\"Greenville\",\"Greenwich\",\"Greenwood\",\"Grenada\",\"Gretna\",\"Grinnell\",\"Grosse Pointe\",\"Groton\",\"Guilford\",\"Gulfport\",\"Gunnison\",\"Guntersville\",\"Guthrie\",\"Guymon\",\"Hackensack\",\"Haddonfield\",\"Hagerstown\",\"Haines\",\"Halifax\",\"Hallandale Beach\",\"Hamden\",\"Hamilton\",\"Hammond\",\"Hammondsport\",\"Hampton\",\"Hanalei\",\"Hancock\",\"Hannibal\",\"Hanover\",\"Harlan\",\"Harlem\",\"Harlingen\",\"Harmony\",\"Harpers Ferry\",\"Harrisburg\",\"Harrison\",\"Harrodsburg\",\"Hartford\",\"Hartsville\",\"Harwich\",\"Hastings\",\"Hattiesburg\",\"Haverhill\",\"Havre\",\"Hays\",\"Hayward\",\"Hazard\",\"Hazleton\",\"Heber City\",\"Helena\",\"Hempstead\",\"Henderson\",\"Herkimer\",\"Herrin\",\"Hershey\",\"Hialeah\",\"Hibbing\",\"Hickory\",\"High Point\",\"Highland Park\",\"Hillsboro\",\"Hillsborough\",\"Hilo\",\"Hingham\",\"Hinton\",\"Hobart\",\"Hobbs\",\"Hoboken\",\"Hodgenville\",\"Holdenville\",\"Holland\",\"Holly Springs\",\"Hollywood\",\"Holyoke\",\"Homer\",\"Homestead\",\"Honaunau\",\"Honesdale\",\"Honolulu\",\"Hood River\",\"Hope\",\"Hopewell\",\"Hopkinsville\",\"Hoquiam\",\"Hot Springs\",\"Houghton\",\"Houlton\",\"Houma\",\"Houston\",\"Hudson\",\"Hugo\",\"Huntington\",\"Huntington Beach\",\"Huntsville\",\"Huron\",\"Hutchinson\",\"Hyannis\",\"Hyattsville\",\"Hyde Park\",\"Idaho City\",\"Idaho Falls\",\"Ilion\",\"Independence\",\"Indiana\",\"Indianapolis\",\"Indianola\",\"Indio\",\"Inglewood\",\"Interlochen\",\"International Falls\",\"Iowa City\",\"Ipswich\",\"Iron Mountain\",\"Ironwood\",\"Irvine\",\"Irving\",\"Irvington\",\"Ishpeming\",\"Ithaca\",\"Jackson\",\"Jacksonville\",\"Jamestown\",\"Janesville\",\"Jasper\",\"Jeannette\",\"Jefferson City\",\"Jeffersonville\",\"Jersey City\",\"Jim Thorpe\",\"John Day\",\"Johnson City\",\"Johnstown\",\"Joliet\",\"Jonesboro\",\"Jonesborough\",\"Joplin\",\"Junction City\",\"Juneau\",\"Kahului\",\"Kalamazoo\",\"Kalispell\",\"Kanab\",\"Kaneohe\",\"Kankakee\",\"Kansas City\",\"Kapaa\",\"Kaskaskia\",\"Kawaihae\",\"Kearney\",\"Keene\",\"Kellogg\",\"Kelso\",\"Kennebunkport\",\"Kennewick\",\"Kenosha\",\"Kent\",\"Keokuk\",\"Ketchikan\",\"Kettering\",\"Kewanee\",\"Key West\",\"Keyser\",\"Kilgore\",\"Killeen\",\"Kingman\",\"Kingsport\",\"Kingston\",\"Kingsville\",\"Kinston\",\"Kirksville\",\"Kittery\",\"Kitty Hawk\",\"Klamath Falls\",\"Knoxville\",\"Kodiak\",\"Kokomo\",\"Kotzebue\",\"La Crosse\",\"La Grande\",\"La Grange\",\"La Habra\",\"La Junta\",\"La Salle\",\"Lackawanna\",\"Laconia\",\"Lafayette\",\"Laguna Beach\",\"Lahaina\",\"Laie\",\"Lake Charles\",\"Lake City\",\"Lake Forest\",\"Lake Geneva\",\"Lake Havasu City\",\"Lake Oswego\",\"Lake Placid\",\"Lake Wales\",\"Lakehurst\",\"Lakeland\",\"Lakeview\",\"Lakewood\",\"Lamar\",\"Lancaster\",\"Lander\",\"Lansing\",\"Laramie\",\"Laredo\",\"Largo\",\"Las Cruces\",\"Las Vegas\",\"Laurel\",\"Lawrence\",\"Lawton\",\"Layton\",\"Lead\",\"Leadville\",\"Leavenworth\",\"Lebanon\",\"Lehi\",\"Lenox\",\"Leominster\",\"Levittown\",\"Lewes\",\"Lewisburg\",\"Lewiston\",\"Lewistown\",\"Lexington\",\"Liberal\",\"Libertyville\",\"Lima\",\"Lincoln\",\"Lisle\",\"Litchfield\",\"Little Falls\",\"Little Rock\",\"Littleton\",\"Livermore\",\"Livingston\",\"Livonia\",\"Lock Haven\",\"Lockport\",\"Lodi\",\"Logan\",\"Lombard\",\"Lompoc\",\"Long Beach\",\"Long Branch\",\"Longmont\",\"Longview\",\"Lorain\",\"Los Alamos\",\"Los Angeles\",\"Louisville\",\"Loveland\",\"Lovington\",\"Lowell\",\"Lower Southampton\",\"Lubbock\",\"Lubec\",\"Ludington\",\"Ludlow\",\"Lufkin\",\"Lumberton\",\"Lynchburg\",\"Lynn\",\"Machias\",\"Mackinaw City\",\"Macomb\",\"Macon\",\"Madison\",\"Magnolia\",\"Malden\",\"Malibu\",\"Mamaroneck\",\"Manassas\",\"Manchester\",\"Mandan\",\"Manhattan\",\"Manistee\",\"Manitowoc\",\"Mankato\",\"Mansfield\",\"Manti\",\"Marblehead\",\"Marietta\",\"Marinette\",\"Marion\",\"Marlborough\",\"Marquette\",\"Marshall\",\"Martinez\",\"Martins Ferry\",\"Martinsburg\",\"Martinsville\",\"Marysville\",\"Maryville\",\"Mason City\",\"Massena\",\"Massillon\",\"Mattoon\",\"Mayfield\",\"Maysville\",\"McAlester\",\"McAllen\",\"McCook\",\"McKeesport\",\"McKinney\",\"McMinnville\",\"McPherson\",\"Meadville\",\"Medford\",\"Medicine Lodge\",\"Melbourne\",\"Memphis\",\"Menasha\",\"Menlo Park\",\"Menominee\",\"Mentor\",\"Merced\",\"Meriden\",\"Meridian\",\"Mesa\",\"Mesquite\",\"Mexico\",\"Miami\",\"Miami Beach\",\"Michigan City\",\"Middlebury\",\"Middlesboro\",\"Middletown\",\"Midland\",\"Midwest City\",\"Milan\",\"Milbank\",\"Miles City\",\"Milford\",\"Millburn\",\"Milledgeville\",\"Millville\",\"Milton\",\"Milwaukee\",\"Minden\",\"Mineola\",\"Minneapolis\",\"Minot\",\"Mishawaka\",\"Mission\",\"Missoula\",\"Mitchell\",\"Moab\",\"Mobile\",\"Mobridge\",\"Modesto\",\"Moline\",\"Monett\",\"Monmouth\",\"Monroe\",\"Monroeville\",\"Montclair\",\"Monterey\",\"Montgomery\",\"Monticello\",\"Montpelier\",\"Montrose\",\"Moore\",\"Moorhead\",\"Morehead City\",\"Morgan City\",\"Morganton\",\"Morgantown\",\"Morrilton\",\"Morristown\",\"Moscow\",\"Moses Lake\",\"Moundsville\",\"Mount Clemens\",\"Mount Holly\",\"Mount Pleasant\",\"Mount Vernon\",\"Mountain View\",\"Muncie\",\"Mundelein\",\"Murfreesboro\",\"Murray\",\"Muscatine\",\"Muskegon\",\"Muskogee\",\"Myrtle Beach\",\"Mystic\",\"Nacogdoches\",\"Nags Head\",\"Nahant\",\"Nampa\",\"Nanticoke\",\"Naperville\",\"Naples\",\"Nappanee\",\"Narragansett\",\"Nashua\",\"Nashville\",\"Natchez\",\"Natchitoches\",\"Natick\",\"Naugatuck\",\"Nauvoo\",\"Nebraska City\",\"Needles\",\"Neenah\",\"Neosho\",\"Nephi\",\"New Albany\",\"New Bedford\",\"New Bern\",\"New Braunfels\",\"New Britain\",\"New Brunswick\",\"New Castle\",\"New Glarus\",\"New Harmony\",\"New Haven\",\"New Hope\",\"New Iberia\",\"New Kensington\",\"New London\",\"New Madrid\",\"New Market\",\"New Martinsville\",\"New Milford\",\"New Orleans\",\"New Paltz\",\"New Philadelphia\",\"New Rochelle\",\"New Smyrna Beach\",\"New Ulm\",\"New Windsor\",\"New York City\",\"Newark\",\"Newberg\",\"Newburgh\",\"Newburyport\",\"Newcastle\",\"Newport\",\"Newport Beach\",\"Newport News\",\"Newton\",\"Niagara Falls\",\"Niles\",\"Nogales\",\"Nome\",\"Norfolk\",\"Normal\",\"Norman\",\"Norris\",\"Norristown\",\"North Adams\",\"North Chicago\",\"North College Hill\",\"North Haven\",\"North Hempstead\",\"North Kingstown\",\"North Las Vegas\",\"North Little Rock\",\"North Platte\",\"Northampton\",\"Northfield\",\"Norton\",\"Norwalk\",\"Norwich\",\"Norwood\",\"Novato\",\"Nyack\",\"Oak Harbor\",\"Oak Park\",\"Oak Ridge\",\"Oakland\",\"Oberlin\",\"Ocala\",\"Ocean City\",\"Ocean Springs\",\"Oceanside\",\"Oconto\",\"Odessa\",\"Ogden\",\"Ogdensburg\",\"Oil City\",\"Ojai\",\"Oklahoma City\",\"Okmulgee\",\"Olathe\",\"Old Saybrook\",\"Olean\",\"Olympia\",\"Omaha\",\"Oneida\",\"Oneonta\",\"Ontario\",\"Opelika\",\"Opelousas\",\"Oraibi\",\"Orange\",\"Orangeburg\",\"Orderville\",\"Oregon\",\"Oregon City\",\"Orem\",\"Orlando\",\"Ormond Beach\",\"Orono\",\"Oroville\",\"Osawatomie\",\"Osceola\",\"Oshkosh\",\"Oskaloosa\",\"Ossining\",\"Oswego\",\"Ottawa\",\"Ottumwa\",\"Ouray\",\"Overland Park\",\"Owatonna\",\"Owensboro\",\"Oxford\",\"Oxnard\",\"Oyster Bay\",\"Ozark\",\"Pacific Grove\",\"Paducah\",\"Pagosa Springs\",\"Painesville\",\"Palatine\",\"Palatka\",\"Palm Bay\",\"Palm Beach\",\"Palm Springs\",\"Palmdale\",\"Palmer\",\"Palmyra\",\"Palo Alto\",\"Pampa\",\"Panama City\",\"Panguitch\",\"Paris\",\"Park City\",\"Park Forest\",\"Park Ridge\",\"Parkersburg\",\"Parma\",\"Parsippanyâ€“Troy Hills\",\"Pasadena\",\"Pascagoula\",\"Pasco\",\"Pass Christian\",\"Passaic\",\"Paterson\",\"Pauls Valley\",\"Pawhuska\",\"Pawtucket\",\"Payson\",\"Peabody\",\"Pecos\",\"Peekskill\",\"Pekin\",\"Pendleton\",\"Pensacola\",\"Peoria\",\"Perry\",\"Perth Amboy\",\"Peru\",\"Peshtigo\",\"Petaluma\",\"Peterborough\",\"Petersburg\",\"Petoskey\",\"Pharr\",\"Phenix City\",\"Philadelphia\",\"Philippi\",\"Phoenix\",\"Phoenixville\",\"Pierre\",\"Pine Bluff\",\"Pinehurst\",\"Pipestone\",\"Piqua\",\"Pittsburg\",\"Pittsburgh\",\"Pittsfield\",\"Plainfield\",\"Plains\",\"Plainview\",\"Plano\",\"Plattsburgh\",\"Plattsmouth\",\"Plymouth\",\"Pocatello\",\"Point Pleasant\",\"Point Roberts\",\"Pomona\",\"Pompano Beach\",\"Ponca City\",\"Pontiac\",\"Port Angeles\",\"Port Arthur\",\"Port Gibson\",\"Port Hueneme\",\"Port Huron\",\"Port Lavaca\",\"Port Orford\",\"Port Washington\",\"Portage\",\"Portales\",\"Portland\",\"Portsmouth\",\"Potsdam\",\"Pottstown\",\"Pottsville\",\"Poughkeepsie\",\"Powell\",\"Prairie du Chien\",\"Prescott\",\"Presque Isle\",\"Price\",\"Prichard\",\"Priest River\",\"Princeton\",\"Prineville\",\"Providence\",\"Provincetown\",\"Provo\",\"Pryor\",\"Pueblo\",\"Pullman\",\"Put-in-Bay\",\"Puyallup\",\"Queens\",\"Quincy\",\"Racine\",\"Raleigh\",\"Rancho Cucamonga\",\"Randolph\",\"Rantoul\",\"Rapid City\",\"Raton\",\"Rawlins\",\"Reading\",\"Red Bluff\",\"Red Cloud\",\"Red Wing\",\"Redding\",\"Redlands\",\"Redmond\",\"Redondo Beach\",\"Redwood City\",\"Reedsport\",\"Reno\",\"Rensselaer\",\"Renton\",\"Reston\",\"Revere\",\"Rexburg\",\"Rhinelander\",\"Richardson\",\"Richland\",\"Richmond\",\"Ridgewood\",\"Ripon\",\"River Forest\",\"Riverside\",\"Riverton\",\"Roanoke\",\"Rochester\",\"Rock Hill\",\"Rock Island\",\"Rock Springs\",\"Rockford\",\"Rockland\",\"Rockville\",\"Rocky Mount\",\"Rogers\",\"Rolla\",\"Rome\",\"Romney\",\"Roseburg\",\"Roselle\",\"Roseville\",\"Roswell\",\"Rotterdam\",\"Royal Oak\",\"Rugby\",\"Rumford\",\"Ruston\",\"Rutherford\",\"Rutland\",\"Rye\",\"Saco\",\"Sacramento\",\"Sag Harbor\",\"Saginaw\",\"Saint Albans\",\"Saint Augustine\",\"Saint Charles\",\"Saint Cloud\",\"Saint George\",\"Saint Ignace\",\"Saint Johnsbury\",\"Saint Joseph\",\"Saint Louis\",\"Saint Martinville\",\"Saint Marys City\",\"Saint Paul\",\"Saint Petersburg\",\"Sainte Genevieve\",\"Salem\",\"Salina\",\"Salinas\",\"Salisbury\",\"Sallisaw\",\"Salt Lake City\",\"San Angelo\",\"San Antonio\",\"San Bernardino\",\"San Clemente\",\"San Diego\",\"San Felipe\",\"San Fernando\",\"San Francisco\",\"San Gabriel\",\"San Jose\",\"San Juan Capistrano\",\"San Leandro\",\"San Luis Obispo\",\"San Marcos\",\"San Marino\",\"San Mateo\",\"San Pedro\",\"San Rafael\",\"San Simeon\",\"Sand Springs\",\"Sandusky\",\"Sandwich\",\"Sanford\",\"Santa Ana\",\"Santa Barbara\",\"Santa Clara\",\"Santa Clarita\",\"Santa Claus\",\"Santa Cruz\",\"Santa Fe\",\"Santa Monica\",\"Santa Rosa\",\"Sapulpa\",\"Saranac Lake\",\"Sarasota\",\"Saratoga Springs\",\"Saugus\",\"Sauk Centre\",\"Sault Sainte Marie\",\"Sausalito\",\"Savannah\",\"Scarborough\",\"Scarsdale\",\"Schenectady\",\"Scottsboro\",\"Scottsdale\",\"Scranton\",\"Searcy\",\"Seaside\",\"Seattle\",\"Sebring\",\"Sedalia\",\"Selma\",\"Seminole\",\"Seneca Falls\",\"Seward\",\"Seymour\",\"Shaker Heights\",\"Shamokin\",\"Sharon\",\"Shawnee\",\"Shawneetown\",\"Sheboygan\",\"Sheffield\",\"Shelby\",\"Shelbyville\",\"Shelton\",\"Shepherdstown\",\"Sheridan\",\"Sherman\",\"Shiprock\",\"Shreveport\",\"Sidney\",\"Sierra Vista\",\"Silver City\",\"Silver Spring\",\"Silverton\",\"Simi Valley\",\"Simsbury\",\"Sioux City\",\"Sioux Falls\",\"Sitka\",\"Skagway\",\"Skokie\",\"Smith Center\",\"Smyrna\",\"Socorro\",\"Somersworth\",\"Somerville\",\"Sonoma\",\"South Bend\",\"South Charleston\",\"South Hadley\",\"South Holland\",\"South Kingstown\",\"South Orange Village\",\"South Saint Paul\",\"South San Francisco\",\"Southampton\",\"Southington\",\"Spanish Fork\",\"Sparks\",\"Spartanburg\",\"Spearfish\",\"Spokane\",\"Spring Green\",\"Springfield\",\"Springville\",\"Stamford\",\"Starkville\",\"State College\",\"Staten Island\",\"Staunton\",\"Steamboat Springs\",\"Sterling\",\"Steubenville\",\"Stevens Point\",\"Stillwater\",\"Stockbridge\",\"Stockton\",\"Stonington\",\"Stony Brook\",\"Stony Point\",\"Stoughton\",\"Stratford\",\"Streator\",\"Stroudsburg\",\"Sturbridge\",\"Sturgeon Bay\",\"Sturgis\",\"Stuttgart\",\"Sudbury\",\"Suffolk\",\"Summersville\",\"Summit\",\"Sumter\",\"Sun Valley\",\"Sunbury\",\"Sunnyvale\",\"Superior\",\"Susanville\",\"Swarthmore\",\"Sweetwater\",\"Sylacauga\",\"Syracuse\",\"Tacoma\",\"Tahlequah\",\"Takoma Park\",\"Talladega\",\"Tallahassee\",\"Tamaqua\",\"Tampa\",\"Taos\",\"Tarpon Springs\",\"Tarrytown\",\"Taunton\",\"Telluride\",\"Tempe\",\"Temple\",\"Ten Sleep\",\"Terre Haute\",\"Tewksbury\",\"Texarkana\",\"Texas City\",\"The Dalles\",\"The Village\",\"Thermopolis\",\"Thibodaux\",\"Thousand Oaks\",\"Ticonderoga\",\"Tiffin\",\"Tillamook\",\"Titusville\",\"Tiverton\",\"Toccoa\",\"Toledo\",\"Tombstone\",\"Tonawanda\",\"Tooele\",\"Topeka\",\"Torrance\",\"Torrington\",\"Totowa\",\"Towson\",\"Traverse City\",\"Trenton\",\"Trinidad\",\"Troy\",\"Truro\",\"Truth or Consequences\",\"Tucson\",\"Tucumcari\",\"Tullahoma\",\"Tulsa\",\"Tupelo\",\"Turlock\",\"Tuscaloosa\",\"Tuscumbia\",\"Tuskegee\",\"Twin Falls\",\"Tyler\",\"Ukiah\",\"Union\",\"Union City\",\"Uniontown\",\"Urbana\",\"Utica\",\"Uvalde\",\"Vail\",\"Valdez\",\"Valdosta\",\"Vallejo\",\"Valley City\",\"Valparaiso\",\"Van Buren\",\"Vancouver\",\"Vandalia\",\"Venice\",\"Ventura\",\"Vermillion\",\"Vernal\",\"Vicksburg\",\"Victoria\",\"Victorville\",\"Vincennes\",\"Vineland\",\"Vinita\",\"Virden\",\"Virginia\",\"Virginia Beach\",\"Virginia City\",\"Visalia\",\"Wabash\",\"Waco\",\"Wahiawa\",\"Wahpeton\",\"Wailuku\",\"Waimea\",\"Walla Walla\",\"Wallingford\",\"Walnut Creek\",\"Walpi\",\"Walsenburg\",\"Warm Springs\",\"Warner Robins\",\"Warren\",\"Warrensburg\",\"Warwick\",\"Washington\",\"Waterbury\",\"Waterford\",\"Waterloo\",\"Watertown\",\"Waterville\",\"Watervliet\",\"Watkins Glen\",\"Watts\",\"Waukegan\",\"Waukesha\",\"Wausau\",\"Wauwatosa\",\"Waycross\",\"Wayne\",\"Waynesboro\",\"Weatherford\",\"Webster\",\"Webster City\",\"Weehawken\",\"Weirton\",\"Welch\",\"Wellesley\",\"Wellfleet\",\"Wellsburg\",\"Wenatchee\",\"West Allis\",\"West Bend\",\"West Bridgewater\",\"West Chester\",\"West Covina\",\"West Des Moines\",\"West Hartford\",\"West Haven\",\"West Lafayette\",\"West Memphis\",\"West New York\",\"West Orange\",\"West Palm Beach\",\"West Plains\",\"West Point\",\"West Seneca\",\"West Springfield\",\"Westerly\",\"Westfield\",\"Westminster\",\"Weston\",\"Westport\",\"Wethersfield\",\"Wewoka\",\"Weymouth\",\"Wheaton\",\"Wheeling\",\"White Plains\",\"White Springs\",\"White Sulphur Springs\",\"Whitman\",\"Whittier\",\"Wichita\",\"Wichita Falls\",\"Wickford\",\"Wilkes-Barre\",\"Williamsburg\",\"Williamson\",\"Williamsport\",\"Williamstown\",\"Willimantic\",\"Willingboro\",\"Williston\",\"Willmar\",\"Wilmette\",\"Wilmington\",\"Wilson\",\"Winchester\",\"Windham\",\"Window Rock\",\"Windsor\",\"Windsor Locks\",\"Winnemucca\",\"Winnetka\",\"Winona\",\"Winooski\",\"Winslow\",\"Winsted\",\"Winston-Salem\",\"Winter Haven\",\"Winter Park\",\"Wisconsin Dells\",\"Woburn\",\"Wood River\",\"Woodbridge\",\"Woodland\",\"Woods Hole\",\"Woodstock\",\"Woodward\",\"Woonsocket\",\"Wooster\",\"Worcester\",\"Worland\",\"Worthington\",\"Wyandotte\",\"Xenia\",\"Yakima\",\"Yankton\",\"Yazoo City\",\"Yellow Springs\",\"Yonkers\",\"Yorba Linda\",\"York\",\"Youngstown\",\"Ypsilanti\",\"Ysleta\",\"Yuba City\",\"Yuma\",\"Zanesville\",\"Zion\", \"Zionsville\"];\n\nconst myStates = [\"Alabama\",\"Alaska\",\"Arizona\",\"Arkansas\",\"California\",\"Colorado\",\"Connecticut\",\"Delaware\",\"Florida\",\"Georgia\",\"Hawaii\",\"Idaho\",\"Illinois\",\"Indiana\",\"Iowa\",\"Kansas\",\"Kentucky\",\"Louisiana\",\"Maine\",\"Maryland\",\"Massachusetts\",\"Michigan\",\"Minnesota\",\"Mississippi\",\"Missouri\",\"Montana\",\"Nebraska\",\"Nevada\",\"New Hampshire\",\"New Jersey\",\"New Mexico\",\"New York\",\"North Carolina\",\"North Dakota\",\"Ohio\",\"Oklahoma\",\"Oregon\",\"Pennsylvania\",\"Rhode Island\",\"South Carolina\",\"South Dakota\",\"Tennessee\",\"Texas\",\"Utah\",\"Vermont\",\"Virginia\",\"Washington\",\"West Virginia\",\"Wisconsin\",\"Wyoming\"];\n\n\nconst useStyles = makeStyles(({\n    topMarg: {\n        marginTop: 100,\n    },\n    gridMarg: {\n        marginTop: 25,\n    },\n}));\n\nfunction UserSettings(props) {\n    const history = useHistory(); //Variable for navigation. \n    const classes = useStyles(); //Variable for custom styles\n    const [newUsername, setNewUsername] = useState(''); //Variable and setter for updated username\n    const [newPassword, setNewPassword] = useState(''); //Variable and setter for a new password\n    const [newEmail, setNewEmail] = useState(''); //Variable and setter for a new emabil address. \n    const usernameRef = useRef(null);\n    const [makingEdit, setMakingEdit] = useState(false); //Variable and setter to disable buttons when change is being made\n    const [town, setTown] = useState(myCities[0]); //Variable and setter for selected city.\n    const [userState, setUserState] = useState(myStates[0]); //This will be the home state that the user is from.\n    const regularExpressions = {\n        usernameExpression: /^\\w+$/,\n        alphaStartRe: /^[A-Za-z]+$/,\n        emailRe: /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/,\n    }; //These are the regular expressions that must be matched!\n\n    useEffect(() => {\n        //First we need to see if the user is logged in. If not, we re-route them home. \n        if(props.user === null) {\n            swal(\n                'Uh Oh!',\n                'You must be logged in to manage your settings!',\n                'error',\n            );\n\n            history.push('/');\n        }\n        else {\n            return axios({\n                method: 'GET',\n                url: `http://192.168.0.17:3001/api/grab/user/${props.user.uniqueUserId}`,\n            }).then(response => {\n                //After the call, update the user and the theme color. \n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\n                props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error trying to update your settings!',\n                    'error',\n                );\n\n                history.goBack(1);\n            });\n        }\n    }, []);\n\n    function preventSpaces(e) {\n        //This function will prevent a user from adding spaces to their username \n        if(e.keyCode === 32) {\n            e.preventDefault();\n            return false;\n        }\n    }\n\n    function changeUsername() {\n        //This function will handle updating a username \n        setMakingEdit(true);\n\n        if(newUsername.length.trim < 6) {\n            swal(\n                'Uh Oh!',\n                'Username must be at least 6 characters long!',\n                'error',\n            ); \n            setMakingEdit(false);\n            return false;\n        }\n        else if(newUsername.length > 24) {\n            swal(\n                'Uh Oh!',\n                'Username must not be more than 24 characters long!',\n                'error',\n            ); \n            setMakingEdit(false);\n            return false;\n        }\n        else if(!regularExpressions.usernameExpression.test(newUsername)) {\n            swal(\n                'Uh Oh!',\n                'Username can only contain letters, numbers, and underscores, and it must start with a letter!',\n                'error',\n            ); \n            setMakingEdit(false);\n            return false;\n        }\n        else if(!regularExpressions.alphaStartRe.test(newUsername.slice(0, 1))) {\n            swal(\n                'Uh Oh!',\n                'Username must start with a letter',\n                'error',\n            ); \n            setMakingEdit(false);\n            return false;\n        }\n        else {\n            let data = JSON.stringify({\n                uniqueUserId: props.user.uniqueUserId,\n                username: newUsername,\n            });\n\n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/change/username',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                if(response.data === 'username taken') {\n                    swal(\n                        'Uh Oh!',\n                        'That username is taken. Please select another one!',\n                        'error',\n                    );\n                    setMakingEdit(false);\n                }\n                else {\n                    swal(\n                        'Great!',\n                        'You successfully changed your username!',\n                        'success',\n                    );\n                    props.dispatch({type: 'user/updateUser', payload: response.data.user});\n                    setNewUsername('');\n                    setMakingEdit(false);\n                }\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error trying to update your username!',\n                    'error',\n                );\n                setMakingEdit(false);\n            });\n        }\n    }\n\n    function changePassword() {\n        //This function will handle changing the user password. \n        setMakingEdit(true);\n        if(newPassword.trim().length < 6) {\n            swal(\n                'Uh Oh!',\n                'Your password must be at least 6-characters long!',\n                'error',\n            );\n            setMakingEdit(false);\n            return false;\n        }\n        else {\n            let data = JSON.stringify({\n                uniqueUserId: props.user.uniqueUserId,\n                password: newPassword,\n            });\n\n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/change/password',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                swal(\n                    'Great!',\n                    'You successfully changed your password',\n                    'success',\n                );\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\n                setNewPassword('');\n                setMakingEdit(false);\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error updating your password!',\n                    'error',\n                );\n                setMakingEdit(false);\n            });\n        }\n    }\n\n    function changeEmail(){\n        //This function will handle changing a user email \n        setMakingEdit(true);\n\n        if(!regularExpressions.emailRe.test(newEmail)) {\n            swal(\n                'Uh Oh!',\n                'Email must be in valid email format!',\n                'error',\n            );\n            setMakingEdit(false);\n            return false;\n        }\n        else {\n            let data = JSON.stringify({\n                email: newEmail,\n                uniqueUserId: props.user.uniqueUserId,\n            });\n\n            return axios({\n                method: 'POST',\n                url: 'http://192.168.0.17:3001/api/change/email',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                swal(\n                    'Great!',\n                    'Successfully updated your email address!',\n                    'success',\n                )\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\n                setNewEmail('');\n                setMakingEdit(false);\n            });\n        }\n    }\n\n    function updateCity() {\n        //This function will handle updating the users city!\n        setMakingEdit(true);\n\n        let data = JSON.stringify({\n            uniqueUserId: props.user.uniqueUserId,\n            city: town,\n        });\n\n        return axios({\n            method: 'POST',\n            url: 'http://192.168.0.17:3001/api/update/user/city',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            swal(\n                'Great!',\n                'You have successfully updated your city!',\n                'success',\n            );\n            props.dispatch({type: 'user/updateUser', payload: response.data.user});\n            setTown(myCities[0]);\n            setMakingEdit(false);\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error updating your city! Please try again!',\n                'error',\n            );\n            setMakingEdit(false);\n        });\n    }\n\n    if(props.user) {\n        return (\n            <Grid \n                container \n                className={classes.topMarg}\n            >\n                <Grid \n                    item \n                    xs={12} \n                >\n                    <Typography\n                        variant='h6' \n                        component='h6' \n                        align='center' \n                    >\n                        Settings \n                    </Typography>\n                </Grid>\n                <Grid \n                    item \n                    xs={12} \n                >\n                    <Typography \n                        variant='h6' \n                        component='h6' \n                        align='center' \n                        color={(newUsername.length < 6 || newUsername.length > 24) ? 'error' : 'default'}\n                    >\n                        {newUsername.length}/24\n                    </Typography>\n                    <TextField \n                        value={newUsername}\n                        onChange={e => setNewUsername(e.target.value)}\n                        label='Update username'\n                        placeholder={props.user.username}\n                        helperText={(newUsername.length > 24 || newUsername.length < 6) ? 'Username must be between 6 and 24 characters long!' : 'Username must start with a letter and can only contain letters numbers and underscores with no spaces'}\n                        onKeyDown={preventSpaces}\n                        color='primary' \n                        variant='outlined'\n                        aria-label='Username' \n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        fullWidth\n                    />\n                    <Button \n                        style={{\n                            marginTop: 20,\n                            margin: 'auto',\n                        }}\n                        color='primary' \n                        variant='contained' \n                        onClick={changeUsername}\n                        disabled={makingEdit}\n                    >\n                        {makingEdit ? <CircularProgress /> : 'change username'}\n                    </Button>\n                </Grid>\n                <Grid \n                    xs={12} \n                    item \n                >\n                    <div \n                        style={{\n                            marginTop: 30,\n                        }}\n                    >\n                        <Typography \n                            variant='h6' \n                            component='h6' \n                            align='center'\n                        >\n                            Password \n                        </Typography>\n                        <TextField \n                            value={newPassword} \n                            onChange={e => setNewPassword(e.target.value)}\n                            variant='outlined' \n                            placeholer='Password' \n                            type='password' \n                            label='password'\n                            helperText='Password must be at least 6-characters long!' \n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            fullWidth \n                        />\n                        <Button \n                            style={{\n                                marginTop: 20,\n                            }}\n                            variant='contained' \n                            color='primary' \n                            disabled={makingEdit} \n                            onClick={changePassword}\n                        >\n                            {makingEdit ? <CircularProgress /> : 'Update password'} \n                        </Button>\n                    </div>\n                </Grid>\n                <Grid \n                    item\n                    xs={12}\n                >\n                    <div \n                        style={{\n                            marginTop: 25,\n                        }}\n                    >\n                        <Typography \n                            variant='h6' \n                            component='h6' \n                            align='center'\n                        >\n                            Email\n                        </Typography>\n                        <TextField \n                            onKeyDown={preventSpaces}\n                            value={newEmail} \n                            onChange={e => setNewEmail(e.target.value)}\n                            placeholer={props.user.email} \n                            label='Email' \n                            variant='outlined' \n                            InputLabelProps = {{\n                                shrink: true,\n                            }}\n                            fullWidth \n                        />\n                        <Button \n                            variant='contained' \n                            color='primary' \n                            disabled={makingEdit} \n                            onClick={changeEmail} \n                            style={{\n                                marginTop: 25,\n                            }}\n                        >\n                            {makingEdit ? <CircularProgress /> : 'Change email'}\n                        </Button>\n                    </div>\n                </Grid>\n                <Divider />\n                {/* Now begin the Grid for the city section */}\n                <Grid \n                    item \n                    xs={12} \n                >\n                    <Autocomplete \n                        style={{\n                            marginTop: 25,\n                        }} \n                        value={town}\n                        onChange={(e, newVal) => setTown(newVal)}\n                        options={myCities}\n                        getOptionLabel={option => option}\n                        renderOption={option => (\n                            <Typography \n                                variant='body1' \n                                component='p'\n                            >\n                                {option}\n                            </Typography>\n                        )}\n                        renderInput={params => (\n                            <TextField \n                                {...params} \n                                color='primary' \n                                variant='outlined'\n                                label='City' \n                                placeholder='City' \n                                helperText='If your city is not in the list, select the nearest city!'\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                fullWidth\n                                required \n                            />\n                        )}\n                    />\n                    <Button \n                        style={{\n                            marginTop: 20,\n                        }}\n                        color='primary' \n                        variant='contained' \n                        disabled={makingEdit} \n                        onClick={updateCity}\n                    >\n                        {makingEdit ? <CircularProgress /> : 'Update city'}\n                    </Button>\n                </Grid>\n                <Divider />\n                {/* End of the Grid for city. Now begin the section for United States state */}\n                <Grid \n                    item\n                    xs={12} \n                    style={{\n                        marginTop: 30,\n                    }}\n                >\n                    <Typography \n                        variant='h6' \n                        component='h6' \n                        align='center' \n                    >\n                        Update state\n                    </Typography>\n                    <Select \n                        value={userState} \n                        onChange={e => setUserState(e.target.value)} \n                        variant='outlined' \n                        color='primary' \n                        fullWidth\n                    >\n                        {myStates.map((item, index) => (\n                            <MenuItem \n                                key={index.toString()}\n                                value={item} \n                            >\n                                {item}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                    <Button \n                        style={{\n                            marginTop: 20,\n                        }}\n                        color='primary'\n                        variant='contained' \n                        disabled={makingEdit} \n                    >\n                        {makingEdit ? <CircularProgress /> : 'Update State'}\n                    </Button>\n                </Grid>\n            </Grid>\n        );\n    }\n    else {\n        return (\n            <Backdrop \n                open={true} \n            >\n                <CircularProgress \n                    color='primary' \n                />\n            </Backdrop>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.userReducer.user,\n        theme: state.userThemeReducer.primary,\n    };\n}\n\nexport default connect(mapStateToProps)(UserSettings);"]},"metadata":{},"sourceType":"module"}