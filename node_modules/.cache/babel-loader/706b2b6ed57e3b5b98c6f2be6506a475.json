{"ast":null,"code":"import _slicedToArray from\"c:/Users/bobma/Downloads/excite-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import Grid from'@material-ui/core/Grid';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemAvatar from'@material-ui/core/ListItemAvatar';import ListItemText from'@material-ui/core/ListItemText';import Typography from'@material-ui/core/Typography';import IconButton from'@material-ui/core/IconButton';import Icon from'@mdi/react';import{mdiCheckBold,mdiClose}from'@mdi/js';import{connect}from'react-redux';import Backdrop from'@material-ui/core/Backdrop';import CircularProgress from'@material-ui/core/CircularProgress';import{useHistory}from'react-router-dom';import{makeStyles}from'@material-ui/core/styles';import swal from'sweetalert';import axios from'axios';import Avatar from'@material-ui/core/Avatar';import Paper from'@material-ui/core/Paper';var useStyles=makeStyles(function(){return{root:{marginTop:100},item:{margin:'auto'},list:{margin:'auto',maxWidth:700}};});function NotificationsComponent(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),deletingNotification=_useState2[0],setDeletingNotification=_useState2[1];//Backdrop when we want to delete notification.\nvar history=useHistory();var classes=useStyles();useEffect(function(){if(props.mainUser===null){history.push('/');}else{return axios({method:'GET',url:\"http://192.168.0.9:3001/api/grab/user/\".concat(props.mainUser.uniqueUserId)}).then(function(response){props.dispatch({type:'user/updateUser',payload:response.data.user});props.dispatch({type:'ThemeChange',payload:response.data.user.profileTheme});}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error gathering your notifications! Please try again','error');history.goBack(1);});}},[]);function utcToDateString(utc){var date=new Date(utc);var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'];var month=months[date.getMonth()];var day=date.getDate();var year=date.getFullYear();return month+' '+day+', '+year;}function deleteNotification(uniqueNotificationId,link){setDeletingNotification(true);var data=JSON.stringify({uniqueUserId:props.mainUser.uniqueUserId,uniqueNotificationId:uniqueNotificationId,link:link});return axios({method:'POST',url:'http://192.168.0.9:3001/api/delete/notification',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){setDeletingNotification(false);props.dispatch({type:'user/updateUser',payload:response.data.user});swal('Great!','Notification successfully deleted!','success');if(response.data.link!==''){history.push(response.data.link);}}).catch(function(err){setDeletingNotification(false);console.log(err.message);swal('Uh Oh!','There was an error deleting that notification!','error');});}function acceptRejectFollow(followerUsername,followerUniqueUserId,uniqueNotificationId,accept){setDeletingNotification(true);var data=JSON.stringify({followerUsername:followerUsername,followerUniqueUserId:followerUniqueUserId,uniqueNotificationId:uniqueNotificationId,accept:accept,username:props.mainUser.username,uniqueUserId:props.mainUser.uniqueUserId});return axios({method:'POST',url:'http://192.168.0.9:3001/api/follow/request/choice',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){props.dispatch({type:'user/updateUser',payload:response.data.user});if(response.data.accept===true){swal('Great!','Successfully accepted that follow request!','success');setDeletingNotification(false);}else{swal('Great!','Successfully rejected that follow request!','success');setDeletingNotification(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error accepting or rejecting that follow request!','error');setDeletingNotification(false);});}function acceptRejectJoinRequest(username,uniqueUserId,community,uniqueNotificationId,acceptReject){//This function will handle acception or rejecting a community join request. \nsetDeletingNotification(true);var data=JSON.stringify({uniqueUserId:uniqueUserId,username:username,name:community,uniqueNotificationId:uniqueNotificationId,acceptReject:acceptReject,moderatorUniqueUserId:props.mainUser.uniqueUserId,moderatorUsername:props.mainUser.username});return axios({method:'POST',url:'http://192.168.0.9:3001/api/accept/reject/community/join',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){if(response.data.acceptReject===true){swal('Great!','Successfully accepted that community join request!','success');props.dispatch({type:'user/updateUser',payload:response.data.user});setDeletingNotification(false);}else if(response.data.acceptReject===false){swal('Great!','Successfully denied that community join request!','success');props.dispatch({type:'user/updateUser',payload:response.data.user});setDeletingNotification(false);}else{swal('Uh oh!','There was an accepting or rejection that community join request!','error');setDeletingNotification(false);}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error accepting or rejection that community join request!','error');setDeletingNotification(false);});}if(props.mainUser!==null){return/*#__PURE__*/_jsxs(Grid,{container:true,className:classes.root,children:[/*#__PURE__*/_jsx(Backdrop,{open:deletingNotification,children:/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"})}),props.mainUser.notifications.length>0&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(List,{className:classes.list,children:props.mainUser.notifications.map(function(notification,index){return/*#__PURE__*/_jsxs(\"div\",{children:[notification.type==='post comment'&&/*#__PURE__*/_jsx(Paper,{elevation:3,children:/*#__PURE__*/_jsxs(ListItem,{style:{cursor:'pointer',marginBottom:20},onClick:function onClick(e){return deleteNotification(notification.uniqueNotificationId,notification.link);},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.9:3001/api/get/avatar/by/id/\".concat(notification.uniqueSenderId),alt:\"\".concat(notification.sender),title:\"\".concat(notification.sender)})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:utcToDateString(notification.date)}),secondary:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",align:\"center\",children:notification.msg})})]})}),notification.type==='post like'&&/*#__PURE__*/_jsx(Paper,{elevation:3,children:/*#__PURE__*/_jsxs(ListItem,{style:{cursor:'pointer',marginBottom:20},onClick:function onClick(e){return deleteNotification(notification.uniqueNotificationId,notification.link);},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.9:3001/api/get/avatar/by/id/\".concat(notification.uniqueSenderId),alt:\"\".concat(notification.sender),title:\"\".concat(notification.sender)})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:utcToDateString(notification.date)}),secondary:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",align:\"center\",children:notification.msg})})]})}),notification.type==='join accepted'&&/*#__PURE__*/_jsx(Paper,{elevation:3,children:/*#__PURE__*/_jsxs(ListItem,{style:{cursor:'pointer',marginBottom:20},onClick:function onClick(e){return deleteNotification(notification.uniqueNotificationId,notification.link);},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.9:3001/api/get/avatar/by/community/name/\".concat(notification.community),alt:\"\".concat(notification.sender),title:\"\".concat(notification.sender)})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:utcToDateString(notification.date)}),secondary:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",align:\"center\",children:notification.msg})})]})}),notification.type==='new follower'&&/*#__PURE__*/_jsx(Paper,{elevation:3,children:/*#__PURE__*/_jsxs(ListItem,{style:{cursor:'pointer',marginBottom:20},onClick:function onClick(e){return deleteNotification(notification.uniqueNotificationId,notification.link);},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.9:3001/api/get/avatar/by/id/\".concat(notification.uniqueSenderId),alt:\"\".concat(notification.sender),title:\"\".concat(notification.sender)})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:utcToDateString(notification.date)}),secondary:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",align:\"center\",children:notification.msg})})]})}),notification.type==='comment like'&&/*#__PURE__*/_jsx(Paper,{elevation:3,children:/*#__PURE__*/_jsxs(ListItem,{style:{cursor:'pointer',marginBottom:20},onClick:function onClick(e){return deleteNotification(notification.uniqueNotificationId,notification.link);},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.9:3001/api/get/avatar/by/id/\".concat(notification.uniqueSenderId),alt:\"\".concat(notification.sender),title:\"\".concat(notification.sender)})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:utcToDateString(notification.date)}),secondary:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",align:\"center\",children:notification.msg})})]})}),notification.type==='follower request'&&/*#__PURE__*/_jsxs(Paper,{elevation:3,style:{marginBottom:20},children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.9:3001/api/get/avatar/by/id/\".concat(notification.uniqueSenderId),alt:\"\".concat(notification.sender),title:\"\".concat(notification.sender),style:{cursor:'pointer'},onClick:function onClick(e){return history.push(\"/geouser/\".concat(notification.uniqueSenderId));}})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:utcToDateString(notification.date)}),secondary:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",align:\"center\",children:notification.msg})})]}),/*#__PURE__*/_jsx(IconButton,{style:{color:'rgb(0, 128, 0)'},\"aria-label\":\"Accept follower request button\",disabled:deletingNotification,onClick:function onClick(e){return acceptRejectFollow(notification.sender,notification.uniqueSenderId,notification.uniqueNotificationId,true);},children:/*#__PURE__*/_jsx(Icon,{path:mdiCheckBold,size:1,title:\"Acccept follow request\",\"aria-label\":\"Follow request accept icon\"})}),/*#__PURE__*/_jsx(IconButton,{style:{color:'rgb(255, 0, 0)'},\"aria-label\":\"Deny request button\",disabled:deletingNotification,onClick:function onClick(e){return acceptRejectFollow(notification.sender,notification.uniqueSenderId,notification.uniqueNotificationId,false);},children:/*#__PURE__*/_jsx(Icon,{path:mdiClose,size:1,title:\"Deny request icon\",\"aria-label\":\"Deny request icon\"})})]}),notification.type==='community join request'&&/*#__PURE__*/_jsxs(Paper,{elevation:3,style:{marginBottom:20},children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.9:3001/api/get/avatar/by/id/\".concat(notification.uniqueSenderId),alt:\"\".concat(notification.sender),title:\"\".concat(notification.sender),style:{cursor:'pointer'},onClick:function onClick(e){return history.push(\"/geouser/\".concat(notification.uniqueSenderId));}})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:utcToDateString(notification.date)}),secondary:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",align:\"center\",children:notification.msg})})]}),/*#__PURE__*/_jsx(IconButton,{style:{color:'rgb(0, 128, 0)'},\"aria-label\":\"Accept communityJoin request button\",disabled:deletingNotification,onClick:function onClick(e){return acceptRejectJoinRequest(notification.sender,notification.uniqueSenderId,notification.community,notification.uniqueNotificationId,true);},children:/*#__PURE__*/_jsx(Icon,{path:mdiCheckBold,size:1,title:\"Acccept follow request\",\"aria-label\":\"Follow request accept icon\"})}),/*#__PURE__*/_jsx(IconButton,{style:{color:'rgb(255, 0, 0)'},\"aria-label\":\"Deny request button\",disabled:deletingNotification,onClick:function onClick(e){return acceptRejectJoinRequest(notification.sender,notification.uniqueSenderId,notification.community,notification.uniqueNotificationId,false);},children:/*#__PURE__*/_jsx(Icon,{path:mdiClose,size:1,title:\"Deny request icon\",\"aria-label\":\"Deny request icon\"})})]}),notification.type==='accept follow request'&&/*#__PURE__*/_jsx(Paper,{elevation:3,children:/*#__PURE__*/_jsxs(ListItem,{style:{cursor:'pointer',marginBottom:20},onClick:function onClick(e){return deleteNotification(notification.uniqueNotificationId,notification.link);},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.9:3001/api/get/avatar/by/id/\".concat(notification.uniqueSenderId),alt:\"\".concat(notification.sender),title:\"\".concat(notification.sender)})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:utcToDateString(notification.date)}),secondary:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",component:\"p\",align:\"center\",children:notification.msg})})]})})]},index.toString());})})}),props.mainUser.notifications.length<1&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,style:{textAlign:'center'},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"No Notifications\"})})]});}else{return/*#__PURE__*/_jsx(Backdrop,{open:true,children:/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"})});}}function mapStateToProps(state){return{mainUser:state.userReducer.user,primary:state.userThemeReducer.primary};}export default connect(mapStateToProps)(NotificationsComponent);","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/NotificationsComponent.js"],"names":["React","useState","useEffect","Grid","List","ListItem","ListItemAvatar","ListItemText","Typography","IconButton","Icon","mdiCheckBold","mdiClose","connect","Backdrop","CircularProgress","useHistory","makeStyles","swal","axios","Avatar","Paper","useStyles","root","marginTop","item","margin","list","maxWidth","NotificationsComponent","props","deletingNotification","setDeletingNotification","history","classes","mainUser","push","method","url","uniqueUserId","then","response","dispatch","type","payload","data","user","profileTheme","catch","err","console","log","message","goBack","utcToDateString","utc","date","Date","months","month","getMonth","day","getDate","year","getFullYear","deleteNotification","uniqueNotificationId","link","JSON","stringify","headers","acceptRejectFollow","followerUsername","followerUniqueUserId","accept","username","acceptRejectJoinRequest","community","acceptReject","name","moderatorUniqueUserId","moderatorUsername","notifications","length","map","notification","index","cursor","marginBottom","e","uniqueSenderId","sender","msg","color","toString","textAlign","mapStateToProps","state","userReducer","primary","userThemeReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@mdi/react';\r\nimport { mdiCheckBold, mdiClose } from '@mdi/js';\r\nimport { connect } from 'react-redux';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        marginTop: 100,\r\n    },\r\n    item: {\r\n        margin: 'auto',\r\n    },\r\n    list: {\r\n        margin: 'auto',\r\n        maxWidth: 700,\r\n    },\r\n}));\r\n\r\nfunction NotificationsComponent(props) {\r\n    const [deletingNotification, setDeletingNotification] = useState(false); //Backdrop when we want to delete notification.\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    \r\n    useEffect(() => {\r\n        if(props.mainUser === null) {\r\n            history.push('/');\r\n        }\r\n        else {\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/grab/user/${props.mainUser.uniqueUserId}`\r\n            }).then(response => {\r\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error gathering your notifications! Please try again',\r\n                    'error',\r\n                );\r\n                history.goBack(1);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function utcToDateString(utc) {\r\n        let date = new Date(utc);\r\n        let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n        let month = months[date.getMonth()];\r\n        let day = date.getDate();\r\n        let year = date.getFullYear();\r\n        return month + ' ' + day + ', ' + year;\r\n    }\r\n\r\n    function deleteNotification(uniqueNotificationId, link) {\r\n        setDeletingNotification(true);\r\n        let data = JSON.stringify({\r\n            uniqueUserId: props.mainUser.uniqueUserId,\r\n            uniqueNotificationId: uniqueNotificationId,\r\n            link: link,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/delete/notification',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            setDeletingNotification(false);\r\n            props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n            swal(\r\n                'Great!',\r\n                'Notification successfully deleted!',\r\n                'success',\r\n            );\r\n            if(response.data.link !== '') {\r\n                history.push(response.data.link);\r\n            }\r\n        }).catch(err => {\r\n            setDeletingNotification(false);\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error deleting that notification!',\r\n                'error',\r\n            );\r\n        });\r\n    }\r\n\r\n    function acceptRejectFollow(followerUsername, followerUniqueUserId, uniqueNotificationId, accept) {\r\n        setDeletingNotification(true);\r\n        let data = JSON.stringify({\r\n            followerUsername: followerUsername,\r\n            followerUniqueUserId: followerUniqueUserId,\r\n            uniqueNotificationId: uniqueNotificationId,\r\n            accept: accept,\r\n            username: props.mainUser.username,\r\n            uniqueUserId: props.mainUser.uniqueUserId,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/follow/request/choice',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n            if(response.data.accept === true) {\r\n                swal(\r\n                    'Great!',\r\n                    'Successfully accepted that follow request!',\r\n                    'success',\r\n                );\r\n                setDeletingNotification(false);\r\n            }\r\n            else {\r\n                swal(\r\n                    'Great!',\r\n                    'Successfully rejected that follow request!',\r\n                    'success',\r\n                );\r\n                setDeletingNotification(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error accepting or rejecting that follow request!',\r\n                'error',\r\n            );\r\n            setDeletingNotification(false);\r\n        });\r\n    }\r\n\r\n    function acceptRejectJoinRequest(username, uniqueUserId, community, uniqueNotificationId, acceptReject) {\r\n        //This function will handle acception or rejecting a community join request. \r\n        setDeletingNotification(true);\r\n        let data = JSON.stringify({\r\n            uniqueUserId: uniqueUserId,\r\n            username: username,\r\n            name: community,\r\n            uniqueNotificationId: uniqueNotificationId,\r\n            acceptReject: acceptReject,\r\n            moderatorUniqueUserId: props.mainUser.uniqueUserId,\r\n            moderatorUsername: props.mainUser.username,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/accept/reject/community/join',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            if(response.data.acceptReject === true) {\r\n                swal(\r\n                    'Great!',\r\n                    'Successfully accepted that community join request!',\r\n                    'success',\r\n                );\r\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                setDeletingNotification(false);\r\n            }\r\n            else if(response.data.acceptReject === false) {\r\n                swal(\r\n                    'Great!',\r\n                    'Successfully denied that community join request!',\r\n                    'success',\r\n                );\r\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                setDeletingNotification(false);\r\n            }\r\n            else {\r\n                swal(\r\n                    'Uh oh!',\r\n                    'There was an accepting or rejection that community join request!',\r\n                    'error',\r\n                );\r\n                setDeletingNotification(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error accepting or rejection that community join request!',\r\n                'error',\r\n            );\r\n\r\n            setDeletingNotification(false);\r\n        });\r\n    }\r\n\r\n    if(props.mainUser !== null) {\r\n        return (\r\n            <Grid \r\n                container \r\n                className={classes.root}\r\n            >\r\n                <Backdrop \r\n                    open={deletingNotification} \r\n                >\r\n                    <CircularProgress \r\n                        color='primary' \r\n                    />\r\n                </Backdrop>\r\n                {props.mainUser.notifications.length > 0 &&\r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                    >\r\n                        <List\r\n                            className={classes.list} \r\n                        >\r\n                            {props.mainUser.notifications.map((notification, index) => (\r\n                                <div \r\n                                    key={index.toString()} \r\n                                >\r\n                                    {notification.type === 'post comment' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                    {notification.type === 'post like' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                    {notification.type === 'join accepted' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/community/name/${notification.community}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                    {notification.type === 'new follower' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                    {notification.type === 'comment like' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                    {notification.type === 'follower request' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                            style={{\r\n                                                marginBottom: 20,\r\n                                            }}\r\n                                        >\r\n                                            <ListItem\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                        style={{\r\n                                                            cursor: 'pointer',\r\n                                                        }}\r\n                                                        onClick={e => history.push(`/geouser/${notification.uniqueSenderId}`)}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            <IconButton \r\n                                                style={{\r\n                                                    color: 'rgb(0, 128, 0)',\r\n                                                }}\r\n                                                aria-label='Accept follower request button'\r\n                                                disabled={deletingNotification}\r\n                                                onClick={e => acceptRejectFollow(notification.sender, notification.uniqueSenderId, notification.uniqueNotificationId, true)}\r\n                                            >\r\n                                                <Icon \r\n                                                    path={mdiCheckBold} \r\n                                                    size={1}\r\n                                                    title=\"Acccept follow request\" \r\n                                                    aria-label='Follow request accept icon' \r\n                                                />\r\n                                            </IconButton>\r\n                                            <IconButton \r\n                                                style={{\r\n                                                    color: 'rgb(255, 0, 0)'\r\n                                                }}\r\n                                                aria-label='Deny request button'\r\n                                                disabled={deletingNotification}\r\n                                                onClick={e => acceptRejectFollow(notification.sender, notification.uniqueSenderId, notification.uniqueNotificationId, false)}\r\n                                            >\r\n                                                <Icon \r\n                                                    path={mdiClose} \r\n                                                    size={1}\r\n                                                    title='Deny request icon'\r\n                                                    aria-label='Deny request icon' \r\n                                                />\r\n                                            </IconButton>\r\n                                        </Paper>  \r\n                                    }\r\n                                    {/* Below is the notification type for a \"community join request\" */}\r\n                                    {notification.type === 'community join request' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                            style={{\r\n                                                marginBottom: 20,\r\n                                            }}\r\n                                        >\r\n                                            <ListItem\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                        style={{\r\n                                                            cursor: 'pointer',\r\n                                                        }}\r\n                                                        onClick={e => history.push(`/geouser/${notification.uniqueSenderId}`)}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            <IconButton \r\n                                                style={{\r\n                                                    color: 'rgb(0, 128, 0)',\r\n                                                }}\r\n                                                aria-label='Accept communityJoin request button'\r\n                                                disabled={deletingNotification}\r\n                                                onClick={e => acceptRejectJoinRequest(notification.sender, notification.uniqueSenderId, notification.community, notification.uniqueNotificationId, true)}\r\n                                            >\r\n                                                <Icon \r\n                                                    path={mdiCheckBold} \r\n                                                    size={1}\r\n                                                    title=\"Acccept follow request\" \r\n                                                    aria-label='Follow request accept icon' \r\n                                                />\r\n                                            </IconButton>\r\n                                            <IconButton \r\n                                                style={{\r\n                                                    color: 'rgb(255, 0, 0)'\r\n                                                }}\r\n                                                aria-label='Deny request button'\r\n                                                disabled={deletingNotification}\r\n                                                onClick={e => acceptRejectJoinRequest(notification.sender, notification.uniqueSenderId, notification.community, notification.uniqueNotificationId, false)}\r\n                                            >\r\n                                                <Icon \r\n                                                    path={mdiClose} \r\n                                                    size={1}\r\n                                                    title='Deny request icon'\r\n                                                    aria-label='Deny request icon' \r\n                                                />\r\n                                            </IconButton>\r\n                                        </Paper> \r\n                                    }\r\n                                    {notification.type === 'accept follow request' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                                onClick={e => deleteNotification(notification.uniqueNotificationId, notification.link)}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                </div>\r\n                            ))}\r\n                        </List>\r\n                    </Grid>\r\n                }\r\n                {props.mainUser.notifications.length < 1 &&\r\n                   <Grid \r\n                        item\r\n                        xs={12} \r\n                        style={{\r\n                            textAlign: 'center',\r\n                        }}\r\n                    >\r\n                         <Typography \r\n                            variant='h6' \r\n                            component='h6' \r\n                            align='center' \r\n                        >\r\n                            No Notifications\r\n                        </Typography>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Backdrop\r\n                open={true} \r\n            >\r\n                <CircularProgress color='primary' />\r\n            </Backdrop>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(NotificationsComponent);"]},"metadata":{},"sourceType":"module"}