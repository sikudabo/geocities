{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/simeonikudabo/Downloads/geocities/src/components/UserSettings.js\";\n\n/*import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport { validatorForm, textValidator } from 'react-material-ui-form-validator';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { SwatchesPicker } from 'react-color';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(({\n    topMarg: {\n        marginTop: 40,\n    }\n}));\n\nfunction UserSettings(props) {\n    const history = useHistory(); //Variable for navigation. \n    const classes = useStyles(); //Variable for custom styles\n    const [newUsername, setNewUsername] = useState(''); //Variable and setter for updated username\n    const [newPassword, setNewPassword] = useState(''); //Variable and setter for a new password\n    const [newEmail, setNewEmail] = useState(''); //Variable and setter for a new emabil address. \n\n    useEffect(() => {\n        //First we need to see if the user is logged in. We can also fetch user. \n        if(props.mainUser === null) {\n            swal(\n                'Uh Oh!',\n                'You must be logged in to access user settings',\n                'error',\n            );\n            history.push('/');\n        }\n        else {\n            alert(props.mainUser.uniqueUserId);\n        }\n    }, []);\n\n    if(props.user) {\n        return (\n            <Grid \n                container \n                className={classes.topMarg}\n            >\n                <Grid \n                    item \n                    xs={12} \n                >\n                    <Typography\n                        variant='h6' \n                        component='h6' \n                        align='center' \n                    >\n                        Settings \n                    </Typography>\n                </Grid>\n            </Grid>\n        )\n    }\n    else {\n        return (\n            <div>\n                Not logged in\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.userReducer.user,\n        theme: state.userThemeReducer.primary,\n    };\n}\n\nexport default connect(mapStateToProps)(UserSettings);\n*/\nexport default function UserSettings() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello, world!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_c = UserSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSettings\");","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/UserSettings.js"],"names":["UserSettings"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,SAASA,YAAT,GAAwB;AACnC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KANuBA,Y","sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport { validatorForm, textValidator } from 'react-material-ui-form-validator';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { SwatchesPicker } from 'react-color';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(({\n    topMarg: {\n        marginTop: 40,\n    }\n}));\n\nfunction UserSettings(props) {\n    const history = useHistory(); //Variable for navigation. \n    const classes = useStyles(); //Variable for custom styles\n    const [newUsername, setNewUsername] = useState(''); //Variable and setter for updated username\n    const [newPassword, setNewPassword] = useState(''); //Variable and setter for a new password\n    const [newEmail, setNewEmail] = useState(''); //Variable and setter for a new emabil address. \n\n    useEffect(() => {\n        //First we need to see if the user is logged in. We can also fetch user. \n        if(props.mainUser === null) {\n            swal(\n                'Uh Oh!',\n                'You must be logged in to access user settings',\n                'error',\n            );\n            history.push('/');\n        }\n        else {\n            alert(props.mainUser.uniqueUserId);\n        }\n    }, []);\n\n    if(props.user) {\n        return (\n            <Grid \n                container \n                className={classes.topMarg}\n            >\n                <Grid \n                    item \n                    xs={12} \n                >\n                    <Typography\n                        variant='h6' \n                        component='h6' \n                        align='center' \n                    >\n                        Settings \n                    </Typography>\n                </Grid>\n            </Grid>\n        )\n    }\n    else {\n        return (\n            <div>\n                Not logged in\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.userReducer.user,\n        theme: state.userThemeReducer.primary,\n    };\n}\n\nexport default connect(mapStateToProps)(UserSettings);\n*/\n\nexport default function UserSettings() {\n    return (\n        <div>\n            Hello, world!\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}