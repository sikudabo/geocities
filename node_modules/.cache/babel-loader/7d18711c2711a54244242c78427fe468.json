{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Box from '@material-ui/core/Box';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { connect } from 'react-redux'; //Within the styles rgb(0, 20, 60) fits the logo design for blue and rgb(0, 73, 0) for green\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'center',\n    padding: theme.spacing(2)\n  },\n  card: {\n    maxWidth: 450,\n    margin: 'auto'\n  },\n  signUpBtn: {\n    backgroundColor: 'rgb(255, 255, 255)',\n    color: 'rgb(0, 32, 91)',\n    marginLeft: 'auto'\n  },\n  geoPrimary: {\n    color: 'rgb(0, 20, 60)'\n  },\n  geoSecondary: {\n    color: 'rgb(0, 73, 0)'\n  },\n  logoImg: {\n    width: '100%',\n    height: '100%'\n  }\n}));\n\nfunction Login(props) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [open, setOpen] = useState(false);\n  const formRef = useRef(null);\n  const regularExpressions = {\n    usernameExpression: /^\\w+$/,\n    alphaStartRe: /^[A-Za-z]+$/\n  };\n  useEffect(() => {\n    //The validation rule below ensures a username and password have at least 6 characters.\n    ValidatorForm.addValidationRule('enoughCharacters', value => {\n      if (value.length < 6) {\n        return false;\n      } else {\n        return true;\n      }\n    }); //The validation rule below ensures that a username only containers letters, numbers and underscores.\n\n    ValidatorForm.addValidationRule('usernameRe', value => {\n      if (!regularExpressions.usernameExpression.test(value)) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    ValidatorForm.addValidationRule('alphaStartRe', value => {\n      if (!regularExpressions.alphaStartRe.test(value.charAt(0))) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }, []);\n\n  function handleUsernameChange(e) {\n    setUsername(e.target.value);\n  }\n\n  function handlePasswordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  function enterPress(e) {\n    /*This function will handle an \"enter\" key press. If the user presses enter \r\n    while they are in the password TextField box, they will trigger the \r\n    sendLoginData function \r\n    */\n    if (e.charCode === 13) {\n      sendLoginData();\n    }\n  }\n\n  function preventSpace(e) {\n    //This function will prevent spaces when the user enters a username.\n    //It is triggered with an onKeyDown event.\n    if (e.keyCode === 32) {\n      e.preventDefault();\n      return;\n    }\n  }\n\n  async function sendLoginData() {\n    //This function will handle sending the login data to the server with axios \n    let isValid = await formRef.current.isFormValid();\n\n    if (!isValid) {\n      swal('Uh oh!', 'Make sure you filled out the log in form properly!', 'error');\n      return false;\n    }\n\n    if (username.length < 6) {\n      swal('Uh oh!', 'Username must be at least 6 characters long!', 'error');\n      setOpen(false);\n      return;\n    } else if (password.length < 6) {\n      swal('Uh oh!', 'Password must be at least 6 characters long!', 'error');\n      setOpen(false);\n      return;\n    } else {\n      let data = JSON.stringify({\n        username: username,\n        password: password\n      });\n      return axios({\n        method: 'post',\n        data: data,\n        url: 'http://192.168.0.9:3001/api/login',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.data.user) {\n          setOpen(false);\n          props.dispatch({\n            type: 'user/updateUser',\n            payload: response.data.user\n          });\n          props.dispatch({\n            type: 'ThemeChange',\n            payload: response.data.user.profileTheme\n          });\n          swal('Great!', 'Successfully logged in', 'success');\n        } else if (response.data === 'user not found') {\n          setOpen(false);\n          swal('Uh oh!', 'We could not find that username! Please try again. If you forgot your username, press the \"FORGOT USERNAME OR PASSWORD\" button below.', 'error');\n        } else if (response.data === 'invalid password') {\n          setOpen(false);\n          swal('Uh oh!', 'That password was invalid. Please try again. If you forgot your password, press the \"FORGOT USERNAME OR PASSWORD\" button below.', 'error');\n        }\n      }).catch(err => {\n        setOpen(false);\n        console.log(err.message);\n        swal('Uh oh!', 'There was an error logging you in. Please try again!', 'error');\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [\"mb=\", 10, /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: \"Logging in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      hidden: open,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            children: [\"Welcome to \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.geoPrimary,\n              children: \"Geo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.geoSecondary,\n              children: \"Cities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 87\n            }, this), \"!\", /*#__PURE__*/_jsxDEV(SvgIcon, {\n              style: {\n                color: 'rgb(0, 20, 60)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M 10.050781 0.222656 C 9.261719 0.355469 8.6875 0.765625 8.472656 1.363281 C 8.402344 1.558594 8.394531 1.902344 8.449219 2.085938 C 8.621094 2.644531 9.289062 3.136719 9.988281 3.226562 C 10.082031 3.234375 10.347656 3.246094 10.574219 3.242188 C 11.0625 3.238281 11.152344 3.257812 11.332031 3.414062 C 11.5 3.5625 11.566406 3.738281 11.585938 4.046875 C 11.589844 4.179688 11.585938 4.332031 11.574219 4.386719 L 11.550781 4.480469 L 11.214844 4.503906 C 8.734375 4.695312 6.742188 5.953125 5.914062 7.84375 C 5.265625 9.324219 5.53125 11.039062 6.597656 12.300781 C 6.824219 12.570312 7.167969 12.90625 7.351562 13.035156 C 7.410156 13.078125 7.460938 13.117188 7.460938 13.121094 C 7.460938 13.125 7.359375 13.179688 7.230469 13.238281 C 6.515625 13.582031 5.902344 14.085938 5.648438 14.535156 C 5.445312 14.898438 5.371094 15.320312 5.460938 15.632812 C 5.617188 16.203125 6.226562 16.734375 7.144531 17.109375 C 7.308594 17.175781 7.433594 17.230469 7.425781 17.234375 C 7.421875 17.238281 7.292969 17.285156 7.140625 17.339844 C 5.796875 17.804688 4.949219 18.566406 4.664062 19.566406 C 4.582031 19.851562 4.574219 20.457031 4.648438 20.691406 C 4.828125 21.277344 5.1875 21.757812 5.785156 22.230469 C 6.644531 22.902344 7.910156 23.375 9.476562 23.597656 C 10.308594 23.71875 10.734375 23.746094 11.914062 23.746094 C 12.980469 23.746094 13.308594 23.734375 14.046875 23.664062 C 14.910156 23.578125 15.722656 23.4375 16.425781 23.253906 C 18.523438 22.695312 19.863281 21.703125 20.296875 20.386719 C 20.414062 20.035156 20.433594 19.890625 20.433594 19.449219 C 20.433594 19.085938 20.421875 18.996094 20.371094 18.808594 C 20.210938 18.242188 19.941406 17.851562 19.417969 17.445312 C 18.839844 16.992188 18.0625 16.664062 17.011719 16.4375 C 15.882812 16.1875 14.839844 16.105469 12.277344 16.074219 C 10.996094 16.058594 10.128906 16.042969 9.957031 16.03125 C 9.875 16.027344 9.707031 16.019531 9.578125 16.011719 C 8.390625 15.945312 7.71875 15.707031 7.449219 15.261719 C 7.375 15.144531 7.367188 15.101562 7.367188 14.945312 C 7.367188 14.78125 7.375 14.753906 7.464844 14.609375 C 7.519531 14.523438 7.617188 14.40625 7.679688 14.347656 C 7.832031 14.210938 8.136719 14.023438 8.386719 13.914062 L 8.59375 13.824219 L 8.691406 13.871094 C 8.949219 13.996094 9.578125 14.21875 9.902344 14.300781 C 12.304688 14.929688 14.867188 14.4375 16.605469 13.019531 C 18.023438 11.859375 18.652344 10.246094 18.296875 8.664062 C 18.117188 7.855469 17.640625 7.050781 16.949219 6.378906 C 16.722656 6.15625 16.144531 5.714844 15.871094 5.550781 C 15.1875 5.144531 14.410156 4.835938 13.644531 4.660156 C 13.386719 4.601562 12.800781 4.511719 12.683594 4.511719 C 12.628906 4.511719 12.582031 4.503906 12.570312 4.492188 C 12.5625 4.480469 12.578125 4.363281 12.609375 4.234375 C 12.699219 3.8125 12.734375 3.5 12.734375 3.003906 C 12.730469 2.464844 12.691406 2.203125 12.558594 1.796875 C 12.273438 0.953125 11.609375 0.386719 10.734375 0.242188 C 10.574219 0.214844 10.175781 0.203125 10.050781 0.222656 Z M 12.519531 6.125 C 14.375 6.332031 15.828125 7.410156 16.210938 8.871094 C 16.265625 9.058594 16.273438 9.167969 16.273438 9.519531 C 16.273438 9.882812 16.265625 9.972656 16.210938 10.183594 C 15.96875 11.101562 15.3125 11.871094 14.34375 12.378906 C 13.535156 12.804688 12.53125 13.011719 11.59375 12.945312 C 10.949219 12.898438 10.546875 12.8125 9.96875 12.585938 C 8.765625 12.117188 7.933594 11.265625 7.640625 10.203125 C 7.5625 9.90625 7.554688 9.183594 7.632812 8.886719 C 8.003906 7.429688 9.464844 6.335938 11.308594 6.125 C 11.636719 6.089844 12.191406 6.085938 12.519531 6.125 Z M 9.394531 17.675781 C 9.945312 17.738281 10.980469 17.777344 12.8125 17.816406 C 14.164062 17.84375 14.667969 17.863281 15.253906 17.933594 C 15.9375 18.007812 16.398438 18.109375 16.84375 18.269531 C 17.6875 18.574219 18.121094 19.050781 18.121094 19.660156 C 18.121094 20.058594 17.925781 20.394531 17.492188 20.726562 C 16.746094 21.304688 15.425781 21.6875 13.632812 21.855469 C 13.140625 21.902344 11.339844 21.910156 10.894531 21.867188 C 9.703125 21.753906 8.859375 21.570312 8.21875 21.285156 C 7.699219 21.054688 7.308594 20.742188 7.121094 20.414062 C 6.972656 20.148438 6.929688 19.777344 7.015625 19.460938 C 7.191406 18.816406 7.855469 18.191406 8.832031 17.746094 C 8.953125 17.691406 9.066406 17.644531 9.082031 17.644531 C 9.097656 17.644531 9.238281 17.660156 9.394531 17.675781 Z M 9.394531 17.675781\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M 11.617188 8.546875 C 11.261719 8.625 10.957031 8.828125 10.792969 9.101562 C 10.691406 9.261719 10.691406 9.269531 10.691406 9.527344 C 10.691406 9.792969 10.691406 9.792969 10.796875 9.960938 C 11.070312 10.394531 11.644531 10.617188 12.242188 10.519531 C 12.75 10.433594 13.160156 10.082031 13.238281 9.667969 C 13.328125 9.171875 12.929688 8.691406 12.320312 8.550781 C 12.144531 8.511719 11.792969 8.507812 11.617188 8.546875 Z M 11.617188 8.546875 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            component: \"span\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n            ref: formRef,\n            onSubmit: e => e.preventDefault(),\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                variant: \"outlined\",\n                label: \"Username\",\n                placeholder: \"Username\",\n                color: \"primary\",\n                value: username,\n                onChange: handleUsernameChange,\n                onKeyDown: preventSpace,\n                type: \"username\",\n                helperText: \"Username must be at least 6 characters\",\n                \"aria-label\": \"Username\",\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 45\n                  }, this)\n                },\n                InputLabelProps: {\n                  shrink: true\n                },\n                validators: ['enoughCharacters', 'usernameRe', 'alphaStartRe', 'required'],\n                errorMessages: ['Username must be at least 6 characters', 'Username can only contain letters, numbers and underscores', 'Username must start with a letter', 'Must enter a username'],\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              variant: \"outlined\",\n              label: \"Password\",\n              placeholder: \"Password\",\n              color: \"primary\",\n              value: password,\n              onChange: handlePasswordChange,\n              onKeyPress: enterPress,\n              type: \"password\",\n              helperText: \"Password must be at least 6 characters\",\n              \"aria-label\": \"Password\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 41\n                }, this)\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              validators: ['enoughCharacters', 'required'],\n              errorMessages: ['Password must be at least 6 characters', 'Must enter a password'],\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: sendLoginData,\n          \"aria-label\": \"Log in button\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.signUpBtn,\n          variant: \"contained\",\n          onClick: () => history.push('/signup'),\n          style: {\n            marginLeft: 'auto'\n          },\n          \"aria-label\": \"Sign up button\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            \"aria-label\": \"Forgot username or password button\",\n            children: \"Forgot username or password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"H7fmaTMK1T5exZXI/5qYPKo++Lo=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Login;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    primary: state.userThemeReducer.primary\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/Login.js"],"names":["React","useState","useRef","useEffect","useHistory","Card","CardContent","CardActions","Box","ValidatorForm","TextValidator","Typography","Button","axios","swal","Backdrop","CircularProgress","makeStyles","SvgIcon","AccountCircleIcon","LockIcon","InputAdornment","connect","useStyles","theme","root","textAlign","padding","spacing","card","maxWidth","margin","signUpBtn","backgroundColor","color","marginLeft","geoPrimary","geoSecondary","logoImg","width","height","Login","props","classes","history","username","setUsername","password","setPassword","open","setOpen","formRef","regularExpressions","usernameExpression","alphaStartRe","addValidationRule","value","length","test","charAt","handleUsernameChange","e","target","handlePasswordChange","enterPress","charCode","sendLoginData","preventSpace","keyCode","preventDefault","isValid","current","isFormValid","data","JSON","stringify","method","url","headers","then","response","user","dispatch","type","payload","profileTheme","catch","err","console","log","message","startAdornment","shrink","push","mapStateToProps","state","userReducer","primary","userThemeReducer"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Box from '@material-ui/core/Box';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { connect } from 'react-redux';\r\n\r\n//Within the styles rgb(0, 20, 60) fits the logo design for blue and rgb(0, 73, 0) for green\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        textAlign: 'center',\r\n        padding: theme.spacing(2),\r\n    },\r\n    card: {\r\n        maxWidth: 450,\r\n        margin: 'auto',\r\n    },\r\n    signUpBtn: {\r\n        backgroundColor: 'rgb(255, 255, 255)',\r\n        color: 'rgb(0, 32, 91)',\r\n        marginLeft: 'auto',\r\n    },\r\n    geoPrimary: {\r\n        color: 'rgb(0, 20, 60)',\r\n    },\r\n    geoSecondary: {\r\n        color: 'rgb(0, 73, 0)',\r\n    },\r\n    logoImg: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nfunction Login(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const formRef = useRef(null);\r\n    const regularExpressions = {\r\n        usernameExpression: /^\\w+$/,\r\n        alphaStartRe: /^[A-Za-z]+$/,\r\n    }\r\n\r\n    useEffect(() => {\r\n        //The validation rule below ensures a username and password have at least 6 characters.\r\n        ValidatorForm.addValidationRule('enoughCharacters', value => {\r\n            if(value.length < 6) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n\r\n        //The validation rule below ensures that a username only containers letters, numbers and underscores.\r\n        ValidatorForm.addValidationRule('usernameRe', value => {\r\n            if(!regularExpressions.usernameExpression.test(value)) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n\r\n        ValidatorForm.addValidationRule('alphaStartRe', value => {\r\n            if(!regularExpressions.alphaStartRe.test(value.charAt(0))) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n\r\n    }, []);\r\n\r\n    function handleUsernameChange(e) {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    function handlePasswordChange(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    function enterPress(e) {\r\n        /*This function will handle an \"enter\" key press. If the user presses enter \r\n        while they are in the password TextField box, they will trigger the \r\n        sendLoginData function \r\n        */\r\n        if(e.charCode === 13) {\r\n            sendLoginData();\r\n        }\r\n    }\r\n\r\n    function preventSpace(e) {\r\n        //This function will prevent spaces when the user enters a username.\r\n        //It is triggered with an onKeyDown event.\r\n        if(e.keyCode === 32) {\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function sendLoginData() {\r\n        //This function will handle sending the login data to the server with axios \r\n        \r\n        let isValid = await formRef.current.isFormValid();\r\n        if(!isValid) {\r\n            swal(\r\n                'Uh oh!',\r\n                'Make sure you filled out the log in form properly!',\r\n                'error',\r\n            );\r\n            return false;\r\n        }\r\n        if(username.length < 6) {\r\n            swal(\r\n                'Uh oh!',\r\n                'Username must be at least 6 characters long!',\r\n                'error',\r\n            );\r\n            setOpen(false);\r\n            return;\r\n        }\r\n        else if(password.length < 6) {\r\n            swal(\r\n                'Uh oh!',\r\n                'Password must be at least 6 characters long!',\r\n                'error',\r\n            );\r\n            setOpen(false);\r\n            return;\r\n        }\r\n        else {\r\n            let data = JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            });\r\n\r\n            return axios({\r\n                method: 'post',\r\n                data: data,\r\n                url: 'http://192.168.0.9:3001/api/login',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }).then(response => {\r\n                if(response.data.user) {\r\n                    setOpen(false);\r\n                    props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\r\n                    swal(\r\n                        'Great!',\r\n                        'Successfully logged in',\r\n                        'success',\r\n                    );\r\n                }\r\n                else if(response.data === 'user not found') {\r\n                    setOpen(false);\r\n                    swal(\r\n                        'Uh oh!',\r\n                        'We could not find that username! Please try again. If you forgot your username, press the \"FORGOT USERNAME OR PASSWORD\" button below.',\r\n                        'error',\r\n                    );\r\n                }\r\n                else if(response.data === 'invalid password') {\r\n                    setOpen(false);\r\n                    swal(\r\n                        'Uh oh!',\r\n                        'That password was invalid. Please try again. If you forgot your password, press the \"FORGOT USERNAME OR PASSWORD\" button below.',\r\n                        'error',\r\n                    );\r\n                }\r\n            }).catch(err => {\r\n                setOpen(false);\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh oh!',\r\n                    'There was an error logging you in. Please try again!',\r\n                    'error',\r\n                )\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={classes.root} \r\n        >\r\n            <Backdrop \r\n                open={open}\r\n            >\r\n                <Box>\r\n                    mb={10}\r\n                    <CircularProgress \r\n                        color='primary' \r\n                    />\r\n                </Box>\r\n                <Box \r\n                    mt={2} \r\n                >\r\n                    <Typography \r\n                        variant='body1'\r\n                        color='textSecondary' \r\n                        component='p' \r\n                    >\r\n                        Logging in\r\n                    </Typography>\r\n                </Box>\r\n            </Backdrop>\r\n            <Card \r\n                className={classes.card}\r\n                hidden={open}\r\n            >\r\n                <CardContent>\r\n                    <Box \r\n                        mb={4} \r\n                    >\r\n                        <Typography \r\n                            variant='h6'\r\n                            component='h6'\r\n                        >\r\n                            Welcome to <span className={classes.geoPrimary}>Geo</span><span className={classes.geoSecondary}>Cities</span>!\r\n                            <SvgIcon  \r\n                                style={{\r\n                                    color: 'rgb(0, 20, 60)',\r\n                                }}\r\n                            >\r\n                                <path d=\"M 10.050781 0.222656 C 9.261719 0.355469 8.6875 0.765625 8.472656 1.363281 C 8.402344 1.558594 8.394531 1.902344 8.449219 2.085938 C 8.621094 2.644531 9.289062 3.136719 9.988281 3.226562 C 10.082031 3.234375 10.347656 3.246094 10.574219 3.242188 C 11.0625 3.238281 11.152344 3.257812 11.332031 3.414062 C 11.5 3.5625 11.566406 3.738281 11.585938 4.046875 C 11.589844 4.179688 11.585938 4.332031 11.574219 4.386719 L 11.550781 4.480469 L 11.214844 4.503906 C 8.734375 4.695312 6.742188 5.953125 5.914062 7.84375 C 5.265625 9.324219 5.53125 11.039062 6.597656 12.300781 C 6.824219 12.570312 7.167969 12.90625 7.351562 13.035156 C 7.410156 13.078125 7.460938 13.117188 7.460938 13.121094 C 7.460938 13.125 7.359375 13.179688 7.230469 13.238281 C 6.515625 13.582031 5.902344 14.085938 5.648438 14.535156 C 5.445312 14.898438 5.371094 15.320312 5.460938 15.632812 C 5.617188 16.203125 6.226562 16.734375 7.144531 17.109375 C 7.308594 17.175781 7.433594 17.230469 7.425781 17.234375 C 7.421875 17.238281 7.292969 17.285156 7.140625 17.339844 C 5.796875 17.804688 4.949219 18.566406 4.664062 19.566406 C 4.582031 19.851562 4.574219 20.457031 4.648438 20.691406 C 4.828125 21.277344 5.1875 21.757812 5.785156 22.230469 C 6.644531 22.902344 7.910156 23.375 9.476562 23.597656 C 10.308594 23.71875 10.734375 23.746094 11.914062 23.746094 C 12.980469 23.746094 13.308594 23.734375 14.046875 23.664062 C 14.910156 23.578125 15.722656 23.4375 16.425781 23.253906 C 18.523438 22.695312 19.863281 21.703125 20.296875 20.386719 C 20.414062 20.035156 20.433594 19.890625 20.433594 19.449219 C 20.433594 19.085938 20.421875 18.996094 20.371094 18.808594 C 20.210938 18.242188 19.941406 17.851562 19.417969 17.445312 C 18.839844 16.992188 18.0625 16.664062 17.011719 16.4375 C 15.882812 16.1875 14.839844 16.105469 12.277344 16.074219 C 10.996094 16.058594 10.128906 16.042969 9.957031 16.03125 C 9.875 16.027344 9.707031 16.019531 9.578125 16.011719 C 8.390625 15.945312 7.71875 15.707031 7.449219 15.261719 C 7.375 15.144531 7.367188 15.101562 7.367188 14.945312 C 7.367188 14.78125 7.375 14.753906 7.464844 14.609375 C 7.519531 14.523438 7.617188 14.40625 7.679688 14.347656 C 7.832031 14.210938 8.136719 14.023438 8.386719 13.914062 L 8.59375 13.824219 L 8.691406 13.871094 C 8.949219 13.996094 9.578125 14.21875 9.902344 14.300781 C 12.304688 14.929688 14.867188 14.4375 16.605469 13.019531 C 18.023438 11.859375 18.652344 10.246094 18.296875 8.664062 C 18.117188 7.855469 17.640625 7.050781 16.949219 6.378906 C 16.722656 6.15625 16.144531 5.714844 15.871094 5.550781 C 15.1875 5.144531 14.410156 4.835938 13.644531 4.660156 C 13.386719 4.601562 12.800781 4.511719 12.683594 4.511719 C 12.628906 4.511719 12.582031 4.503906 12.570312 4.492188 C 12.5625 4.480469 12.578125 4.363281 12.609375 4.234375 C 12.699219 3.8125 12.734375 3.5 12.734375 3.003906 C 12.730469 2.464844 12.691406 2.203125 12.558594 1.796875 C 12.273438 0.953125 11.609375 0.386719 10.734375 0.242188 C 10.574219 0.214844 10.175781 0.203125 10.050781 0.222656 Z M 12.519531 6.125 C 14.375 6.332031 15.828125 7.410156 16.210938 8.871094 C 16.265625 9.058594 16.273438 9.167969 16.273438 9.519531 C 16.273438 9.882812 16.265625 9.972656 16.210938 10.183594 C 15.96875 11.101562 15.3125 11.871094 14.34375 12.378906 C 13.535156 12.804688 12.53125 13.011719 11.59375 12.945312 C 10.949219 12.898438 10.546875 12.8125 9.96875 12.585938 C 8.765625 12.117188 7.933594 11.265625 7.640625 10.203125 C 7.5625 9.90625 7.554688 9.183594 7.632812 8.886719 C 8.003906 7.429688 9.464844 6.335938 11.308594 6.125 C 11.636719 6.089844 12.191406 6.085938 12.519531 6.125 Z M 9.394531 17.675781 C 9.945312 17.738281 10.980469 17.777344 12.8125 17.816406 C 14.164062 17.84375 14.667969 17.863281 15.253906 17.933594 C 15.9375 18.007812 16.398438 18.109375 16.84375 18.269531 C 17.6875 18.574219 18.121094 19.050781 18.121094 19.660156 C 18.121094 20.058594 17.925781 20.394531 17.492188 20.726562 C 16.746094 21.304688 15.425781 21.6875 13.632812 21.855469 C 13.140625 21.902344 11.339844 21.910156 10.894531 21.867188 C 9.703125 21.753906 8.859375 21.570312 8.21875 21.285156 C 7.699219 21.054688 7.308594 20.742188 7.121094 20.414062 C 6.972656 20.148438 6.929688 19.777344 7.015625 19.460938 C 7.191406 18.816406 7.855469 18.191406 8.832031 17.746094 C 8.953125 17.691406 9.066406 17.644531 9.082031 17.644531 C 9.097656 17.644531 9.238281 17.660156 9.394531 17.675781 Z M 9.394531 17.675781\" />\r\n                                <path d=\"M 11.617188 8.546875 C 11.261719 8.625 10.957031 8.828125 10.792969 9.101562 C 10.691406 9.261719 10.691406 9.269531 10.691406 9.527344 C 10.691406 9.792969 10.691406 9.792969 10.796875 9.960938 C 11.070312 10.394531 11.644531 10.617188 12.242188 10.519531 C 12.75 10.433594 13.160156 10.082031 13.238281 9.667969 C 13.328125 9.171875 12.929688 8.691406 12.320312 8.550781 C 12.144531 8.511719 11.792969 8.507812 11.617188 8.546875 Z M 11.617188 8.546875 \"/>\r\n                            </SvgIcon>\r\n                        </Typography>\r\n                        <Typography \r\n                            variant='subtitle1' \r\n                            component='span' \r\n                        >\r\n                            Log in \r\n                        </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                        <ValidatorForm \r\n                            ref={formRef}\r\n                            onSubmit={e => e.preventDefault()}\r\n                        >\r\n                            <Box \r\n                                mb={3}\r\n                            >\r\n                                <TextValidator\r\n                                    variant='outlined' \r\n                                    label='Username'\r\n                                    placeholder='Username'\r\n                                    color='primary'\r\n                                    value={username}\r\n                                    onChange={handleUsernameChange}\r\n                                    onKeyDown={preventSpace}\r\n                                    type='username'\r\n                                    helperText='Username must be at least 6 characters'\r\n                                    aria-label='Username' \r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment \r\n                                                position='start' \r\n                                            >\r\n                                                <AccountCircleIcon />\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    validators={['enoughCharacters', 'usernameRe', 'alphaStartRe', 'required']}\r\n                                    errorMessages={['Username must be at least 6 characters', 'Username can only contain letters, numbers and underscores', 'Username must start with a letter', 'Must enter a username']}\r\n                                    fullWidth\r\n                                    required\r\n                                />\r\n                            </Box>\r\n                            <TextValidator\r\n                                variant='outlined' \r\n                                label='Password'\r\n                                placeholder='Password'\r\n                                color='primary'\r\n                                value={password} \r\n                                onChange={handlePasswordChange}\r\n                                onKeyPress={enterPress}\r\n                                type='password' \r\n                                helperText='Password must be at least 6 characters'\r\n                                aria-label='Password' \r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment \r\n                                            position='start' \r\n                                        >\r\n                                            <LockIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                validators={['enoughCharacters', 'required']}\r\n                                errorMessages={['Password must be at least 6 characters', 'Must enter a password']}\r\n                                fullWidth \r\n                                required\r\n                            />\r\n                        </ValidatorForm>\r\n                    </Box>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button \r\n                        color='primary' \r\n                        variant='contained' \r\n                        onClick={sendLoginData}\r\n                        aria-label='Log in button'\r\n                    >\r\n                        Log in \r\n                    </Button>\r\n                    <Button \r\n                        className={classes.signUpBtn} \r\n                        variant='contained' \r\n                        onClick={() => history.push('/signup')}\r\n                        style={{\r\n                            marginLeft: 'auto',\r\n                        }}\r\n                        aria-label='Sign up button'\r\n                    >\r\n                        Sign up\r\n                    </Button>\r\n                </CardActions>\r\n                <CardContent>\r\n                    <Box>\r\n                        <Button \r\n                            color='primary' \r\n                            aria-label='Forgot username or password button'\r\n                        >\r\n                            Forgot username or password?\r\n                        </Button>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}