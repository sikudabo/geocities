{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingLeft: 200,\n    paddingRight: 200\n  },\n  root: {\n    marginTop: 20\n  },\n  profileAvatar: {\n    height: 128,\n    width: 128\n  },\n  profileAvatarLg: {\n    height: 168,\n    width: 168\n  },\n  usernameDisplay: {\n    marginLeft: 'auto'\n  },\n  statsInfo: {\n    marginTop: 40,\n    margin: 'auto'\n  }\n}));\n\nfunction ProfilePage(props) {\n  _s();\n\n  const history = useHistory(); //The history API to access the brower history. \n\n  const classes = useStyles(); //Custom styling.\n\n  useEffect(() => {\n    //First, if the user doesn't exist in state, re-route to the login page.\n    if (!props.user) {\n      history.push('/');\n    } else if (props.user) {\n      //Else, we make an axios call to request the user (an updated version of the user)\n      //props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/grab/user/${props.user.uniqueUserId}`\n      }).then(response => {\n        if (response.data.user) {\n          props.dispatch({\n            type: 'user/updateUser',\n            payload: response.data.user\n          });\n          props.dispatch({\n            type: 'ThemeChange',\n            payload: response.data.user.profileTheme\n          });\n        } else if (response.data === 'user not found') {\n          swal('Uh Oh!', 'We could not find your profile!', 'error');\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error retreiving your profile. Please try again!', 'error');\n        history.push('/');\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.root,\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          style: {\n            marginRight: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Hidden, {\n            mdUp: true,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.profileAvatar,\n              src: `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`,\n              title: `${props.user.username}`,\n              alt: `${props.user.username}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n            smDown: true,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.profileAvatarLg,\n              src: `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`,\n              title: `${props.user.username}`,\n              alt: `${props.user.username}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h4\",\n            children: props.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfilePage, \"a770Wo9grBp66oG4IhbrG9riUrM=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = ProfilePage;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    primary: state.userThemeReducer.primary\n  };\n}\n\nexport default connect(mapStateToProps)(ProfilePage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/ProfilePage.js"],"names":["React","useState","useEffect","Grid","Avatar","Typography","connect","axios","useHistory","swal","makeStyles","Hidden","Box","Container","useStyles","theme","container","paddingLeft","paddingRight","root","marginTop","profileAvatar","height","width","profileAvatarLg","usernameDisplay","marginLeft","statsInfo","margin","ProfilePage","props","history","classes","user","push","method","url","uniqueUserId","then","response","data","dispatch","type","payload","profileTheme","catch","err","console","log","message","marginRight","avatar","username","mapStateToProps","state","userReducer","primary","userThemeReducer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,WAAW,EAAE,GADN;AAEPC,IAAAA,YAAY,EAAE;AAFP,GAD0B;AAKrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE;AADT,GAL+B;AAQrCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,MAAM,EAAE,GADG;AAEXC,IAAAA,KAAK,EAAE;AAFI,GARsB;AAYrCC,EAAAA,eAAe,EAAE;AACbF,IAAAA,MAAM,EAAE,GADK;AAEbC,IAAAA,KAAK,EAAE;AAFM,GAZoB;AAgBrCE,EAAAA,eAAe,EAAE;AACbC,IAAAA,UAAU,EAAE;AADC,GAhBoB;AAoBrCC,EAAAA,SAAS,EAAE;AACPP,IAAAA,SAAS,EAAE,EADJ;AAEPQ,IAAAA,MAAM,EAAE;AAFD;AApB0B,CAAZ,CAAD,CAA5B;;AA0BA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAMC,OAAO,GAAGvB,UAAU,EAA1B,CADwB,CACM;;AAC9B,QAAMwB,OAAO,GAAGlB,SAAS,EAAzB,CAFwB,CAEK;;AAE7BZ,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAG,CAAC4B,KAAK,CAACG,IAAV,EAAgB;AACZF,MAAAA,OAAO,CAACG,IAAR,CAAa,GAAb;AACH,KAFD,MAGK,IAAGJ,KAAK,CAACG,IAAT,EAAe;AAChB;AACA;AACA,aAAO1B,KAAK,CAAC;AACT4B,QAAAA,MAAM,EAAE,KADC;AAETC,QAAAA,GAAG,EAAG,yCAAwCN,KAAK,CAACG,IAAN,CAAWI,YAAa;AAF7D,OAAD,CAAL,CAGJC,IAHI,CAGCC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,IAAT,CAAcP,IAAjB,EAAuB;AACnBH,UAAAA,KAAK,CAACW,QAAN,CAAe;AAACC,YAAAA,IAAI,EAAE,iBAAP;AAA0BC,YAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcP;AAAjD,WAAf;AACAH,UAAAA,KAAK,CAACW,QAAN,CAAe;AAACC,YAAAA,IAAI,EAAE,aAAP;AAAsBC,YAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcP,IAAd,CAAmBW;AAAlD,WAAf;AACH,SAHD,MAIK,IAAGL,QAAQ,CAACC,IAAT,KAAkB,gBAArB,EAAuC;AACxC/B,UAAAA,IAAI,CACA,QADA,EAEA,iCAFA,EAGA,OAHA,CAAJ;AAKAsB,UAAAA,OAAO,CAACG,IAAR,CAAa,GAAb;AACH;AACJ,OAhBM,EAgBJW,KAhBI,CAgBEC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACAxC,QAAAA,IAAI,CACA,QADA,EAEA,+DAFA,EAGA,OAHA,CAAJ;AAKAsB,QAAAA,OAAO,CAACG,IAAR,CAAa,GAAb;AACH,OAxBM,CAAP;AAyBH;AACJ,GAlCQ,EAkCN,EAlCM,CAAT;AAoCA,sBACI,QAAC,SAAD;AACI,IAAA,QAAQ,EAAC,IADb;AAEI,IAAA,SAAS,EAAEF,OAAO,CAAChB,SAFvB;AAAA,2BAII,QAAC,IAAD;AACI,MAAA,SAAS,EAAEgB,OAAO,CAACb,IADvB;AAEI,MAAA,SAAS,MAFb;AAAA,6BAII,QAAC,IAAD;AACI,QAAA,IAAI,MADR;AAEI,QAAA,SAAS,MAFb;AAGI,QAAA,EAAE,EAAE,EAHR;AAII,QAAA,OAAO,EAAE,CAJb;AAAA,gCAMI,QAAC,IAAD;AACI,UAAA,IAAI,MADR;AAEI,UAAA,EAAE,EAAE,CAFR;AAGI,UAAA,KAAK,EAAE;AACH+B,YAAAA,WAAW,EAAE;AADV,WAHX;AAAA,kCAQI,QAAC,MAAD;AACI,YAAA,IAAI,MADR;AAAA,mCAGI,QAAC,MAAD;AACI,cAAA,SAAS,EAAElB,OAAO,CAACX,aADvB;AAEI,cAAA,GAAG,EAAG,yCAAwCS,KAAK,CAACG,IAAN,CAAWkB,MAAO,EAFpE;AAGI,cAAA,KAAK,EAAG,GAAErB,KAAK,CAACG,IAAN,CAAWmB,QAAS,EAHlC;AAII,cAAA,GAAG,EAAG,GAAEtB,KAAK,CAACG,IAAN,CAAWmB,QAAS;AAJhC;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBARJ,eAmBI,QAAC,MAAD;AACI,YAAA,MAAM,MADV;AAAA,mCAGI,QAAC,MAAD;AACI,cAAA,SAAS,EAAEpB,OAAO,CAACR,eADvB;AAEI,cAAA,GAAG,EAAG,yCAAwCM,KAAK,CAACG,IAAN,CAAWkB,MAAO,EAFpE;AAGI,cAAA,KAAK,EAAG,GAAErB,KAAK,CAACG,IAAN,CAAWmB,QAAS,EAHlC;AAII,cAAA,GAAG,EAAG,GAAEtB,KAAK,CAACG,IAAN,CAAWmB,QAAS;AAJhC;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAoCI,QAAC,IAAD;AACI,UAAA,IAAI,MADR;AAEI,UAAA,EAAE,EAAE,CAFR;AAAA,iCAII,QAAC,UAAD;AACI,YAAA,OAAO,EAAC,IADZ;AAEI,YAAA,SAAS,EAAC,IAFd;AAAA,sBAIKtB,KAAK,CAACG,IAAN,CAAWmB;AAJhB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBApCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4DH;;GApGQvB,W;UACWrB,U,EACAM,S;;;KAFXe,W;;AAsGT,SAASwB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHrB,IAAAA,IAAI,EAAEqB,KAAK,CAACC,WAAN,CAAkBtB,IADrB;AAEHuB,IAAAA,OAAO,EAAEF,KAAK,CAACG,gBAAN,CAAuBD;AAF7B,GAAP;AAIH;;AAED,eAAelD,OAAO,CAAC+C,eAAD,CAAP,CAAyBxB,WAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        paddingLeft: 200,\r\n        paddingRight: 200,\r\n    },\r\n    root: {\r\n        marginTop: 20,\r\n    },\r\n    profileAvatar: {\r\n        height: 128,\r\n        width: 128,\r\n    },\r\n    profileAvatarLg: {\r\n        height: 168,\r\n        width: 168,\r\n    },\r\n    usernameDisplay: {\r\n        marginLeft: 'auto',\r\n       \r\n    },\r\n    statsInfo: {\r\n        marginTop: 40,\r\n        margin: 'auto',\r\n    }\r\n}));\r\n\r\nfunction ProfilePage(props) {\r\n    const history = useHistory(); //The history API to access the brower history. \r\n    const classes = useStyles(); //Custom styling.\r\n    \r\n    useEffect(() => {\r\n        //First, if the user doesn't exist in state, re-route to the login page.\r\n        if(!props.user) {\r\n            history.push('/');\r\n        }\r\n        else if(props.user) {\r\n            //Else, we make an axios call to request the user (an updated version of the user)\r\n            //props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/grab/user/${props.user.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.user) {\r\n                    props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\r\n                }\r\n                else if(response.data === 'user not found') {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find your profile!',\r\n                        'error',\r\n                    );\r\n                    history.push('/');\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error retreiving your profile. Please try again!',\r\n                    'error',\r\n                );\r\n                history.push('/');\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Container \r\n            maxWidth='xl' \r\n            className={classes.container}\r\n        >\r\n            <Grid \r\n                className={classes.root}\r\n                container \r\n            >\r\n                <Grid \r\n                    item \r\n                    container \r\n                    xs={12}\r\n                    spacing={5}\r\n                >\r\n                    <Grid \r\n                        item \r\n                        xs={2}\r\n                        style={{\r\n                            marginRight: 'auto',\r\n                        }}\r\n                    >\r\n                        {/* Below is the avatar for xs and sm screens at 128x128 pixels */}\r\n                        <Hidden \r\n                            mdUp \r\n                        >\r\n                            <Avatar \r\n                                className={classes.profileAvatar} \r\n                                src={`http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`} \r\n                                title={`${props.user.username}`} \r\n                                alt={`${props.user.username}`} \r\n                            />\r\n                        </Hidden>\r\n                        {/* Below will be the avatar for medium screen and up devices */ }\r\n                        <Hidden \r\n                            smDown \r\n                        >\r\n                            <Avatar \r\n                                className={classes.profileAvatarLg}\r\n                                src={`http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`} \r\n                                title={`${props.user.username}`} \r\n                                alt={`${props.user.username}`} \r\n                            />\r\n                        </Hidden>\r\n                    </Grid>\r\n                    <Grid \r\n                        item \r\n                        xs={6} \r\n                    >\r\n                        <Typography \r\n                            variant='h4' \r\n                            component='h4'\r\n                        >\r\n                            {props.user.username}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfilePage);\r\n\r\n"]},"metadata":{},"sourceType":"module"}