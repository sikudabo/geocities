{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\NotificationsComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 100\n  },\n  item: {\n    margin: 'auto'\n  },\n  list: {\n    margin: 'auto',\n    maxWidth: 700\n  }\n}));\n\nfunction NotificationsComponent(props) {\n  _s();\n\n  const [deletingNotification, setDeletingNotification] = useState(false); //Backdrop when we want to delete notification.\n\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {\n    if (props.mainUser === null) {\n      history.push('/');\n    } else {\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/grab/user/${props.mainUser.uniqueUserId}`\n      }).then(response => {\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        props.dispatch({\n          type: 'ThemeChange',\n          payload: response.data.user.profileTheme\n        });\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error gathering your notifications! Please try again', 'error');\n        history.goBack(1);\n      });\n    }\n  }, []);\n\n  function utcToDateString(utc) {\n    let date = new Date(utc);\n    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n    let month = months[date.getMonth()];\n    let day = date.getDate();\n    let year = date.getFullYear();\n    return month + ' ' + day + ', ' + year;\n  }\n\n  if (props.mainUser !== null) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.root,\n      children: props.mainUser.notifications.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: classes.list,\n          children: props.mainUser.notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: notification.type === 'post comment' && /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                style: {\n                  cursor: 'pointer',\n                  marginBottom: 20\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`,\n                    alt: `${notification.sender}`,\n                    title: `${notification.sender}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: utcToDateString(notification.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 57\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: notification.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 41\n            }, this)\n          }, index.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Backdrop, {\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(NotificationsComponent, \"TaioUrxSUjibbY1Gjz3X655ZYjg=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = NotificationsComponent;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user,\n    primary: state.userThemeReducer.primary\n  };\n}\n\nexport default connect(mapStateToProps)(NotificationsComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationsComponent\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/NotificationsComponent.js"],"names":["React","useState","useEffect","Grid","List","ListItem","ListItemAvatar","ListItemText","Typography","Button","connect","Backdrop","CircularProgress","useHistory","makeStyles","swal","axios","Avatar","Paper","useStyles","root","marginTop","item","margin","list","maxWidth","NotificationsComponent","props","deletingNotification","setDeletingNotification","history","classes","mainUser","push","method","url","uniqueUserId","then","response","dispatch","type","payload","data","user","profileTheme","catch","err","console","log","message","goBack","utcToDateString","utc","date","Date","months","month","getMonth","day","getDate","year","getFullYear","notifications","length","map","notification","index","cursor","marginBottom","uniqueSenderId","sender","msg","toString","mapStateToProps","state","userReducer","primary","userThemeReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        marginTop: 100,\r\n    },\r\n    item: {\r\n        margin: 'auto',\r\n    },\r\n    list: {\r\n        margin: 'auto',\r\n        maxWidth: 700,\r\n    },\r\n}));\r\n\r\nfunction NotificationsComponent(props) {\r\n    const [deletingNotification, setDeletingNotification] = useState(false); //Backdrop when we want to delete notification.\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    \r\n    useEffect(() => {\r\n        if(props.mainUser === null) {\r\n            history.push('/');\r\n        }\r\n        else {\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/grab/user/${props.mainUser.uniqueUserId}`\r\n            }).then(response => {\r\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error gathering your notifications! Please try again',\r\n                    'error',\r\n                );\r\n                history.goBack(1);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function utcToDateString(utc) {\r\n        let date = new Date(utc);\r\n        let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n        let month = months[date.getMonth()];\r\n        let day = date.getDate();\r\n        let year = date.getFullYear();\r\n        return month + ' ' + day + ', ' + year;\r\n    }\r\n\r\n    if(props.mainUser !== null) {\r\n        return (\r\n            <Grid \r\n                container \r\n                className={classes.root}\r\n            >\r\n                {props.mainUser.notifications.length > 0 &&\r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                    >\r\n                        <List\r\n                            className={classes.list} \r\n                        >\r\n                            {props.mainUser.notifications.map((notification, index) => (\r\n                                <div \r\n                                    key={index.toString()} \r\n                                >\r\n                                    {notification.type === 'post comment' &&\r\n                                        <Paper\r\n                                            elevation={3}\r\n                                        >\r\n                                            <ListItem \r\n                                                style={{\r\n                                                    cursor: 'pointer',\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar \r\n                                                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${notification.uniqueSenderId}`}\r\n                                                        alt={`${notification.sender}`}\r\n                                                        title={`${notification.sender}`}\r\n                                                    />\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {utcToDateString(notification.date)}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {notification.msg}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Paper>\r\n                                    }\r\n                                </div>\r\n                            ))}\r\n                        </List>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Backdrop>\r\n                <CircularProgress color='primary' />\r\n            </Backdrop>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(NotificationsComponent);\r\n\r\n"]},"metadata":{},"sourceType":"module"}