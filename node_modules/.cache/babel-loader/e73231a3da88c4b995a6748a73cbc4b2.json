{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simeonikudabo/Downloads/geocities/src/components/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiThumbUp, mdiComment } from '@mdi/js';\nimport * as _ from 'underscore';\nimport Plyr from 'react-plyr';\n\nconst useStyles = () => ({\n  grid: {\n    marginTop: 100\n  },\n  card: {\n    maxWidth: 450,\n    margin: 'auto'\n  },\n  media: {\n    height: 0,\n    padding: '56.25%'\n  },\n  image: {\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n});\n\nfunction Feed(props) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    if (props.user !== null) {\n      return axios({\n        method: 'GET',\n        url: 'http://192.168.0.17:3001/api/get/user/feed/posts'\n      }).then(response => {\n        props.dispatch({\n          type: 'ThemeChange',\n          payload: props.user.profileTheme\n        });\n        setPosts([...response.data.posts]);\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error rectrieving posts for the feed! Please try again.', 'error');\n        history.goBack(1);\n      });\n    } else {\n      return axios({\n        method: 'GET',\n        url: 'http://192.168.0.17:3001/api/get/nonuser/feed/posts'\n      }).then(response => {\n        setPosts([...response.data.posts]);\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error retreiving the posts for the feed! Please try again.', 'error');\n        history.goBack(1);\n      });\n    }\n  }, []);\n\n  function timeDifference(date2, dateString) {\n    //This function will return whether or not we display something like \"2 hrs ago\" \"20 min ago\" or the date string for a post\n    let date1 = Date.now();\n    let difference = date1 - date2;\n    let daysDifference = Math.floor(difference / 1000 / 60 / 60 / 24);\n    let hoursDifference = Math.floor(difference / 1000 / 60 / 60);\n    let minutesDifference = Math.floor(difference / 1000 / 60);\n    let secondsDifference = Math.floor(difference / 1000);\n\n    if (daysDifference > 0) {\n      return dateString;\n    } else if (hoursDifference > 0 && hoursDifference < 23) {\n      return `${hoursDifference} hr ago`;\n    } else if (minutesDifference > 0 && minutesDifference < 60) {\n      return `${minutesDifference} min ago`;\n    } else if (minutesDifference === 0) {\n      return `${secondsDifference} secs ago`;\n    } else {\n      return dateString;\n    }\n  }\n\n  if (props.user !== null) {\n    if (posts.length > 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.grid,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            align: \"center\",\n            children: \"GeoCities feed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.grid,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            align: \"center\",\n            children: \"No posts in GeoCities feed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    if (posts.length > 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.grid,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            align: \"center\",\n            children: \"GeoCities feed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.grid,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            align: \"center\",\n            children: \"No posts in GeoCities feed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\n\n_s(Feed, \"Xq9irOekgAl421jxLbMDu5WuLKM=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Feed;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    primary: state.themeReducer.theme\n  };\n}\n\nexport default connect(mapStateToProps)(Feed);\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/Feed.js"],"names":["React","useState","useEffect","useHistory","HashLink","Link","swal","axios","connect","Grid","Card","CardHeader","CardMedia","CardContent","CardActions","Button","Avatar","Typography","makeStyles","Backdrop","CircularProgress","IconButton","Icon","mdiThumbUp","mdiComment","_","Plyr","useStyles","grid","marginTop","card","maxWidth","margin","media","height","padding","image","maxHeight","Feed","props","classes","history","posts","setPosts","user","method","url","then","response","dispatch","type","payload","profileTheme","data","catch","err","console","log","message","goBack","timeDifference","date2","dateString","date1","Date","now","difference","daysDifference","Math","floor","hoursDifference","minutesDifference","secondsDifference","length","mapStateToProps","state","userReducer","primary","themeReducer","theme"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiThumbUp, mdiComment } from '@mdi/js';\nimport * as _ from 'underscore';\nimport Plyr from 'react-plyr';\n\nconst useStyles = (() => ({\n    grid: {\n        marginTop: 100,\n    },\n    card: {\n        maxWidth: 450,\n        margin: 'auto',\n    },\n    media: {\n        height: 0,\n        padding: '56.25%',\n    },\n    image: {\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n}));\n\nfunction Feed(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        if(props.user !== null) {\n            return axios({\n                method: 'GET', \n                url: 'http://192.168.0.17:3001/api/get/user/feed/posts',\n            }).then(response => {\n                props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\n                setPosts([...response.data.posts]);\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error rectrieving posts for the feed! Please try again.',\n                    'error',\n                );\n                history.goBack(1);\n            });\n        }\n        else {\n            return axios({\n                method: 'GET',\n                url: 'http://192.168.0.17:3001/api/get/nonuser/feed/posts',\n            }).then(response => {\n                setPosts([...response.data.posts]);\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error retreiving the posts for the feed! Please try again.',\n                    'error',\n                );\n                history.goBack(1);\n            });\n        }\n    }, []);\n\n    function timeDifference(date2, dateString) {\n        //This function will return whether or not we display something like \"2 hrs ago\" \"20 min ago\" or the date string for a post\n        let date1 = Date.now();\n        let difference = date1 - date2;\n        let daysDifference = Math.floor(difference/1000/60/60/24);\n        let hoursDifference = Math.floor(difference/1000/60/60);\n        let minutesDifference = Math.floor(difference/1000/60);\n        let secondsDifference = Math.floor(difference/1000);\n        if(daysDifference > 0) {\n            return dateString;\n        }\n        else if(hoursDifference > 0 && hoursDifference < 23) {\n            return `${hoursDifference} hr ago`;\n        }\n        else if(minutesDifference > 0 && minutesDifference < 60) {\n            return `${minutesDifference} min ago`;\n        }\n        else if(minutesDifference === 0) {\n            return `${secondsDifference} secs ago`\n        }\n        else {\n            return dateString;\n        }\n    }\n    if(props.user !== null) {\n        if(posts.length > 0) {\n            return (\n                <Grid \n                    container \n                    className={classes.grid} \n                >\n                    <Grid \n                        item \n                        xs={12} \n                    >\n                        <Typography \n                            variant='h6' \n                            component='h6' \n                            align='center' \n                        >\n                            GeoCities feed \n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n        else {\n            return (\n                <Grid \n                    container \n                    className={classes.grid} \n                >\n                    <Grid \n                        item\n                        xs={12} \n                    >\n                        <Typography \n                            variant='h6' \n                            component='h6' \n                            align='center' \n                        >\n                            No posts in GeoCities feed!\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n    }\n    else {\n        if(posts.length > 0) {\n            return (\n                <Grid \n                    container \n                    className={classes.grid} \n                >\n                    <Grid \n                        item\n                        xs={12} \n                    >\n                        <Typography \n                            variant='h6' \n                            component='h6' \n                            align='center' \n                        >\n                            GeoCities feed\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n        else {\n            return (\n                <Grid \n                    container \n                    className={classes.grid} \n                >\n                    <Grid \n                        item \n                        xs={12} \n                    >\n                        <Typography \n                            variant='h6' \n                            component='h6' \n                            align='center' \n                        >\n                            No posts in GeoCities feed\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        user: state.userReducer.user,\n        primary: state.themeReducer.theme,\n    };\n}\n\nexport default connect(mapStateToProps)(Feed);"]},"metadata":{},"sourceType":"module"}