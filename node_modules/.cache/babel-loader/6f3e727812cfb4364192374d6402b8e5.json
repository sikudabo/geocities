{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\UserPostsCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiThumbUp, mdiThumbUpOutline, mdiComment, mdiCommentOutline, mdiChevronDown, mdiChevronUp, mdiDelete, mdiSend } from '@mdi/js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport * as _ from 'underscore';\nimport { connect } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 600,\n    margin: 'auto',\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction UserPostsCard(props) {\n  _s();\n\n  const classes = useStyles(); //Custom styles for the component\n\n  const formRef = useRef(null); //Ref for the validator form\n\n  const [expanded, setExpanded] = useState(false); //This expands the validator form\n\n  const [comment, setComment] = useState('');\n  const [commentSending, setCommentSending] = useState(false);\n  useEffect(() => {\n    ValidatorForm.addValidationRule('notEmpty', v => {\n      if (v.length < 1) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        children: props.post.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this),\n      subheader: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        component: \"span\",\n        color: \"textSecondary\",\n        children: props.post.dateString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this),\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: `http://192.168.0.9:3001/api/get/avatar/by/id/${props.post.uniqueUserId}`,\n        alt: `${props.post.username}`,\n        title: `${props.post.username}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        component: \"p\",\n        children: props.post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: props.post.likes.includes(props.mainUser) ? mdiThumbUp : mdiThumbUpOutline,\n          size: 1,\n          title: \"Post like button\",\n          \"aria-label\": \"Post like button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.post.likes.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: props.post.likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: _.find(props.post.comments, comment => comment.uniqueUserId === props.mainUser.uniqueUserId) ? mdiComment : mdiCommentOutline,\n          size: 1,\n          title: \"Comment button\",\n          \"aria-label\": \"Comment button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.post.comments.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: props.post.comments.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.post.uniqueUserId === props.mainUser.uniqueUserId && /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            path: mdiDelete,\n            size: 1,\n            title: \"Delete button\",\n            \"aria-label\": \"Delete button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          marginLeft: 'auto'\n        },\n        onClick: () => setExpanded(!expanded),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          path: expanded ? mdiChevronUp : mdiChevronDown,\n          size: 1,\n          title: expanded ? 'Expand less' : 'Expand more',\n          \"aria-label\": expanded ? 'Expand less' : 'Expand more'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: expanded,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n          ref: formRef,\n          onSubmit: e => e.preventDefault(),\n          children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Comment\",\n            placeholder: \"Add a comment...\",\n            variant: \"outlined\",\n            color: \"primary\",\n            helperText: \"Add a comment\",\n            value: comment,\n            onChange: e => setComment(e.target.value),\n            validator: ['notEmpty'],\n            errorMessages: ['You must enter some text to send a comment!'],\n            InputLabelProps: {\n              shrink: true\n            },\n            rows: 4,\n            multiline: true,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n              path: mdiSend,\n              size: 1,\n              title: \"Send icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this),\n            \"aria-label\": \"Send comment button\",\n            disabled: commentSending,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserPostsCard, \"jZtACMih2x+bvr8ZydtDG1beEnU=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserPostsCard;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user,\n    posts: state.userPostsReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(UserPostsCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPostsCard\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/UserPostsCard.js"],"names":["React","useState","useRef","useEffect","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","Collapse","ValidatorForm","TextValidator","Button","Divider","IconButton","Icon","mdiThumbUp","mdiThumbUpOutline","mdiComment","mdiCommentOutline","mdiChevronDown","mdiChevronUp","mdiDelete","mdiSend","makeStyles","axios","_","connect","useStyles","theme","card","maxWidth","margin","padding","spacing","backgroundColor","palette","background","paper","UserPostsCard","props","classes","formRef","expanded","setExpanded","comment","setComment","commentSending","setCommentSending","addValidationRule","v","length","post","username","dateString","uniqueUserId","text","likes","includes","mainUser","find","comments","marginLeft","e","preventDefault","target","value","shrink","mapStateToProps","state","userReducer","user","posts","userPostsReducer"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@mdi/react';\r\nimport { mdiThumbUp, mdiThumbUpOutline, mdiComment, mdiCommentOutline, mdiChevronDown, mdiChevronUp, mdiDelete, mdiSend } from '@mdi/js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport * as _ from 'underscore';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: 600,\r\n        margin: 'auto',\r\n        padding: theme.spacing(2),\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nfunction UserPostsCard(props) {\r\n    const classes = useStyles(); //Custom styles for the component\r\n    const formRef = useRef(null); //Ref for the validator form\r\n    const [expanded, setExpanded] = useState(false); //This expands the validator form\r\n    const [comment, setComment] = useState('');\r\n    const [commentSending, setCommentSending] = useState(false);\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('notEmpty', v => {\r\n            if(v.length < 1) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Card \r\n            className={classes.card} \r\n        >\r\n            <CardHeader \r\n                title={\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        {props.post.username}\r\n                    </Typography>\r\n                }\r\n                subheader={\r\n                    <Typography \r\n                        variant='subtitle1' \r\n                        component='span' \r\n                        color='textSecondary' \r\n                    >\r\n                        {props.post.dateString}\r\n                    </Typography>\r\n                }\r\n                avatar={\r\n                    <Avatar \r\n                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${props.post.uniqueUserId}`}\r\n                        alt={`${props.post.username}`}\r\n                        title={`${props.post.username}`} \r\n                    />\r\n                }\r\n            />\r\n            <CardContent>\r\n                <Typography \r\n                    variant='body2' \r\n                    component='p' \r\n                >\r\n                    {props.post.text}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <IconButton \r\n                    color='primary'\r\n                >\r\n                    <Icon  \r\n                        path={props.post.likes.includes(props.mainUser) ? mdiThumbUp : mdiThumbUpOutline}\r\n                        size={1} \r\n                        title='Post like button'\r\n                        aria-label='Post like button' \r\n                    />\r\n                    <div>\r\n                        {props.post.likes.length > 0 &&\r\n                            <Typography \r\n                                variant='body1' \r\n                                component='p' \r\n                            >\r\n                                {props.post.likes.length}\r\n                            </Typography>\r\n                        }\r\n                    </div>\r\n                </IconButton>\r\n                <IconButton \r\n                    color='primary'\r\n                >\r\n                    <Icon \r\n                        path={_.find(props.post.comments, comment => comment.uniqueUserId === props.mainUser.uniqueUserId) ? mdiComment : mdiCommentOutline} \r\n                        size={1}\r\n                        title='Comment button' \r\n                        aria-label='Comment button' \r\n                    />\r\n                    <div>\r\n                        {props.post.comments.length > 0 &&\r\n                            <Typography \r\n                                variant='body1' \r\n                                component='p' \r\n                            >\r\n                                {props.post.comments.length}\r\n                            </Typography>\r\n                        }\r\n                    </div>\r\n                </IconButton>\r\n                <div>\r\n                    {props.post.uniqueUserId === props.mainUser.uniqueUserId &&\r\n                        <IconButton \r\n                            color='primary' \r\n                        >\r\n                            <Icon \r\n                                path={mdiDelete} \r\n                                size={1} \r\n                                title='Delete button' \r\n                                aria-label='Delete button' \r\n                            />\r\n                        </IconButton>\r\n                    }\r\n                </div>\r\n                <IconButton \r\n                    style={{\r\n                        marginLeft: 'auto' \r\n                    }}\r\n                    onClick={() => setExpanded(!expanded)}\r\n                >\r\n                    <Icon \r\n                        path={expanded ? mdiChevronUp : mdiChevronDown} \r\n                        size={1}\r\n                        title={expanded ? 'Expand less' : 'Expand more'} \r\n                        aria-label={expanded ? 'Expand less' : 'Expand more'} \r\n                    />\r\n                </IconButton>\r\n            </CardActions>\r\n            <Divider />\r\n            <Collapse \r\n                in={expanded} \r\n            >\r\n                <CardContent>\r\n                    <ValidatorForm \r\n                        ref={formRef} \r\n                        onSubmit={e => e.preventDefault()} \r\n                    >\r\n                        <TextValidator \r\n                            label='Comment' \r\n                            placeholder='Add a comment...' \r\n                            variant='outlined' \r\n                            color='primary' \r\n                            helperText='Add a comment' \r\n                            value={comment} \r\n                            onChange={e => setComment(e.target.value)} \r\n                            validator={['notEmpty']}\r\n                            errorMessages={['You must enter some text to send a comment!']}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            rows={4}\r\n                            multiline \r\n                            fullWidth \r\n                        />\r\n                        <Button \r\n                            color='primary' \r\n                            variant='outlined' \r\n                            startIcon={\r\n                                <Icon \r\n                                    path={mdiSend} \r\n                                    size={1} \r\n                                    title='Send icon' \r\n                                />\r\n                            }\r\n                            aria-label='Send comment button' \r\n                            disabled={commentSending}\r\n                        >\r\n                            Send \r\n                        </Button>\r\n                    </ValidatorForm>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        posts: state.userPostsReducer.posts,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserPostsCard);"]},"metadata":{},"sourceType":"module"}