{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport Icon from '@mdi/react';\nimport { mdiCheckBold, mdiPencil, mdiClose, mdiCamera, mdiVideo, mdiTwitter, mdiInstagram, mdiYoutube } from '@mdi/js';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UserPostsCard from './UserPostsCard';\nimport Resizer from 'react-image-file-resizer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Divider from '@material-ui/core/Divider';\nimport Link from '@material-ui/core/Link';\n\nfunction TabPanel(props) {\n  //This component will serve as the panel for each individual tab\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    hidden: value !== index,\n    role: \"tabpanel\",\n    id: `tabpanel-${index}`,\n    \"aria-label\": `tab-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    style: {\n      marginTop: 100\n    },\n    children: value === index && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.any.isRequired,\n  index: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`\n  };\n}\n\nfunction ProfilePage(props) {\n  _s();\n\n  const history = useHistory(); //The history API to access the brower history. \n\n  if (props.user === null) {\n    history.push('/');\n  }\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: 100\n    },\n    profileAvatar: {\n      height: 128,\n      width: 128,\n      margin: 'auto'\n    },\n    profileAvatarLg: {\n      height: 168,\n      width: 168,\n      margin: 'auto'\n    },\n    usernameDisplay: {\n      marginTop: 40,\n      margin: 'auto'\n    },\n    statsInfo: {\n      marginTop: 40,\n      textAlign: 'center'\n    },\n    paper: {\n      backgroundColor: props.user ? props.user.profileTheme : 'rgb(0, 20, 60)',\n      color: 'rgb(255, 255, 255)',\n      marginTop: 40\n    },\n    input: {\n      display: 'none'\n    }\n  }));\n  const classes = useStyles(); //Custom styling.\n\n  const [openDialog, setOpenDialog] = useState(false); //Variable and setter to open and close dialog.\n\n  const [curTab, setTab] = useState(0); //Variable and setter to control proper tab.\n\n  const [curTab2, setTab2] = useState(0);\n  const [textPost, setTextPost] = useState(''); //Variable and setter for text post control\n\n  const [posting, setPosting] = useState(false); //Hides dialog AppBar and tabs when a post is posting to the server\n\n  const [posts, setPosts] = useState([]); //Personal profile posts for the user. \n\n  const [uploadPhoto, setUploadPhoto] = useState(null); // Variable and setter for a photo to be uploaded\n\n  const [photoUploading, setPhotoUploading] = useState(null); //Variable and setter to disable button while photo is uploading.\n\n  const [photoCaption, setPhotoCaption] = useState(''); //Variable and setter for a caption associated with a photo upload.\n\n  const [uploadVideo, setUploadVideo] = useState(null); //Variable and setter for a video to be uploaded \n\n  const [videoUploading, setVideoUploading] = useState(null); //Variable and setter to disable button while video is uploading. \n\n  const [videoCaption, setVideoCaption] = useState(null); //Variable and setter for the caption for a video post. \n\n  const [user, setUser] = useState(props.user);\n  const [communities, setCommunities] = useState([]); //This will be an array of communities a user belongs to.\n\n  useEffect(() => {\n    //First, if the user doesn't exist in state, re-route to the login page.\n    if (props.user === null) {\n      history.push('/');\n      return;\n    } else if (props.user) {\n      //Else, we make an axios call to request the user (an updated version of the user)\n      //props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/grab/user/${props.user.uniqueUserId}`\n      }).then(response => {\n        if (response.data.user) {\n          props.dispatch({\n            type: 'user/updateUser',\n            payload: response.data.user\n          });\n          props.dispatch({\n            type: 'ThemeChange',\n            payload: response.data.user.profileTheme\n          });\n          props.dispatch({\n            type: 'userPosts/updatePosts',\n            payload: response.data.posts\n          });\n          setCommunities(response.data.communities);\n        } else if (response.data === 'user not found') {\n          swal('Uh Oh!', 'We could not find your profile!', 'error');\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error retreiving your profile. Please try again!', 'error');\n        history.push('/');\n      });\n    }\n  }, []);\n  useEffect(() => {\n    //If the user is ever null, get back to the log in page. \n    if (user === null) {\n      history.push('/');\n    }\n  }, [user]);\n\n  function handleTextPost() {\n    //Function that handles submitting a text post to the server. \n    setPosting(true);\n\n    if (!textPost) {\n      swal('Uh Oh!', 'You must enter some text', 'error');\n      setPosting(false);\n    } else {\n      let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n      let date = new Date();\n      let year = date.getFullYear();\n      let month = months[date.getMonth()];\n      let day = date.getDate();\n      let data = JSON.stringify({\n        uniquePostId: Date.now() + props.user.uniqueUserId + props.user.username,\n        uniqueUserId: props.user.uniqueUserId,\n        username: props.user.username,\n        type: 'text',\n        context: 'personal',\n        text: textPost,\n        dateString: `${month} ${day}, ${year}`,\n        link: '',\n        title: '',\n        community: '',\n        caption: '',\n        src: '',\n        privacy: props.user.profilePrivacy\n      });\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.9:3001/api/upload/text/link/post',\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.data.posts) {\n          swal('Great!', 'Post was successfully uploaded!', 'success');\n          setPosting(false);\n          setTextPost('');\n          setOpenDialog(false);\n          console.log(response.data.posts); //setPosts(posts => [response.data.posts[0], ...posts]);\n          //Maybe altering the code to just push a new value to the array will work?\n\n          props.dispatch({\n            type: 'userPosts/updatePosts',\n            payload: response.data.posts\n          });\n        } else {\n          swal('Uh Oh!', 'There was an error uploading that post! Please try again.', 'error');\n          setPosting(false);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error uploading that post! Please try again.', 'error');\n        setPosting(false);\n      });\n    }\n  }\n\n  function resizerFunction(file) {\n    //This is a wrapper for the file resizer \n    return new Promise(resolve => {\n      Resizer.imageFileResizer(file, 600, 600, 'JPEG', 100, 0, uri => {\n        resolve(uri);\n      }, 'blob');\n    });\n  }\n\n  async function handlePhotoChange(e) {\n    let file = e.target.files[0];\n    let resizedPhoto = await resizerFunction(file);\n    setUploadPhoto(resizedPhoto);\n  }\n\n  function handlePhotoUpload() {\n    //Function that will handle sending an uploaded photo to the server after resizing it.\n    setPhotoUploading(true);\n\n    if (!uploadPhoto) {\n      swal('Uh Oh!', 'You must select a photo to upload!', 'error');\n      setPhotoUploading(false);\n    } else {\n      let data = new Date();\n      let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n      let month = months[data.getMonth()];\n      let day = data.getDate();\n      let year = data.getFullYear();\n      let dateString = `${month} ${day}, ${year}`;\n      let fd = new FormData();\n      fd.append('photo', uploadPhoto, 'photo.jpg');\n      fd.append('caption', photoCaption);\n      fd.append('uniqueUserId', props.user.uniqueUserId);\n      fd.append('uniquePostId', Date.now() + props.user.username + 'photoupload' + props.user.uniqueUserId);\n      fd.append('username', props.user.username);\n      fd.append('dateString', dateString);\n      fd.append('type', 'photo');\n      fd.append('context', 'personal');\n      fd.append('link', `http://192.168.0.9:3000/profile#${Date.now()}${props.user.username}photoupload${props.user.uniqueUserId}`);\n      fd.append('community', '');\n      fd.append('title', '');\n      fd.append('privacy', props.user.profilePrivacy);\n      fd.append('text', '');\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.9:3001/api/upload/photo',\n        data: fd,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        if (response.data.posts) {\n          props.dispatch({\n            type: 'userPosts/updatePosts',\n            payload: response.data.posts\n          });\n          swal('Great!', 'Successfully uploaded photo!', 'success');\n          setPhotoCaption('');\n          setUploadPhoto(null);\n          setOpenDialog(false);\n          setPhotoUploading(false);\n        } else {\n          swal('Uh Oh!', 'There was an error uploading that photo!', 'error');\n          setPhotoUploading(false);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error uploading that photo!', 'error');\n        setPhotoUploading(false);\n      });\n    }\n  }\n\n  function handleVideoChange(e) {\n    //This function will handle setting the uploadVideo variable to the valua of the file. \n    setUploadVideo(e.target.files[0]);\n  }\n\n  function handleVideoUpload() {\n    //Function that will handle sending an uploaded video to the server.\n    setVideoUploading(true);\n\n    if (!uploadVideo) {\n      swal('Uh Oh!', 'You must select a video to upload!', 'error');\n      setVideoUploading(false);\n    } else {\n      let data = new Date();\n      let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n      let month = months[data.getMonth()];\n      let day = data.getDate();\n      let year = data.getFullYear();\n      let dateString = `${month} ${day}, ${year}`;\n      let ext = uploadVideo.name.split('.').pop().toString(); //This will get the extension name of the video \n\n      ext = 'video.' + ext;\n      let fd = new FormData();\n      fd.append('photo', uploadVideo, ext); //Keep the name \"photo\" for the server upload although it is technically a video!\n\n      fd.append('caption', videoCaption);\n      fd.append('uniqueUserId', props.user.uniqueUserId);\n      fd.append('uniquePostId', Date.now() + props.user.username + 'videoupload' + props.user.uniqueUserId);\n      fd.append('username', props.user.username);\n      fd.append('dateString', dateString);\n      fd.append('type', 'video');\n      fd.append('context', 'personal');\n      fd.append('link', `http://192.168.0.9:3000/profile#${Date.now()}${props.user.username}videoupload${props.user.uniqueUserId}`);\n      fd.append('community', '');\n      fd.append('title', '');\n      fd.append('privacy', props.user.profilePrivacy);\n      fd.append('text', '');\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.9:3001/api/upload/photo',\n        data: fd,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        if (response.data.posts) {\n          props.dispatch({\n            type: 'userPosts/updatePosts',\n            payload: response.data.posts\n          });\n          swal('Great!', 'Successfully uploaded video!', 'success');\n          setVideoCaption('');\n          setUploadVideo(null);\n          setOpenDialog(false);\n          setVideoUploading(false);\n        } else {\n          swal('Uh Oh!', 'There was an error uploading that video!', 'error');\n          setVideoUploading(false);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error uploading that video!', 'error');\n        setVideoUploading(false);\n      });\n    }\n  }\n\n  function findFollowers() {\n    //This function will enable us to go to a page and find all of a users followers. \n    history.push('/followers');\n  }\n\n  function findFollowing() {\n    //This function will enable us to go to a page and find all users a user is following. \n    history.push('/following');\n  }\n\n  if (props.user) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.root,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Hidden, {\n            mdUp: true,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.profileAvatar,\n              src: `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`,\n              title: `${props.user.username}`,\n              alt: `${props.user.username}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n            smDown: true,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.profileAvatarLg,\n              src: `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`,\n              title: `${props.user.username}`,\n              alt: `${props.user.username}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h4\",\n          align: \"center\",\n          className: classes.usernameDisplay,\n          children: props.user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 21\n        }, this), props.user.isVerified && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          style: {\n            margin: 'auto',\n            textAlign: 'center',\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            path: mdiCheckBold,\n            size: 1,\n            title: \"Verified\",\n            style: {\n              color: 'rgb(0, 128, 0)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 29\n          }, this), \" Verified\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        spacing: 1,\n        className: classes.statsInfo,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: props.user.followers.length > 0 ? findFollowers : e => console.log('No Followers'),\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            children: \"Followers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: props.user.followers.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: props.user.following.length > 0 ? findFollowing : e => console.log('Not following any users'),\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            children: \"Following\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: props.user.following.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            children: \"Karma\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: props.user.karma\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          style: {\n            fontWeight: 'bold',\n            marginTop: 30\n          },\n          children: [props.user.firstName, \" \", props.user.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: 40,\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"small\",\n          justify: \"left\",\n          align: \"left\",\n          children: props.user.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          textAlign: 'center',\n          marginTop: 40\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"outlined\",\n          size: \"large\",\n          onClick: () => setOpenDialog(true),\n          startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n            path: mdiPencil,\n            size: 1,\n            title: \"Post Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 29\n          }, this),\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Dialog, {\n          open: openDialog,\n          fullScreen: true,\n          children: /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(AppBar, {\n              color: \"primary\",\n              hidden: posting,\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                path: mdiClose,\n                size: 1,\n                title: \"Dialog close\",\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: () => setOpenDialog(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n                value: curTab,\n                onChange: (e, newVal) => setTab(newVal),\n                centered: true,\n                children: [/*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(0),\n                  label: \"Text\",\n                  disabled: posting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(1),\n                  label: \"Photo\",\n                  disabled: posting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 682,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(2),\n                  label: \"Video\",\n                  disabled: posting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              index: 0,\n              value: curTab,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Text Post\",\n                placeholder: \"Post a status!\",\n                color: \"primary\",\n                variant: \"outlined\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                \"aria-label\": \"Text Post Field\",\n                rows: 4,\n                onChange: e => setTextPost(e.target.value),\n                value: textPost,\n                helperText: \"Enter a status update!\",\n                multiline: true,\n                fullWidth: true,\n                disabled: posting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: 20\n                },\n                color: \"primary\",\n                variant: \"outlined\",\n                disabled: posting,\n                onClick: handleTextPost,\n                children: posting ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 48\n                }, this) : 'post'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              index: 1,\n              value: curTab,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"h6\",\n                children: \"Post a photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                \"html-for\": \"photoPost\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: classes.input,\n                  type: \"file\",\n                  accept: \"image/jpg, image/jpeg, image/png\",\n                  id: \"photoPost\",\n                  name: \"photoPost\",\n                  onChange: handlePhotoChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  component: \"span\",\n                  \"aria-label\": \"Photo picker button\",\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    path: mdiCamera,\n                    size: 1,\n                    title: \"Photo upload icon\",\n                    \"aria-label\": \"Photo upload icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 755,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Caption\",\n                placeholder: \"Enter a caption for your photo\",\n                variant: \"outlined\",\n                color: \"primary\",\n                value: photoCaption,\n                onChange: e => setPhotoCaption(e.target.value),\n                InputLabelProps: {\n                  shrink: true\n                },\n                rows: 4,\n                multiline: true,\n                required: true,\n                style: {\n                  marginTop: 40\n                },\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: 30\n                },\n                color: \"primary\",\n                variant: \"outlined\",\n                onClick: handlePhotoUpload,\n                disabled: photoUploading,\n                children: photoUploading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 792,\n                  columnNumber: 55\n                }, this) : 'Upload Photo'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              index: 2,\n              value: curTab,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"h6\",\n                children: \"Post a video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                \"html-for\": \"videoPost\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: classes.input,\n                  type: \"file\",\n                  accept: \"video/mp4, video/mov\",\n                  id: \"videoPost\",\n                  name: \"videoPost\",\n                  onChange: handleVideoChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 808,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  component: \"span\",\n                  \"aria-label\": \"Video picker button\",\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    path: mdiVideo,\n                    size: 1,\n                    title: \"Video upload icon\",\n                    \"aria-label\": \"Video upload icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Caption\",\n                placeholder: \"Enter a caption for your video\",\n                variant: \"outlined\",\n                color: \"primary\",\n                value: videoCaption,\n                onChange: e => setVideoCaption(e.target.value),\n                InputLabelProps: {\n                  shrink: true\n                },\n                rows: 4,\n                multiline: true,\n                required: true,\n                style: {\n                  marginTop: 40\n                },\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 850,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: 30\n                },\n                color: \"primary\",\n                variant: \"outlined\",\n                onClick: handleVideoUpload,\n                disabled: videoUploading,\n                children: videoUploading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 860,\n                  columnNumber: 55\n                }, this) : 'Upload Video'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            value: curTab2,\n            onChange: (e, newVal) => setTab2(newVal),\n            centered: true,\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Posts\",\n              ...a11yProps(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"About\",\n              ...a11yProps(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Events\",\n              ...a11yProps(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: 0,\n          index: curTab2,\n          children: [props.posts.length < 1 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            align: \"center\",\n            children: \"No posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 29\n          }, this), props.posts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(UserPostsCard, {\n                user: props.user,\n                post: post,\n                id: post.uniquePostId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 41\n              }, this), index < props.posts.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: 1,\n          index: curTab2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h4\",\n              align: \"center\",\n              children: [\"About \", props.user.firstName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              style: {\n                margin: 'auto',\n                maxWidth: 450,\n                marginTop: 20\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 964,\n                    columnNumber: 45\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: [props.user.firstName, \" \", props.user.lastName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 973,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 962,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 989,\n                    columnNumber: 45\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      component: \"a\",\n                      color: \"primary\",\n                      href: `mailto:${props.user.email}`,\n                      style: {\n                        textAlign: 'center'\n                      },\n                      children: props.user.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1003,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 998,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 987,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1017,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: \"Birthdate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 45\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: props.user.birthdate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1032,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1021,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: \"Profile created on\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1048,\n                    columnNumber: 45\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: [new Date(props.user.dateCreated).getMonth() + 1, \"/\", new Date(props.user.dateCreated).getDate(), \"/\", new Date(props.user.dateCreated).getFullYear()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1057,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1046,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: \"Location\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1073,\n                    columnNumber: 45\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    component: \"p\",\n                    align: \"center\",\n                    children: [props.user.city, \", \", props.user.userState]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1082,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1071,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1068,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1092,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: props.user.college !== 'None' && /*#__PURE__*/_jsxDEV(ListItem, {\n                  alignItems: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"h6\",\n                      align: \"center\",\n                      children: \"College\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1100,\n                      columnNumber: 53\n                    }, this),\n                    secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"p\",\n                      align: \"center\",\n                      children: props.user.college\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1109,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1098,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1095,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"h6\",\n                align: \"center\",\n                children: \"Interests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                children: props.user.interests.map((interest, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                  alignItems: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"p\",\n                      align: \"center\",\n                      children: interest\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1137,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1135,\n                    columnNumber: 45\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1131,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1149,\n                columnNumber: 33\n              }, this), communities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"h6\",\n                  children: \"Communities\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1152,\n                  columnNumber: 41\n                }, this), communities.map((community, index) => /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 3,\n                  style: {\n                    marginBottom: index < communities.length - 1 ? 20 : 0,\n                    cursor: 'pointer'\n                  },\n                  onClick: e => history.push(`/community/${community.name}`),\n                  children: /*#__PURE__*/_jsxDEV(ListItem, {\n                    alignItems: \"flex-start\",\n                    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                        src: `http://192.168.0.9:3001/api/get-photo/${community.avatar}`,\n                        alt: `${community.name} avatar`,\n                        title: `${community.name} avatar`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1172,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1171,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        zeroMinWidth: true,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h6\",\n                          component: \"h6\",\n                          noWrap: true,\n                          children: community.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1185,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1180,\n                        columnNumber: 61\n                      }, this),\n                      secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        component: \"p\",\n                        children: community.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1195,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1178,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1168,\n                    columnNumber: 49\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1159,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1208,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 10\n                },\n                children: props.user.twitterHandle && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                    alignItems: \"start\",\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(Icon, {\n                        path: mdiTwitter,\n                        size: 1,\n                        title: 'Twitter handle',\n                        \"aria-label\": \"Twitter handle icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1220,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1219,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Link, {\n                        component: \"a\",\n                        href: `https://www.twitter.com/${props.user.twitterHandle}`,\n                        color: \"primary\",\n                        rel: \"external\",\n                        title: \"Twitter handle\",\n                        children: props.user.twitterHandle\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1229,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1227,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1216,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1241,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1215,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1209,\n                columnNumber: 33\n              }, this), props.user.instaHandle && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  alignItems: \"start\",\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      path: mdiInstagram,\n                      size: 1,\n                      title: \"Instagram handle\",\n                      \"aria-label\": \"Instagram handle icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1251,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1250,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Link, {\n                      component: \"a\",\n                      color: \"primary\",\n                      href: `https://www.instagram.com/${props.user.instaHandle}`,\n                      rel: \"external\",\n                      \"aria-label\": \"Instagram profile link\",\n                      children: props.user.instaHandle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1260,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1258,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1247,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1272,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1246,\n                columnNumber: 37\n              }, this), props.user.youtubeChannel && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      path: mdiYoutube,\n                      size: 1,\n                      title: \"Youtube channel\",\n                      \"aria-label\": \"Youtube channel icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1281,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1280,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Link, {\n                      component: \"a\",\n                      color: \"primary\",\n                      href: props.user.youtubeChannel,\n                      rel: \"external\",\n                      \"aria-label\": \"Youtube channel link\",\n                      children: \"Youtube link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1290,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1288,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1277,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1302,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1276,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: 2,\n          index: curTab2,\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1308,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: true,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1320,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(ProfilePage, \"a4Xcwao2c/qkETjVxI9zLnb5/Og=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c2 = ProfilePage;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    primary: state.userThemeReducer.primary,\n    posts: state.userPostsReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(ProfilePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ProfilePage\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/ProfilePage.js"],"names":["React","useState","useEffect","useRef","Grid","Avatar","Typography","connect","axios","useHistory","swal","makeStyles","Hidden","Box","Icon","mdiCheckBold","mdiPencil","mdiClose","mdiCamera","mdiVideo","mdiTwitter","mdiInstagram","mdiYoutube","Button","Dialog","DialogContent","AppBar","Paper","Tab","Tabs","PropTypes","TextField","Backdrop","CircularProgress","UserPostsCard","Resizer","List","ListItem","ListItemText","ListItemIcon","ListItemAvatar","Divider","Link","TabPanel","props","children","value","index","other","marginTop","textAlign","propTypes","node","any","isRequired","a11yProps","id","ProfilePage","history","user","push","useStyles","theme","root","profileAvatar","height","width","margin","profileAvatarLg","usernameDisplay","statsInfo","paper","backgroundColor","profileTheme","color","input","display","classes","openDialog","setOpenDialog","curTab","setTab","curTab2","setTab2","textPost","setTextPost","posting","setPosting","posts","setPosts","uploadPhoto","setUploadPhoto","photoUploading","setPhotoUploading","photoCaption","setPhotoCaption","uploadVideo","setUploadVideo","videoUploading","setVideoUploading","videoCaption","setVideoCaption","setUser","communities","setCommunities","method","url","uniqueUserId","then","response","data","dispatch","type","payload","catch","err","console","log","message","handleTextPost","months","date","Date","year","getFullYear","month","getMonth","day","getDate","JSON","stringify","uniquePostId","now","username","context","text","dateString","link","title","community","caption","src","privacy","profilePrivacy","headers","resizerFunction","file","Promise","resolve","imageFileResizer","uri","handlePhotoChange","e","target","files","resizedPhoto","handlePhotoUpload","fd","FormData","append","handleVideoChange","handleVideoUpload","ext","name","split","pop","toString","findFollowers","findFollowing","avatar","isVerified","cursor","followers","length","following","karma","fontWeight","firstName","lastName","bio","newVal","shrink","map","post","marginBottom","maxWidth","email","birthdate","dateCreated","city","userState","college","interests","interest","twitterHandle","instaHandle","youtubeChannel","mapStateToProps","state","userReducer","primary","userThemeReducer","userPostsReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from '@material-ui/core/Box';\r\nimport Icon from '@mdi/react';\r\nimport { mdiCheckBold, mdiPencil, mdiClose, mdiCamera, mdiVideo, mdiTwitter, mdiInstagram, mdiYoutube } from '@mdi/js';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport UserPostsCard from './UserPostsCard';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction TabPanel(props) {\r\n    //This component will serve as the panel for each individual tab\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div \r\n            hidden={value !== index}\r\n            role='tabpanel' \r\n            id={`tabpanel-${index}`}\r\n            aria-label={`tab-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n            style={{\r\n                marginTop: 100,\r\n            }}\r\n        >\r\n            {value === index && \r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    style={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    {children}\r\n                </Grid>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    value: PropTypes.any.isRequired,\r\n    index: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `tab-${index}`,\r\n        'aria-controls': `tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\n\r\nfunction ProfilePage(props) {\r\n    const history = useHistory(); //The history API to access the brower history. \r\n    if(props.user === null) {\r\n        history.push('/');\r\n    }\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            marginTop: 100,\r\n        },\r\n        profileAvatar: {\r\n            height: 128,\r\n            width: 128,\r\n            margin: 'auto',\r\n        },\r\n        profileAvatarLg: {\r\n            height: 168,\r\n            width: 168,\r\n            margin: 'auto',\r\n        },\r\n        usernameDisplay: {\r\n            marginTop: 40,\r\n            margin: 'auto',\r\n        },\r\n        statsInfo: {\r\n            marginTop: 40,\r\n            textAlign: 'center',\r\n        },\r\n        paper: {\r\n            backgroundColor: props.user ? props.user.profileTheme : 'rgb(0, 20, 60)',\r\n            color: 'rgb(255, 255, 255)',\r\n            marginTop: 40,\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n    }));\r\n    const classes = useStyles(); //Custom styling.\r\n    const [openDialog, setOpenDialog] = useState(false); //Variable and setter to open and close dialog.\r\n    const [curTab, setTab] = useState(0); //Variable and setter to control proper tab.\r\n    const [curTab2, setTab2] = useState(0);\r\n    const [textPost, setTextPost] = useState(''); //Variable and setter for text post control\r\n    const [posting, setPosting] = useState(false); //Hides dialog AppBar and tabs when a post is posting to the server\r\n    const [posts, setPosts] = useState([]); //Personal profile posts for the user. \r\n    const [uploadPhoto, setUploadPhoto] = useState(null); // Variable and setter for a photo to be uploaded\r\n    const [photoUploading, setPhotoUploading] = useState(null); //Variable and setter to disable button while photo is uploading.\r\n    const [photoCaption, setPhotoCaption] = useState(''); //Variable and setter for a caption associated with a photo upload.\r\n    const [uploadVideo, setUploadVideo] = useState(null); //Variable and setter for a video to be uploaded \r\n    const [videoUploading, setVideoUploading] = useState(null); //Variable and setter to disable button while video is uploading. \r\n    const [videoCaption, setVideoCaption] = useState(null); //Variable and setter for the caption for a video post. \r\n    const [user, setUser] = useState(props.user);\r\n    const [communities, setCommunities] = useState([]); //This will be an array of communities a user belongs to.\r\n    useEffect(() => {\r\n        //First, if the user doesn't exist in state, re-route to the login page.\r\n        if(props.user === null) {\r\n            history.push('/');\r\n            return;\r\n        }\r\n        else if(props.user) {\r\n            //Else, we make an axios call to request the user (an updated version of the user)\r\n            //props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/grab/user/${props.user.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.user) {\r\n                    props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\r\n                    props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                    setCommunities(response.data.communities);\r\n                }\r\n                else if(response.data === 'user not found') {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find your profile!',\r\n                        'error',\r\n                    );\r\n                    history.push('/');\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error retreiving your profile. Please try again!',\r\n                    'error',\r\n                );\r\n                history.push('/');\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        //If the user is ever null, get back to the log in page. \r\n        if(user === null) {\r\n            history.push('/');\r\n        }\r\n    }, [user]);\r\n\r\n    function handleTextPost() {\r\n        //Function that handles submitting a text post to the server. \r\n        setPosting(true);\r\n        if(!textPost) {\r\n            swal(\r\n                'Uh Oh!',\r\n                'You must enter some text',\r\n                'error',\r\n            );\r\n\r\n            setPosting(false);\r\n        }\r\n        else {\r\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n            let date = new Date();\r\n            let year = date.getFullYear();\r\n            let month = months[date.getMonth()];\r\n            let day = date.getDate();\r\n\r\n            let data = JSON.stringify({\r\n                uniquePostId: Date.now() + props.user.uniqueUserId + props.user.username,\r\n                uniqueUserId: props.user.uniqueUserId,\r\n                username: props.user.username,\r\n                type: 'text', \r\n                context: 'personal',\r\n                text: textPost,\r\n                dateString: `${month} ${day}, ${year}`,\r\n                link: '',\r\n                title: '',\r\n                community: '',\r\n                caption: '',\r\n                src: '',\r\n                privacy: props.user.profilePrivacy,\r\n            });\r\n\r\n            return axios({\r\n                method: 'POST',\r\n                url: 'http://192.168.0.9:3001/api/upload/text/link/post',\r\n                data: data,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then(response => {\r\n                if(response.data.posts) {\r\n                    swal(\r\n                        'Great!',\r\n                        'Post was successfully uploaded!',\r\n                        'success',\r\n                    );\r\n                    setPosting(false);\r\n                    setTextPost('');\r\n                    setOpenDialog(false);\r\n                    console.log(response.data.posts);\r\n                    //setPosts(posts => [response.data.posts[0], ...posts]);\r\n                    //Maybe altering the code to just push a new value to the array will work?\r\n                    props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'There was an error uploading that post! Please try again.',\r\n                        'error',\r\n                    )\r\n                    setPosting(false);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error uploading that post! Please try again.',\r\n                    'error',\r\n                );\r\n                setPosting(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    function resizerFunction(file) {\r\n        //This is a wrapper for the file resizer \r\n        return new Promise(resolve => {\r\n            Resizer.imageFileResizer(\r\n                file,\r\n                600,\r\n                600,\r\n                'JPEG',\r\n                100,\r\n                0,\r\n                uri => {\r\n                    resolve(uri);\r\n                },\r\n                'blob',\r\n            );\r\n        });\r\n    }\r\n\r\n    async function handlePhotoChange(e) {\r\n        let file = e.target.files[0];\r\n        let resizedPhoto = await resizerFunction(file);\r\n        setUploadPhoto(resizedPhoto);\r\n    }\r\n\r\n    function handlePhotoUpload() {\r\n        //Function that will handle sending an uploaded photo to the server after resizing it.\r\n        setPhotoUploading(true);\r\n\r\n        if(!uploadPhoto) {\r\n            swal(\r\n                'Uh Oh!',\r\n                'You must select a photo to upload!',\r\n                'error',\r\n            );\r\n            setPhotoUploading(false);\r\n        }\r\n        else {\r\n            let data = new Date();\r\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n            let month = months[data.getMonth()];\r\n            let day = data.getDate();\r\n            let year = data.getFullYear();\r\n            let dateString = `${month} ${day}, ${year}`;\r\n            let fd = new FormData();\r\n            fd.append('photo', uploadPhoto, 'photo.jpg');\r\n            fd.append('caption', photoCaption);\r\n            fd.append('uniqueUserId', props.user.uniqueUserId);\r\n            fd.append('uniquePostId', Date.now() + props.user.username + 'photoupload' + props.user.uniqueUserId);\r\n            fd.append('username', props.user.username);\r\n            fd.append('dateString', dateString);\r\n            fd.append('type', 'photo');\r\n            fd.append('context', 'personal');\r\n            fd.append('link', `http://192.168.0.9:3000/profile#${Date.now()}${props.user.username}photoupload${props.user.uniqueUserId}`);\r\n            fd.append('community', '');\r\n            fd.append('title', '');\r\n            fd.append('privacy', props.user.profilePrivacy);\r\n            fd.append('text', '');\r\n\r\n            return axios({\r\n                method: 'POST',\r\n                url: 'http://192.168.0.9:3001/api/upload/photo',\r\n                data: fd,\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            }).then(response => {\r\n                if(response.data.posts) {\r\n                    props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                    swal(\r\n                        'Great!',\r\n                        'Successfully uploaded photo!',\r\n                        'success',\r\n                    );\r\n                    setPhotoCaption('');\r\n                    setUploadPhoto(null);\r\n                    setOpenDialog(false);\r\n                    setPhotoUploading(false);\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'There was an error uploading that photo!',\r\n                        'error',\r\n                    );\r\n                    setPhotoUploading(false);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error uploading that photo!',\r\n                    'error',\r\n                );\r\n                setPhotoUploading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleVideoChange(e) {\r\n        //This function will handle setting the uploadVideo variable to the valua of the file. \r\n        setUploadVideo(e.target.files[0]);\r\n    }\r\n\r\n    function handleVideoUpload() {\r\n        //Function that will handle sending an uploaded video to the server.\r\n        setVideoUploading(true);\r\n\r\n        if(!uploadVideo) {\r\n            swal(\r\n                'Uh Oh!',\r\n                'You must select a video to upload!',\r\n                'error',\r\n            );\r\n            setVideoUploading(false);\r\n        }\r\n        else {\r\n            let data = new Date();\r\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n            let month = months[data.getMonth()];\r\n            let day = data.getDate();\r\n            let year = data.getFullYear();\r\n            let dateString = `${month} ${day}, ${year}`;\r\n            let ext = uploadVideo.name.split('.').pop().toString(); //This will get the extension name of the video \r\n            ext = 'video.' + ext;\r\n            let fd = new FormData();\r\n            fd.append('photo', uploadVideo, ext); //Keep the name \"photo\" for the server upload although it is technically a video!\r\n            fd.append('caption', videoCaption);\r\n            fd.append('uniqueUserId', props.user.uniqueUserId);\r\n            fd.append('uniquePostId', Date.now() + props.user.username + 'videoupload' + props.user.uniqueUserId);\r\n            fd.append('username', props.user.username);\r\n            fd.append('dateString', dateString);\r\n            fd.append('type', 'video');\r\n            fd.append('context', 'personal');\r\n            fd.append('link', `http://192.168.0.9:3000/profile#${Date.now()}${props.user.username}videoupload${props.user.uniqueUserId}`);\r\n            fd.append('community', '');\r\n            fd.append('title', '');\r\n            fd.append('privacy', props.user.profilePrivacy);\r\n            fd.append('text', '');\r\n\r\n            return axios({\r\n                method: 'POST',\r\n                url: 'http://192.168.0.9:3001/api/upload/photo',\r\n                data: fd,\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            }).then(response => {\r\n                if(response.data.posts) {\r\n                    props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                    swal(\r\n                        'Great!',\r\n                        'Successfully uploaded video!',\r\n                        'success',\r\n                    );\r\n                    setVideoCaption('');\r\n                    setUploadVideo(null);\r\n                    setOpenDialog(false);\r\n                    setVideoUploading(false);\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'There was an error uploading that video!',\r\n                        'error',\r\n                    );\r\n                    setVideoUploading(false);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error uploading that video!',\r\n                    'error',\r\n                );\r\n                setVideoUploading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    function findFollowers() {\r\n        //This function will enable us to go to a page and find all of a users followers. \r\n        history.push('/followers');\r\n    }\r\n\r\n    function findFollowing() {\r\n        //This function will enable us to go to a page and find all users a user is following. \r\n        history.push('/following');\r\n    }\r\n\r\n    if(props.user) {\r\n        return (\r\n            <Grid \r\n                className={classes.root}\r\n                container \r\n            >\r\n                <Grid \r\n                    item \r\n                    container \r\n                    xs={12}\r\n                >\r\n                    <Grid \r\n                        item \r\n                        xs={12}\r\n                    >\r\n                        {/* Below is the avatar for xs and sm screens at 128x128 pixels */}\r\n                        <Hidden \r\n                            mdUp \r\n                        >\r\n                            <Avatar \r\n                                className={classes.profileAvatar} \r\n                                src={`http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`} \r\n                                title={`${props.user.username}`} \r\n                                alt={`${props.user.username}`} \r\n                            />\r\n                        </Hidden>\r\n                        {/* Below will be the avatar for medium screen and up devices */ }\r\n                        <Hidden \r\n                            smDown \r\n                        >\r\n                            <Avatar \r\n                                className={classes.profileAvatarLg}\r\n                                src={`http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`} \r\n                                title={`${props.user.username}`} \r\n                                alt={`${props.user.username}`} \r\n                            />\r\n                        </Hidden>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                >\r\n                    <Typography \r\n                        variant='h4' \r\n                        component='h4' \r\n                        align='center'\r\n                        className={classes.usernameDisplay} \r\n                    >\r\n                        {props.user.username}\r\n                    </Typography>\r\n                    {props.user.isVerified &&\r\n                        <Typography \r\n                            variant='body1'\r\n                            component='p' \r\n                            style={{\r\n                                margin: 'auto',\r\n                                textAlign:'center',\r\n                                marginTop: 10,\r\n                            }}\r\n                        >\r\n                            <Icon \r\n                                path={mdiCheckBold} \r\n                                size={1} \r\n                                title='Verified' \r\n                                style={{\r\n                                    color: 'rgb(0, 128, 0)'\r\n                                }}\r\n                            /> Verified \r\n                        </Typography>\r\n                    }\r\n                </Grid>\r\n                {/* Below will be the Grid to display Followers, Following, and Karma */}\r\n                <Grid \r\n                    item \r\n                    container \r\n                    xs={12} \r\n                    spacing={1}\r\n                    className={classes.statsInfo}\r\n                >\r\n                    <Grid \r\n                        item \r\n                        xs={4} \r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                        onClick={props.user.followers.length > 0 ? findFollowers: e => console.log('No Followers')}\r\n                    >\r\n                        <Typography \r\n                            variant='h6' \r\n                            component='h6' \r\n                        >\r\n                            Followers \r\n                        </Typography>\r\n                        <Typography \r\n                            variant='body1' \r\n                            component='p'\r\n                        >\r\n                            {props.user.followers.length}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid \r\n                        item \r\n                        xs={4} \r\n                        style={{\r\n                            cursor: 'pointer'\r\n                        }}\r\n                        onClick={props.user.following.length > 0 ? findFollowing : e => console.log('Not following any users')}\r\n                    >\r\n                        <Typography \r\n                            variant='h6' \r\n                            component='h6' \r\n                        >\r\n                            Following \r\n                        </Typography>\r\n                        <Typography \r\n                            variant='body1' \r\n                            component='p' \r\n                        >\r\n                            {props.user.following.length}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid \r\n                        item \r\n                        xs={4} \r\n                    >\r\n                        <Typography \r\n                            variant='h6' \r\n                            component='h6' \r\n                        >\r\n                            Karma \r\n                        </Typography>\r\n                        <Typography \r\n                            variant='body1' \r\n                            component='p' \r\n                        >\r\n                            {props.user.karma}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* End of the Grid for Followers, Following, and Karma */}\r\n                {/* Below is the Grid to display the users' first and last name */}\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    style={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                        style={{\r\n                            fontWeight: 'bold',\r\n                            marginTop: 30,\r\n                        }}\r\n                    >\r\n                        {props.user.firstName} {props.user.lastName}\r\n                    </Typography>\r\n                </Grid>\r\n                {/* End of the Grid to display the users first and last name */}\r\n                {/* Below is the Grid that stores the users BIO */}\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    style={{\r\n                        marginTop: 40,\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    <Typography \r\n                        variant='body2' \r\n                        component='small' \r\n                        justify='left'\r\n                        align='left'\r\n                    >\r\n                        {props.user.bio}\r\n                    </Typography>\r\n                </Grid>\r\n                {/* This is the end of the Grid for the bio.*/ }\r\n                {/* Below is the grid to display the Button that opens the Dialog for the form for posts */}\r\n                <Grid \r\n                    item \r\n                    xs={12}\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginTop: 40,\r\n                    }}\r\n                >\r\n                    <Button \r\n                        color='primary' \r\n                        variant='outlined'  \r\n                        size='large'\r\n                        onClick={() => setOpenDialog(true)}\r\n                        startIcon={\r\n                            <Icon \r\n                                path={mdiPencil} \r\n                                size={1} \r\n                                title='Post Icon' \r\n                            />\r\n                        }\r\n                    >\r\n                        Post \r\n                    </Button>\r\n                </Grid>\r\n                {/* The Grid below will store the Dialog and its' content */}\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                >\r\n                    <Dialog \r\n                        open={openDialog} \r\n                        fullScreen\r\n                    >\r\n                        <DialogContent>\r\n                            <AppBar \r\n                                color='primary'\r\n                                hidden={posting}\r\n                            >\r\n                                <Icon \r\n                                    path={mdiClose} \r\n                                    size={1} \r\n                                    title='Dialog close' \r\n                                    style={{\r\n                                        cursor: 'pointer'\r\n                                    }}\r\n                                    onClick={() => setOpenDialog(false)}\r\n                                />\r\n                                <Tabs \r\n                                    value={curTab}\r\n                                    onChange={(e, newVal) => setTab(newVal)} \r\n                                    centered\r\n                                >\r\n                                    <Tab \r\n                                        {...a11yProps(0)} \r\n                                        label='Text' \r\n                                        disabled={posting}\r\n                                    />\r\n                                    <Tab \r\n                                        {...a11yProps(1)} \r\n                                        label='Photo' \r\n                                        disabled={posting}\r\n                                    />\r\n                                    <Tab \r\n                                        {...a11yProps(2)}\r\n                                        label='Video' \r\n                                        disabled={posting}\r\n                                    />\r\n                                </Tabs>\r\n                            </AppBar>\r\n                            <TabPanel \r\n                                index={0}\r\n                                value={curTab}\r\n                            >\r\n                                <TextField \r\n                                    label='Text Post' \r\n                                    placeholder='Post a status!' \r\n                                    color='primary'\r\n                                    variant='outlined' \r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    aria-label='Text Post Field' \r\n                                    rows={4} \r\n                                    onChange={e => setTextPost(e.target.value)}\r\n                                    value={textPost} \r\n                                    helperText='Enter a status update!' \r\n                                    multiline\r\n                                    fullWidth \r\n                                    disabled={posting}\r\n                                />\r\n                                <Button \r\n                                    style={{\r\n                                        marginTop: 20,\r\n                                    }}\r\n                                    color='primary' \r\n                                    variant='outlined' \r\n                                    disabled={posting}\r\n                                    onClick={handleTextPost}\r\n                                >\r\n                                    {posting ? <CircularProgress /> : 'post'}\r\n                                </Button>\r\n                            </TabPanel>\r\n                            <TabPanel \r\n                                index={1} \r\n                                value={curTab} \r\n                            >\r\n                                <Typography \r\n                                    variant='h6' \r\n                                    component='h6' \r\n                                >\r\n                                    Post a photo\r\n                                </Typography>\r\n                                <label \r\n                                    html-for='photoPost' \r\n                                >\r\n                                    <input \r\n                                        className={classes.input}\r\n                                        type='file'\r\n                                        accept='image/jpg, image/jpeg, image/png' \r\n                                        id='photoPost'\r\n                                        name='photoPost' \r\n                                        onChange={handlePhotoChange} \r\n                                        required \r\n                                    />\r\n                                    <Button \r\n                                        variant='contained' \r\n                                        color='primary' \r\n                                        component='span' \r\n                                        aria-label='Photo picker button'\r\n                                    >\r\n                                        <Icon \r\n                                            path={mdiCamera} \r\n                                            size={1} \r\n                                            title='Photo upload icon' \r\n                                            aria-label='Photo upload icon' \r\n                                        />\r\n                                    </Button>\r\n                                </label>\r\n                                <br/>\r\n                                <TextField \r\n                                    label='Caption'\r\n                                    placeholder='Enter a caption for your photo' \r\n                                    variant='outlined' \r\n                                    color='primary' \r\n                                    value={photoCaption} \r\n                                    onChange={e => setPhotoCaption(e.target.value)} \r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    rows={4}\r\n                                    multiline\r\n                                    required\r\n                                    style={{\r\n                                        marginTop: 40,\r\n                                    }}\r\n                                    fullWidth\r\n                                />\r\n                                <br/>\r\n                                <Button \r\n                                    style={{\r\n                                        marginTop: 30,\r\n                                    }}\r\n                                    color='primary' \r\n                                    variant='outlined' \r\n                                    onClick={handlePhotoUpload}\r\n                                    disabled={photoUploading}\r\n                                >\r\n                                    {photoUploading ? <CircularProgress color='primary' /> : 'Upload Photo'}\r\n                                </Button>\r\n                            </TabPanel>\r\n                            <TabPanel \r\n                                index={2} \r\n                                value={curTab} \r\n                            >\r\n                                <Typography \r\n                                    variant='h6' \r\n                                    component='h6' \r\n                                >\r\n                                    Post a video\r\n                                </Typography>\r\n                                <label \r\n                                    html-for='videoPost' \r\n                                >\r\n                                    <input \r\n                                        className={classes.input}\r\n                                        type='file'\r\n                                        accept='video/mp4, video/mov'\r\n                                        id='videoPost'\r\n                                        name='videoPost' \r\n                                        onChange={handleVideoChange} \r\n                                        required \r\n                                    />\r\n                                    <Button \r\n                                        variant='contained' \r\n                                        color='primary' \r\n                                        component='span' \r\n                                        aria-label='Video picker button'\r\n                                    >\r\n                                        <Icon \r\n                                            path={mdiVideo} \r\n                                            size={1} \r\n                                            title='Video upload icon' \r\n                                            aria-label='Video upload icon' \r\n                                        />\r\n                                    </Button>\r\n                                </label>\r\n                                <br/>\r\n                                <TextField \r\n                                    label='Caption'\r\n                                    placeholder='Enter a caption for your video' \r\n                                    variant='outlined' \r\n                                    color='primary' \r\n                                    value={videoCaption} \r\n                                    onChange={e => setVideoCaption(e.target.value)} \r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    rows={4}\r\n                                    multiline\r\n                                    required\r\n                                    style={{\r\n                                        marginTop: 40,\r\n                                    }}\r\n                                    fullWidth\r\n                                />\r\n                                <br/>\r\n                                <Button \r\n                                    style={{\r\n                                        marginTop: 30,\r\n                                    }}\r\n                                    color='primary' \r\n                                    variant='outlined' \r\n                                    onClick={handleVideoUpload}\r\n                                    disabled={videoUploading}\r\n                                >\r\n                                    {videoUploading ? <CircularProgress color='primary' /> : 'Upload Video'}\r\n                                </Button>\r\n                            </TabPanel>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </Grid>\r\n                {/* Below will begin the tab panels for the posts, about, and events tabs */}\r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                >\r\n                    <Paper \r\n                        className={classes.paper}\r\n                    >\r\n                        <Tabs \r\n                            value={curTab2} \r\n                            onChange={(e, newVal) => setTab2(newVal)}\r\n                            centered\r\n                        >\r\n                            <Tab \r\n                                label='Posts' \r\n                                {...a11yProps(0)} \r\n                            />\r\n                            <Tab \r\n                                label='About' \r\n                                {...a11yProps(1)} \r\n                            />\r\n                            <Tab \r\n                                label='Events' \r\n                                {...a11yProps(2)} \r\n                            />\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <Grid \r\n                        item \r\n                        xs={12}\r\n                    />\r\n                    <TabPanel \r\n                        value={0} \r\n                        index={curTab2} \r\n                    >\r\n                        {props.posts.length < 1 && \r\n                            <Typography \r\n                                variant='h6' \r\n                                component='h6' \r\n                                align='center' \r\n                            >\r\n                                No posts \r\n                            </Typography>\r\n                        }\r\n                        {props.posts.length > 0 && \r\n                            <div>\r\n                                {props.posts.map((post, index) => (\r\n                                    <div \r\n                                        style={{\r\n                                            textAlign: 'left',\r\n                                        }}\r\n                                        key={index}\r\n                                    >\r\n                                        <UserPostsCard \r\n                                            user={props.user} \r\n                                            post={post}\r\n                                            id={post.uniquePostId}\r\n                                        />\r\n                                        {index < props.posts.length - 1 &&\r\n                                            <div \r\n                                                style={{\r\n                                                    marginBottom: 20,\r\n                                                }}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </TabPanel>\r\n                    {/*End of the TabPanel for posts. Begin the TabPanel for the \"about\" section of the page */}\r\n                    <TabPanel \r\n                        value={1} \r\n                        index={curTab2} \r\n                    >\r\n                        <Grid \r\n                            item \r\n                            xs={12} \r\n                        >\r\n                            <Typography \r\n                                variant='h4' \r\n                                component='h4' \r\n                                align='center' \r\n                            >\r\n                                About {props.user.firstName}\r\n                            </Typography>\r\n                            <List \r\n                                style={{\r\n                                    margin: 'auto',\r\n                                    maxWidth: 450,\r\n                                    marginTop: 20,\r\n                                }}\r\n                            >\r\n                                <ListItem \r\n                                    alignItems='center' \r\n                                >\r\n                                    <ListItemText \r\n                                        primary={\r\n                                            <Typography \r\n                                                variant='h6' \r\n                                                component='h6' \r\n                                                align='center'\r\n                                            >\r\n                                                Name \r\n                                            </Typography>\r\n                                        }\r\n                                        secondary={\r\n                                            <Typography \r\n                                                variant='body1' \r\n                                                component='p' \r\n                                                align='center'\r\n                                            >\r\n                                                {props.user.firstName} {props.user.lastName}\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem \r\n                                    alignItems='center' \r\n                                >\r\n                                    <ListItemText \r\n                                        primary={\r\n                                            <Typography \r\n                                                variant='h6' \r\n                                                component='h6' \r\n                                                align='center' \r\n                                            >\r\n                                                Email\r\n                                            </Typography>\r\n                                        }\r\n                                        secondary={\r\n                                            <div\r\n                                                style={{\r\n                                                    textAlign: 'center'\r\n                                                }}\r\n                                            >\r\n                                                <Link \r\n                                                    component='a'\r\n                                                    color='primary' \r\n                                                    href={`mailto:${props.user.email}`}\r\n                                                    style={{\r\n                                                        textAlign: 'center',\r\n                                                    }}\r\n                                                >\r\n                                                    {props.user.email}\r\n                                                </Link>\r\n                                            </div>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem \r\n                                    alignItems='center' \r\n                                >\r\n                                    <ListItemText \r\n                                        primary={\r\n                                            <Typography \r\n                                                variant='h6' \r\n                                                component='h6' \r\n                                                align='center' \r\n                                            >\r\n                                                Birthdate \r\n                                            </Typography>\r\n                                        }\r\n                                        secondary={\r\n                                            <Typography \r\n                                                variant='body1' \r\n                                                component='p' \r\n                                                align='center' \r\n                                            >\r\n                                                {props.user.birthdate}\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem \r\n                                    alignItems='center' \r\n                                >\r\n                                    <ListItemText \r\n                                        primary={\r\n                                            <Typography \r\n                                                variant='h6' \r\n                                                component='h6' \r\n                                                align='center' \r\n                                            >\r\n                                                Profile created on\r\n                                            </Typography>\r\n                                        }\r\n                                        secondary={\r\n                                            <Typography \r\n                                                variant='body1' \r\n                                                component='p' \r\n                                                align='center'\r\n                                            >\r\n                                                {new Date(props.user.dateCreated).getMonth() + 1}/{new Date(props.user.dateCreated).getDate()}/{new Date(props.user.dateCreated).getFullYear()}\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem \r\n                                    alignItems='center' \r\n                                >\r\n                                    <ListItemText \r\n                                        primary={\r\n                                            <Typography \r\n                                                variant='h6' \r\n                                                component='h6' \r\n                                                align='center' \r\n                                            >\r\n                                                Location\r\n                                            </Typography>\r\n                                        }\r\n                                        secondary={\r\n                                            <Typography \r\n                                                variant='body1' \r\n                                                component='p' \r\n                                                align='center' \r\n                                            >\r\n                                                {props.user.city}, {props.user.userState}\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <div>\r\n                                    {props.user.college !== 'None' &&\r\n                                        <ListItem \r\n                                            alignItems='center' \r\n                                        >\r\n                                            <ListItemText \r\n                                                primary={\r\n                                                    <Typography \r\n                                                        variant='h6' \r\n                                                        component='h6' \r\n                                                        align='center' \r\n                                                    >\r\n                                                        College \r\n                                                    </Typography>\r\n                                                }\r\n                                                secondary={\r\n                                                    <Typography \r\n                                                        variant='body1' \r\n                                                        component='p' \r\n                                                        align='center' \r\n                                                    >\r\n                                                        {props.user.college}\r\n                                                    </Typography>\r\n                                                }\r\n                                            />\r\n                                        </ListItem>\r\n                                    }\r\n                                </div>\r\n                                <Divider />\r\n                                <Typography \r\n                                    variant='h6' \r\n                                    component='h6' \r\n                                    align='center' \r\n                                >\r\n                                    Interests\r\n                                </Typography>\r\n                                <List>\r\n                                    {props.user.interests.map((interest, index) => (\r\n                                        <ListItem \r\n                                            alignItems='center' \r\n                                            key={index} \r\n                                        >\r\n                                            <ListItemText \r\n                                                secondary={\r\n                                                    <Typography \r\n                                                        variant='body1' \r\n                                                        component='p'\r\n                                                        align='center' \r\n                                                    >\r\n                                                        {interest}\r\n                                                    </Typography>\r\n                                                }\r\n                                            />\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                                <Divider />\r\n                                {communities.length > 0 &&\r\n                                    <div>\r\n                                        <Typography \r\n                                            variant='h6' \r\n                                            component='h6' \r\n                                        >\r\n                                            Communities\r\n                                        </Typography>\r\n                                        {communities.map((community, index) => (\r\n                                            <Paper\r\n                                                elevation={3}\r\n                                                key={index} \r\n                                                style={{\r\n                                                    marginBottom: index < communities.length - 1 ? 20 : 0,\r\n                                                    cursor: 'pointer',\r\n                                                }}\r\n                                                onClick={e => history.push(`/community/${community.name}`)}\r\n                                            >\r\n                                                <ListItem \r\n                                                    alignItems='flex-start' \r\n                                                >\r\n                                                    <ListItemAvatar>\r\n                                                        <Avatar \r\n                                                            src={`http://192.168.0.9:3001/api/get-photo/${community.avatar}`}\r\n                                                            alt={`${community.name} avatar`}\r\n                                                            title={`${community.name} avatar`}\r\n                                                        />\r\n                                                    </ListItemAvatar>\r\n                                                    <ListItemText \r\n                                                        primary={\r\n                                                            <Grid \r\n                                                                item\r\n                                                                xs={12}\r\n                                                                zeroMinWidth \r\n                                                            >\r\n                                                                <Typography \r\n                                                                    variant='h6' \r\n                                                                    component='h6' \r\n                                                                    noWrap \r\n                                                                >\r\n                                                                    {community.name}\r\n                                                                </Typography>\r\n                                                            </Grid>\r\n                                                        }\r\n                                                        secondary={\r\n                                                            <Typography \r\n                                                                variant='body1' \r\n                                                                component='p' \r\n                                                            >\r\n                                                                {community.title}\r\n                                                            </Typography>\r\n                                                        }\r\n                                                    />\r\n                                                </ListItem>\r\n                                            </Paper>\r\n                                        ))}\r\n                                    </div>\r\n                                }\r\n                                <Divider />\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: 10,\r\n                                    }}\r\n                                >\r\n                                    {props.user.twitterHandle &&\r\n                                        <div>\r\n                                            <ListItem \r\n                                                alignItems='start' \r\n                                            >\r\n                                                <ListItemIcon>\r\n                                                    <Icon \r\n                                                        path={mdiTwitter}\r\n                                                        size={1} \r\n                                                        title={'Twitter handle'}\r\n                                                        aria-label='Twitter handle icon' \r\n                                                    />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Link \r\n                                                            component='a' \r\n                                                            href={`https://www.twitter.com/${props.user.twitterHandle}`}\r\n                                                            color='primary' \r\n                                                            rel='external' \r\n                                                            title='Twitter handle'\r\n                                                        >\r\n                                                            {props.user.twitterHandle}\r\n                                                        </Link>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            <Divider />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                {props.user.instaHandle &&\r\n                                    <div>\r\n                                        <ListItem \r\n                                            alignItems='start' \r\n                                        >\r\n                                            <ListItemIcon>\r\n                                                <Icon \r\n                                                    path={mdiInstagram} \r\n                                                    size={1} \r\n                                                    title='Instagram handle' \r\n                                                    aria-label='Instagram handle icon' \r\n                                                />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText \r\n                                                primary={\r\n                                                    <Link \r\n                                                        component='a' \r\n                                                        color='primary' \r\n                                                        href={`https://www.instagram.com/${props.user.instaHandle}`}\r\n                                                        rel='external'\r\n                                                        aria-label='Instagram profile link' \r\n                                                    >\r\n                                                        {props.user.instaHandle}\r\n                                                    </Link>\r\n                                                }\r\n                                            />\r\n                                        </ListItem>\r\n                                        <Divider />\r\n                                    </div>\r\n                                }\r\n                                {props.user.youtubeChannel &&\r\n                                    <div>\r\n                                        <ListItem \r\n                                            alignItems='center' \r\n                                        >\r\n                                            <ListItemIcon>\r\n                                                <Icon \r\n                                                    path={mdiYoutube} \r\n                                                    size={1}\r\n                                                    title='Youtube channel' \r\n                                                    aria-label='Youtube channel icon'\r\n                                                />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText \r\n                                                primary={\r\n                                                    <Link \r\n                                                        component='a' \r\n                                                        color='primary' \r\n                                                        href={props.user.youtubeChannel}\r\n                                                        rel='external'\r\n                                                        aria-label='Youtube channel link' \r\n                                                    >\r\n                                                        Youtube link\r\n                                                    </Link>\r\n                                                }\r\n                                            />\r\n                                        </ListItem>\r\n                                        <Divider />\r\n                                    </div>\r\n                                }\r\n                            </List>\r\n                        </Grid>\r\n                    </TabPanel>\r\n                    <TabPanel \r\n                        value={2} \r\n                        index={curTab2} \r\n                    >\r\n                        Events\r\n                    </TabPanel>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Backdrop\r\n                open={true} \r\n            >\r\n                <CircularProgress \r\n                    color='primary' \r\n                />\r\n            </Backdrop>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n        posts: state.userPostsReducer.posts,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfilePage);"]},"metadata":{},"sourceType":"module"}