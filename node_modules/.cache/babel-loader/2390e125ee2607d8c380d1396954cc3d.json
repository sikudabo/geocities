{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport Box from '@material-ui/core/Box';\nimport Icon from '@mdi/react';\nimport { mdiCheckBold, mdiPencil, mdiClose, mdiCamera } from '@mdi/js';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UserPostsCard from './UserPostsCard';\nimport Resizer from 'react-image-file-resizer';\n\nfunction TabPanel(props) {\n  //This component will serve as the panel for each individual tab\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    hidden: value !== index,\n    role: \"tabpanel\",\n    id: `tabpanel-${index}`,\n    \"aria-label\": `tab-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    style: {\n      marginTop: 100\n    },\n    children: value === index && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.any.isRequired,\n  index: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`\n  };\n}\n\nfunction ProfilePage(props) {\n  _s();\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: 20\n    },\n    profileAvatar: {\n      height: 128,\n      width: 128,\n      margin: 'auto'\n    },\n    profileAvatarLg: {\n      height: 168,\n      width: 168,\n      margin: 'auto'\n    },\n    usernameDisplay: {\n      marginTop: 40,\n      margin: 'auto'\n    },\n    statsInfo: {\n      marginTop: 40,\n      textAlign: 'center'\n    },\n    paper: {\n      backgroundColor: props.user.profileTheme,\n      color: 'rgb(255, 255, 255)',\n      marginTop: 40\n    },\n    input: {\n      display: 'none'\n    }\n  }));\n  const history = useHistory(); //The history API to access the brower history. \n\n  const classes = useStyles(); //Custom styling.\n\n  const [openDialog, setOpenDialog] = useState(false); //Variable and setter to open and close dialog.\n\n  const [curTab, setTab] = useState(0); //Variable and setter to control proper tab.\n\n  const [curTab2, setTab2] = useState(0);\n  const [textPost, setTextPost] = useState(''); //Variable and setter for text post control\n\n  const [posting, setPosting] = useState(false); //Hides dialog AppBar and tabs when a post is posting to the server\n\n  const [posts, setPosts] = useState([]); //Personal profile posts for the user. \n\n  const [uploadPhoto, setUploadPhoto] = useState(null); // Variable and setter for a photo to be uploaded\n\n  const [photoUploading, setPhotoUploading] = useState(null); //Variable and setter to disable button while photo is uploading.\n\n  const [photoCaption, setPhotoCaption] = useState(''); //Variable and setter for a caption associated with a photo upload.\n\n  useEffect(() => {\n    //First, if the user doesn't exist in state, re-route to the login page.\n    if (!props.user) {\n      history.push('/');\n    } else if (props.user) {\n      //Else, we make an axios call to request the user (an updated version of the user)\n      //props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/grab/user/${props.user.uniqueUserId}`\n      }).then(response => {\n        if (response.data.user) {\n          props.dispatch({\n            type: 'user/updateUser',\n            payload: response.data.user\n          });\n          props.dispatch({\n            type: 'ThemeChange',\n            payload: response.data.user.profileTheme\n          });\n          props.dispatch({\n            type: 'userPosts/updatePosts',\n            payload: response.data.posts\n          });\n        } else if (response.data === 'user not found') {\n          swal('Uh Oh!', 'We could not find your profile!', 'error');\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error retreiving your profile. Please try again!', 'error');\n        history.push('/');\n      });\n    }\n  }, []);\n\n  function handleTextPost() {\n    //Function that handles submitting a text post to the server. \n    setPosting(true);\n\n    if (!textPost) {\n      swal('Uh Oh!', 'You must enter some text', 'error');\n      setPosting(false);\n    } else {\n      let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n      let date = new Date();\n      let year = date.getFullYear();\n      let month = months[date.getMonth()];\n      let day = date.getDate();\n      let data = JSON.stringify({\n        uniquePostId: Date.now() + props.user.uniqueUserId + props.user.username,\n        uniqueUserId: props.user.uniqueUserId,\n        username: props.user.username,\n        type: 'text',\n        context: 'personal',\n        text: textPost,\n        dateString: `${month} ${day}, ${year}`,\n        link: '',\n        title: '',\n        community: '',\n        caption: '',\n        src: '',\n        privacy: props.user.profilePrivacy\n      });\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.9:3001/api/upload/text/link/post',\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.data.posts) {\n          swal('Great!', 'Post was successfully uploaded!', 'success');\n          setPosting(false);\n          setTextPost('');\n          setOpenDialog(false);\n          console.log(response.data.posts); //setPosts(posts => [response.data.posts[0], ...posts]);\n          //Maybe altering the code to just push a new value to the array will work?\n\n          props.dispatch({\n            type: 'userPosts/updatePosts',\n            payload: response.data.posts\n          });\n        } else {\n          swal('Uh Oh!', 'There was an error uploading that post! Please try again.', 'error');\n          setPosting(false);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error uploading that post! Please try again.', 'error');\n        setPosting(false);\n      });\n    }\n  }\n\n  function resizerFunction(file) {\n    //This is a wrapper for the file resizer \n    return new Promise(resolve => {\n      Resizer.imageFileResizer(file, 600, 600, 'JPEG', 100, 0, uri => {\n        resolve(uri);\n      }, 'blob');\n    });\n  }\n\n  async function handlePhotoChange(e) {\n    let file = e.target.files[0];\n    let resizedPhoto = await resizerFunction(file);\n    setUploadPhoto(resizedPhoto);\n  }\n\n  function handlePhotoUpload() {\n    //Function that will handle sending an uploaded photo to the server after resizing it.\n    setPhotoUploading(true);\n\n    if (!uploadPhoto) {\n      swal('Uh Oh!', 'You must select a photo to upload!', 'error');\n      setPhotoUploading(false);\n    } else {\n      let fd = new FormData();\n      fd.append('photo', uploadPhoto, 'photo.jpg');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.root,\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          mdUp: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.profileAvatar,\n            src: `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`,\n            title: `${props.user.username}`,\n            alt: `${props.user.username}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.profileAvatarLg,\n            src: `http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`,\n            title: `${props.user.username}`,\n            alt: `${props.user.username}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h4\",\n        align: \"center\",\n        className: classes.usernameDisplay,\n        children: props.user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this), props.user.isVerified && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiCheckBold,\n          size: 1,\n          title: \"Verified\",\n          style: {\n            color: 'rgb(0, 128, 0)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }, this), \" Verified\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      spacing: 1,\n      className: classes.statsInfo,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          children: \"Followers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: props.user.followers.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          children: \"Following\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: props.user.following.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          children: \"Karma\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          children: props.user.karma\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        style: {\n          fontWeight: 'bold',\n          marginTop: 30\n        },\n        children: [props.user.firstName, \" \", props.user.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: 40,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        component: \"small\",\n        justify: \"start\",\n        align: \"left\",\n        children: props.user.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        textAlign: 'center',\n        marginTop: 40\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        size: \"large\",\n        onClick: () => setOpenDialog(true),\n        startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiPencil,\n          size: 1,\n          title: \"Post Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 25\n        }, this),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDialog,\n        fullScreen: true,\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            color: \"primary\",\n            hidden: posting,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              path: mdiClose,\n              size: 1,\n              title: \"Dialog close\",\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => setOpenDialog(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n              value: curTab,\n              onChange: (e, newVal) => setTab(newVal),\n              centered: true,\n              children: [/*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(0),\n                label: \"Text\",\n                disabled: posting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(1),\n                label: \"Photo\",\n                disabled: posting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tab, { ...a11yProps(2),\n                label: \"Video\",\n                disabled: posting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            index: 0,\n            value: curTab,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Text Post\",\n              placeholder: \"Post a status!\",\n              color: \"primary\",\n              variant: \"outlined\",\n              InputLabelProps: {\n                shrink: true\n              },\n              \"aria-label\": \"Text Post Field\",\n              rows: 4,\n              onChange: e => setTextPost(e.target.value),\n              value: textPost,\n              helperText: \"Enter a status update!\",\n              multiline: true,\n              fullWidth: true,\n              disabled: posting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginTop: 20\n              },\n              color: \"primary\",\n              variant: \"outlined\",\n              disabled: posting,\n              onClick: handleTextPost,\n              children: posting ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 44\n              }, this) : 'post'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            index: 1,\n            value: curTab,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              children: \"Post a photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              \"html-for\": \"photoPost\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: classes.input,\n                type: \"file\",\n                accept: \"image/jpg, image/jpeg, image/png\",\n                id: \"photoPost\",\n                name: \"photoPost\",\n                onChange: handlePhotoChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                component: \"span\",\n                \"aria-label\": \"Photo picker button\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiCamera,\n                  size: 1,\n                  title: \"Photo upload icon\",\n                  \"aria-label\": \"Photo upload icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Caption\",\n              placeholder: \"Enter a caption for your photo\",\n              variant: \"outlined\",\n              color: \"primary\",\n              value: photoCaption,\n              onChange: e => setPhotoCaption(e.target.value),\n              InputLabelProps: {\n                shrink: true\n              },\n              rows: 4,\n              multiline: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginTop: 30\n              },\n              color: \"primary\",\n              variant: \"outlined\",\n              onClick: handlePhotoUpload,\n              disabled: photoUploading,\n              children: photoUploading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 51\n              }, this) : 'Upload Photo'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            index: 2,\n            value: curTab,\n            children: \"Videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: curTab2,\n          onChange: (e, newVal) => setTab2(newVal),\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Posts\",\n            ...a11yProps(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"About\",\n            ...a11yProps(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Events\",\n            ...a11yProps(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: 0,\n        index: curTab2,\n        children: [props.posts.length < 1 && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          align: \"center\",\n          children: \"No posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 25\n        }, this), props.posts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'left'\n            },\n            children: [/*#__PURE__*/_jsxDEV(UserPostsCard, {\n              user: props.user,\n              post: post,\n              id: post.uniquePostId\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 37\n            }, this), index < props.posts.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 20\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: 1,\n        index: curTab2,\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: 2,\n        index: curTab2,\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfilePage, \"1TuMFN10RAStKjQbuOGJM+i3Uq0=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c2 = ProfilePage;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    primary: state.userThemeReducer.primary,\n    posts: state.userPostsReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(ProfilePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ProfilePage\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/ProfilePage.js"],"names":["React","useState","useEffect","useRef","Grid","Avatar","Typography","connect","axios","useHistory","swal","makeStyles","Hidden","Box","Icon","mdiCheckBold","mdiPencil","mdiClose","mdiCamera","Button","Dialog","DialogContent","AppBar","Paper","Tab","Tabs","PropTypes","TextField","Backdrop","CircularProgress","UserPostsCard","Resizer","TabPanel","props","children","value","index","other","marginTop","textAlign","propTypes","node","any","isRequired","a11yProps","id","ProfilePage","useStyles","theme","root","profileAvatar","height","width","margin","profileAvatarLg","usernameDisplay","statsInfo","paper","backgroundColor","user","profileTheme","color","input","display","history","classes","openDialog","setOpenDialog","curTab","setTab","curTab2","setTab2","textPost","setTextPost","posting","setPosting","posts","setPosts","uploadPhoto","setUploadPhoto","photoUploading","setPhotoUploading","photoCaption","setPhotoCaption","push","method","url","uniqueUserId","then","response","data","dispatch","type","payload","catch","err","console","log","message","handleTextPost","months","date","Date","year","getFullYear","month","getMonth","day","getDate","JSON","stringify","uniquePostId","now","username","context","text","dateString","link","title","community","caption","src","privacy","profilePrivacy","headers","resizerFunction","file","Promise","resolve","imageFileResizer","uri","handlePhotoChange","e","target","files","resizedPhoto","handlePhotoUpload","fd","FormData","append","avatar","isVerified","followers","length","following","karma","fontWeight","firstName","lastName","bio","cursor","newVal","shrink","map","post","marginBottom","mapStateToProps","state","userReducer","primary","userThemeReducer","userPostsReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from '@material-ui/core/Box';\r\nimport Icon from '@mdi/react';\r\nimport { mdiCheckBold, mdiPencil, mdiClose, mdiCamera } from '@mdi/js';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport UserPostsCard from './UserPostsCard';\r\nimport Resizer from 'react-image-file-resizer';\r\n\r\nfunction TabPanel(props) {\r\n    //This component will serve as the panel for each individual tab\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div \r\n            hidden={value !== index}\r\n            role='tabpanel' \r\n            id={`tabpanel-${index}`}\r\n            aria-label={`tab-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n            style={{\r\n                marginTop: 100,\r\n            }}\r\n        >\r\n            {value === index && \r\n                <Grid \r\n                    item \r\n                    xs={12} \r\n                    style={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    {children}\r\n                </Grid>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    value: PropTypes.any.isRequired,\r\n    index: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `tab-${index}`,\r\n        'aria-controls': `tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\n\r\nfunction ProfilePage(props) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            marginTop: 20,\r\n        },\r\n        profileAvatar: {\r\n            height: 128,\r\n            width: 128,\r\n            margin: 'auto',\r\n        },\r\n        profileAvatarLg: {\r\n            height: 168,\r\n            width: 168,\r\n            margin: 'auto',\r\n        },\r\n        usernameDisplay: {\r\n            marginTop: 40,\r\n            margin: 'auto',\r\n        },\r\n        statsInfo: {\r\n            marginTop: 40,\r\n            textAlign: 'center',\r\n        },\r\n        paper: {\r\n            backgroundColor: props.user.profileTheme,\r\n            color: 'rgb(255, 255, 255)',\r\n            marginTop: 40,\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n    }));\r\n    const history = useHistory(); //The history API to access the brower history. \r\n    const classes = useStyles(); //Custom styling.\r\n    const [openDialog, setOpenDialog] = useState(false); //Variable and setter to open and close dialog.\r\n    const [curTab, setTab] = useState(0); //Variable and setter to control proper tab.\r\n    const [curTab2, setTab2] = useState(0);\r\n    const [textPost, setTextPost] = useState(''); //Variable and setter for text post control\r\n    const [posting, setPosting] = useState(false); //Hides dialog AppBar and tabs when a post is posting to the server\r\n    const [posts, setPosts] = useState([]); //Personal profile posts for the user. \r\n    const [uploadPhoto, setUploadPhoto] = useState(null); // Variable and setter for a photo to be uploaded\r\n    const [photoUploading, setPhotoUploading] = useState(null); //Variable and setter to disable button while photo is uploading.\r\n    const [photoCaption, setPhotoCaption] = useState(''); //Variable and setter for a caption associated with a photo upload.\r\n    \r\n    useEffect(() => {\r\n        //First, if the user doesn't exist in state, re-route to the login page.\r\n        if(!props.user) {\r\n            history.push('/');\r\n        }\r\n        else if(props.user) {\r\n            //Else, we make an axios call to request the user (an updated version of the user)\r\n            //props.dispatch({type: 'ThemeChange', payload: props.user.profileTheme});\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/grab/user/${props.user.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.user) {\r\n                    props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.user.profileTheme});\r\n                    props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                }\r\n                else if(response.data === 'user not found') {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find your profile!',\r\n                        'error',\r\n                    );\r\n                    history.push('/');\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error retreiving your profile. Please try again!',\r\n                    'error',\r\n                );\r\n                history.push('/');\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function handleTextPost() {\r\n        //Function that handles submitting a text post to the server. \r\n        setPosting(true);\r\n        if(!textPost) {\r\n            swal(\r\n                'Uh Oh!',\r\n                'You must enter some text',\r\n                'error',\r\n            );\r\n\r\n            setPosting(false);\r\n        }\r\n        else {\r\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n            let date = new Date();\r\n            let year = date.getFullYear();\r\n            let month = months[date.getMonth()];\r\n            let day = date.getDate();\r\n\r\n            let data = JSON.stringify({\r\n                uniquePostId: Date.now() + props.user.uniqueUserId + props.user.username,\r\n                uniqueUserId: props.user.uniqueUserId,\r\n                username: props.user.username,\r\n                type: 'text', \r\n                context: 'personal',\r\n                text: textPost,\r\n                dateString: `${month} ${day}, ${year}`,\r\n                link: '',\r\n                title: '',\r\n                community: '',\r\n                caption: '',\r\n                src: '',\r\n                privacy: props.user.profilePrivacy,\r\n            });\r\n\r\n            return axios({\r\n                method: 'POST',\r\n                url: 'http://192.168.0.9:3001/api/upload/text/link/post',\r\n                data: data,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then(response => {\r\n                if(response.data.posts) {\r\n                    swal(\r\n                        'Great!',\r\n                        'Post was successfully uploaded!',\r\n                        'success',\r\n                    );\r\n                    setPosting(false);\r\n                    setTextPost('');\r\n                    setOpenDialog(false);\r\n                    console.log(response.data.posts);\r\n                    //setPosts(posts => [response.data.posts[0], ...posts]);\r\n                    //Maybe altering the code to just push a new value to the array will work?\r\n                    props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'There was an error uploading that post! Please try again.',\r\n                        'error',\r\n                    )\r\n                    setPosting(false);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error uploading that post! Please try again.',\r\n                    'error',\r\n                );\r\n                setPosting(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    function resizerFunction(file) {\r\n        //This is a wrapper for the file resizer \r\n        return new Promise(resolve => {\r\n            Resizer.imageFileResizer(\r\n                file,\r\n                600,\r\n                600,\r\n                'JPEG',\r\n                100,\r\n                0,\r\n                uri => {\r\n                    resolve(uri);\r\n                },\r\n                'blob',\r\n            );\r\n        });\r\n    }\r\n\r\n    async function handlePhotoChange(e) {\r\n        let file = e.target.files[0];\r\n        let resizedPhoto = await resizerFunction(file);\r\n        setUploadPhoto(resizedPhoto);\r\n    }\r\n\r\n    function handlePhotoUpload() {\r\n        //Function that will handle sending an uploaded photo to the server after resizing it.\r\n        setPhotoUploading(true);\r\n\r\n        if(!uploadPhoto) {\r\n            swal(\r\n                'Uh Oh!',\r\n                'You must select a photo to upload!',\r\n                'error',\r\n            );\r\n            setPhotoUploading(false);\r\n        }\r\n        else {\r\n            let fd = new FormData();\r\n            fd.append('photo', uploadPhoto, 'photo.jpg');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid \r\n            className={classes.root}\r\n            container \r\n        >\r\n            <Grid \r\n                item \r\n                container \r\n                xs={12}\r\n            >\r\n                <Grid \r\n                    item \r\n                    xs={12}\r\n                >\r\n                    {/* Below is the avatar for xs and sm screens at 128x128 pixels */}\r\n                    <Hidden \r\n                        mdUp \r\n                    >\r\n                        <Avatar \r\n                            className={classes.profileAvatar} \r\n                            src={`http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`} \r\n                            title={`${props.user.username}`} \r\n                            alt={`${props.user.username}`} \r\n                        />\r\n                    </Hidden>\r\n                    {/* Below will be the avatar for medium screen and up devices */ }\r\n                    <Hidden \r\n                        smDown \r\n                    >\r\n                        <Avatar \r\n                            className={classes.profileAvatarLg}\r\n                            src={`http://192.168.0.9:3001/api/get-photo/${props.user.avatar}`} \r\n                            title={`${props.user.username}`} \r\n                            alt={`${props.user.username}`} \r\n                        />\r\n                    </Hidden>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <Typography \r\n                    variant='h4' \r\n                    component='h4' \r\n                    align='center'\r\n                    className={classes.usernameDisplay} \r\n                >\r\n                    {props.user.username}\r\n                </Typography>\r\n                {props.user.isVerified &&\r\n                    <Typography \r\n                        variant='body1'\r\n                        component='p' \r\n                    >\r\n                        <Icon \r\n                            path={mdiCheckBold} \r\n                            size={1} \r\n                            title='Verified' \r\n                            style={{\r\n                                color: 'rgb(0, 128, 0)'\r\n                            }}\r\n                        /> Verified \r\n                    </Typography>\r\n                }\r\n            </Grid>\r\n            {/* Below will be the Grid to display Followers, Following, and Karma */}\r\n            <Grid \r\n                item \r\n                container \r\n                xs={12} \r\n                spacing={1}\r\n                className={classes.statsInfo}\r\n            >\r\n                <Grid \r\n                    item \r\n                    xs={4} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        Followers \r\n                    </Typography>\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                    >\r\n                        {props.user.followers.length}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={4} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        Following \r\n                    </Typography>\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                    >\r\n                        {props.user.following.length}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid \r\n                    item \r\n                    xs={4} \r\n                >\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        Karma \r\n                    </Typography>\r\n                    <Typography \r\n                        variant='body1' \r\n                        component='p' \r\n                    >\r\n                        {props.user.karma}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            {/* End of the Grid for Followers, Following, and Karma */}\r\n            {/* Below is the Grid to display the users' first and last name */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n                style={{\r\n                    textAlign: 'center',\r\n                }}\r\n            >\r\n                <Typography \r\n                    variant='body1' \r\n                    component='p' \r\n                    style={{\r\n                        fontWeight: 'bold',\r\n                        marginTop: 30,\r\n                    }}\r\n                >\r\n                    {props.user.firstName} {props.user.lastName}\r\n                </Typography>\r\n            </Grid>\r\n            {/* End of the Grid to display the users first and last name */}\r\n            {/* Below is the Grid that stores the users BIO */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n                style={{\r\n                    marginTop: 40,\r\n                    textAlign: 'center',\r\n                }}\r\n            >\r\n                <Typography \r\n                    variant='body2' \r\n                    component='small' \r\n                    justify='start'\r\n                    align='left'\r\n                >\r\n                    {props.user.bio}\r\n                </Typography>\r\n            </Grid>\r\n            {/* This is the end of the Grid for the bio.*/ }\r\n            {/* Below is the grid to display the Button that opens the Dialog for the form for posts */}\r\n            <Grid \r\n                item \r\n                xs={12}\r\n                style={{\r\n                    textAlign: 'center',\r\n                    marginTop: 40,\r\n                }}\r\n            >\r\n                <Button \r\n                    color='primary' \r\n                    variant='outlined'  \r\n                    size='large'\r\n                    onClick={() => setOpenDialog(true)}\r\n                    startIcon={\r\n                        <Icon \r\n                            path={mdiPencil} \r\n                            size={1} \r\n                            title='Post Icon' \r\n                        />\r\n                    }\r\n                >\r\n                    Post \r\n                </Button>\r\n            </Grid>\r\n            {/* The Grid below will store the Dialog and its' content */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <Dialog \r\n                    open={openDialog} \r\n                    fullScreen\r\n                >\r\n                    <DialogContent>\r\n                        <AppBar \r\n                            color='primary'\r\n                            hidden={posting}\r\n                        >\r\n                            <Icon \r\n                                path={mdiClose} \r\n                                size={1} \r\n                                title='Dialog close' \r\n                                style={{\r\n                                    cursor: 'pointer'\r\n                                }}\r\n                                onClick={() => setOpenDialog(false)}\r\n                            />\r\n                            <Tabs \r\n                                value={curTab}\r\n                                onChange={(e, newVal) => setTab(newVal)} \r\n                                centered\r\n                            >\r\n                                <Tab \r\n                                    {...a11yProps(0)} \r\n                                    label='Text' \r\n                                    disabled={posting}\r\n                                />\r\n                                <Tab \r\n                                    {...a11yProps(1)} \r\n                                    label='Photo' \r\n                                    disabled={posting}\r\n                                />\r\n                                <Tab \r\n                                    {...a11yProps(2)}\r\n                                    label='Video' \r\n                                    disabled={posting}\r\n                                />\r\n                            </Tabs>\r\n                        </AppBar>\r\n                        <TabPanel \r\n                            index={0}\r\n                            value={curTab}\r\n                        >\r\n                            <TextField \r\n                                label='Text Post' \r\n                                placeholder='Post a status!' \r\n                                color='primary'\r\n                                variant='outlined' \r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                aria-label='Text Post Field' \r\n                                rows={4} \r\n                                onChange={e => setTextPost(e.target.value)}\r\n                                value={textPost} \r\n                                helperText='Enter a status update!' \r\n                                multiline\r\n                                fullWidth \r\n                                disabled={posting}\r\n                            />\r\n                            <Button \r\n                                style={{\r\n                                    marginTop: 20,\r\n                                }}\r\n                                color='primary' \r\n                                variant='outlined' \r\n                                disabled={posting}\r\n                                onClick={handleTextPost}\r\n                            >\r\n                                {posting ? <CircularProgress /> : 'post'}\r\n                            </Button>\r\n                        </TabPanel>\r\n                        <TabPanel \r\n                            index={1} \r\n                            value={curTab} \r\n                        >\r\n                            <Typography \r\n                                variant='h6' \r\n                                component='h6' \r\n                            >\r\n                                Post a photo\r\n                            </Typography>\r\n                            <label \r\n                                html-for='photoPost' \r\n                            >\r\n                                <input \r\n                                    className={classes.input}\r\n                                    type='file'\r\n                                    accept='image/jpg, image/jpeg, image/png' \r\n                                    id='photoPost'\r\n                                    name='photoPost' \r\n                                    onChange={handlePhotoChange} \r\n                                    required \r\n                                />\r\n                                <Button \r\n                                    variant='contained' \r\n                                    color='primary' \r\n                                    component='span' \r\n                                    aria-label='Photo picker button'\r\n                                >\r\n                                    <Icon \r\n                                        path={mdiCamera} \r\n                                        size={1} \r\n                                        title='Photo upload icon' \r\n                                        aria-label='Photo upload icon' \r\n                                    />\r\n                                </Button>\r\n                            </label>\r\n                            <br/>\r\n                            <TextField \r\n                                label='Caption'\r\n                                placeholder='Enter a caption for your photo' \r\n                                variant='outlined' \r\n                                color='primary' \r\n                                value={photoCaption} \r\n                                onChange={e => setPhotoCaption(e.target.value)} \r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                rows={4}\r\n                                multiline\r\n                                required\r\n                            />\r\n                            <br/>\r\n                            <Button \r\n                                style={{\r\n                                    marginTop: 30,\r\n                                }}\r\n                                color='primary' \r\n                                variant='outlined' \r\n                                onClick={handlePhotoUpload}\r\n                                disabled={photoUploading}\r\n                            >\r\n                                {photoUploading ? <CircularProgress color='primary' /> : 'Upload Photo'}\r\n                            </Button>\r\n                        </TabPanel>\r\n                        <TabPanel \r\n                            index={2} \r\n                            value={curTab} \r\n                        >\r\n                            Videos \r\n                        </TabPanel>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Grid>\r\n            {/* Below will begin the tab panels for the posts, about, and events tabs */}\r\n            <Grid \r\n                item \r\n                xs={12} \r\n            >\r\n                <Paper \r\n                    className={classes.paper}\r\n                >\r\n                    <Tabs \r\n                        value={curTab2} \r\n                        onChange={(e, newVal) => setTab2(newVal)}\r\n                        centered\r\n                    >\r\n                        <Tab \r\n                            label='Posts' \r\n                            {...a11yProps(0)} \r\n                        />\r\n                        <Tab \r\n                            label='About' \r\n                            {...a11yProps(1)} \r\n                        />\r\n                        <Tab \r\n                            label='Events' \r\n                            {...a11yProps(2)} \r\n                        />\r\n                    </Tabs>\r\n                </Paper>\r\n                <Grid \r\n                    item \r\n                    xs={12}\r\n                />\r\n                <TabPanel \r\n                    value={0} \r\n                    index={curTab2} \r\n                >\r\n                    {props.posts.length < 1 && \r\n                        <Typography \r\n                            variant='h6' \r\n                            component='h6' \r\n                            align='center' \r\n                        >\r\n                            No posts \r\n                        </Typography>\r\n                    }\r\n                    {props.posts.length > 0 && \r\n                        <div>\r\n                            {props.posts.map((post, index) => (\r\n                                <div \r\n                                    style={{\r\n                                        textAlign: 'left',\r\n                                    }}\r\n                                    key={index}\r\n                                >\r\n                                    <UserPostsCard \r\n                                        user={props.user} \r\n                                        post={post}\r\n                                        key={index} \r\n                                        id={post.uniquePostId}\r\n                                    />\r\n                                    {index < props.posts.length - 1 &&\r\n                                        <div \r\n                                            style={{\r\n                                                marginBottom: 20,\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    }\r\n                </TabPanel>\r\n                <TabPanel \r\n                    value={1} \r\n                    index={curTab2} \r\n                >\r\n                    About\r\n                </TabPanel>\r\n                <TabPanel \r\n                    value={2} \r\n                    index={curTab2} \r\n                >\r\n                    Events\r\n                </TabPanel>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n        posts: state.userPostsReducer.posts,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfilePage);"]},"metadata":{},"sourceType":"module"}