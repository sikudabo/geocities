{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\GeoUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport * as _ from 'underscore';\nimport swal from 'sweetalert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport Icon from '@mdi/react';\nimport { mdiCheckBold, mdiPencil, mdiClose, mdiCamera, mdiVideo, mdiTwitter, mdiInstagram, mdiYoutube } from '@mdi/js';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Divider from '@material-ui/core/Divider';\nimport Link from '@material-ui/core/Link';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GeoUserPostsCard from './GeoUserPostsCard';\nimport NonUserPostsCard from './NonUserPostsCard';\n\nfunction TabPanel(props) {\n  //This component will serve as the panel for each individual tab.\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: index !== value,\n    id: `tabpanel-${index}`,\n    \"aria-label\": `tab-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    style: {\n      marginTop: 100\n    },\n    children: value === index && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      style: {\n        textAlign: 'center'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.any.isRequired,\n  index: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`\n  };\n}\n\nfunction GeoUser(props) {\n  _s();\n\n  const [geoUser, setGeoUser] = useState(null);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: 100\n    },\n    profileAvatar: {\n      height: 128,\n      width: 128,\n      margin: 'auto'\n    },\n    profileAvatarLg: {\n      height: 168,\n      width: 168,\n      margin: 'auto'\n    },\n    usernameDisplay: {\n      marginTop: 40,\n      margin: 'auto'\n    },\n    statsInfo: {\n      marginTop: 40,\n      textAlign: 'center'\n    },\n    paper: {\n      backgroundColor: geoUser ? geoUser.profileTheme : 'rgb(0, 20, 60)',\n      color: 'rgb(255, 255, 255)',\n      marginTop: 40\n    },\n    input: {\n      display: 'none'\n    }\n  }));\n  const classes = useStyles(); //Custom styling. \n\n  const params = useParams();\n  const history = useHistory();\n  const [isFollowing, setIsFollowing] = useState(false); //This will disable a button if the user is following or unfollowing a user.\n\n  const [curTab, setCurTab] = useState(0); //The tab that should display. \n\n  const [isFollowingRequest, setIsFollowingRequest] = useState(false); //Variable and setter that will disable follow button if the user sends a request on a private profile. \n\n  const [communities, setCommunities] = useState([]); //Variable and setter for the users' list of communites\n\n  useEffect(() => {\n    if (props.mainUser === null) {\n      //Call the API to get a public profile view for a user who is not logged in.\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/get/public/geo/user/${params.uniqueUserId}`\n      }).then(response => {\n        if (response.data.geoUser) {\n          //If we were able to get a user, set post and theme globally, and the local geoUser state.\n          props.dispatch({\n            type: 'visitorPosts/updatePosts',\n            payload: response.data.posts\n          });\n          props.dispatch({\n            type: 'ThemeChange',\n            payload: response.data.geoUser.profileTheme\n          });\n          setGeoUser(response.data.geoUser); //Set the local geoUser state variable.\n\n          setCommunities(response.data.communities);\n        } else {\n          swal('Uh Oh!', 'We could not find that user! Their profile might not exist.', 'error');\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error finding that user! Please try again.', 'error');\n      });\n    } else if (props.mainUser !== null) {\n      return axios({\n        method: 'GET',\n        url: `http://192.168.0.9:3001/api/get/geo/user/${params.uniqueUserId}/${props.mainUser.uniqueUserId}`\n      }).then(response => {\n        if (response.data.geoUser && response.data.mainUser) {\n          if (response.data.geoUser.uniqueUserId === props.mainUser.uniqueUserId) {\n            history.push('/profile');\n          } else {\n            if (response.data.geoUser.blockList.includes(response.data.mainUser.uniqueUserId)) {\n              swal('Uh Oh!', 'This user has blocked you!', 'error');\n              history.goBack(1);\n            } else {\n              props.dispatch({\n                type: 'user/updateUser',\n                payload: response.data.mainUser\n              });\n              props.dispatch({\n                type: 'ThemeChange',\n                payload: response.data.geoUser.profileTheme\n              });\n              props.dispatch({\n                type: 'visitorPosts/updatePosts',\n                payload: response.data.posts\n              });\n              setGeoUser(response.data.geoUser);\n              setCommunities(response.data.communities);\n            }\n          }\n        } else {\n          swal('Uh Oh!', 'Could not find that GeoCities user!', 'error');\n          history.goBack(1);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error getting that users profile! Please try again.', 'error');\n        history.goBack(1);\n      });\n    }\n  }, []);\n\n  function followUser() {\n    setIsFollowing(true);\n    let data = JSON.stringify({\n      uniqueUserId: geoUser.uniqueUserId,\n      uniqueFollowerId: props.mainUser.uniqueUserId,\n      username: props.mainUser.username,\n      followUsername: geoUser.username\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/follow/user',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      swal('Great!', 'Successfully followed this user!', 'success');\n      setGeoUser(response.data.geoUser);\n      setIsFollowing(false);\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error following that user! Please try again.', 'error');\n      setIsFollowing(false);\n    });\n  }\n\n  function unfollowUser() {\n    setIsFollowing(true);\n    let data = {\n      uniqueUserId: geoUser.uniqueUserId,\n      uniqueUnfollowerId: props.mainUser.uniqueUserId,\n      username: props.mainUser.username,\n      unfollowUsername: geoUser.username\n    };\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/unfollow/user',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      swal('Great!', 'Successfully unfollowed user!', 'success');\n      setGeoUser(response.data.geoUser);\n      setIsFollowing(false);\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error unfollowing that user! Please try again.', 'error');\n      setIsFollowing(false);\n    });\n  }\n\n  function followUserRequest() {\n    //This function will send a follow request to the geoUser. \n    setIsFollowing(true);\n    setIsFollowingRequest(true);\n    let data = {\n      followerUsername: props.mainUser.username,\n      followerUniqueUserId: props.mainUser.uniqueUserId,\n      username: geoUser.username,\n      uniqueUserId: geoUser.uniqueUserId\n    };\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/follow/user/request',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data === 'duplicate') {\n        swal('Uh Oh!', 'You already sent this user a follow request!', 'error');\n        setIsFollowing(false);\n        setIsFollowingRequest(false);\n      } else {\n        swal('Great!', 'Successfully sent follow request!', 'success');\n        setIsFollowing(false);\n        setGeoUser(response.data.geoUser);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error sending that follow request! Please try again.', 'success');\n      setIsFollowing(false);\n      setIsFollowingRequest(false);\n    });\n  }\n\n  function findFollowers() {\n    //This function will handle finding the followers for a specific geoUser. \n    history.push(`/geouser/followers/${geoUser.uniqueUserId}`);\n  }\n\n  function findFollowing() {\n    history.push(`/geouser/following/${geoUser.uniqueUserId}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [geoUser !== null && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Hidden, {\n            mdUp: true,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: `http://192.168.0.9:3001/api/get-photo/${geoUser.avatar}`,\n              className: classes.profileAvatar,\n              title: `${geoUser.username}`,\n              alt: `${geoUser.username}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n            smDown: true,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: `http://192.168.0.9:3001/api/get-photo/${geoUser.avatar}`,\n              title: `${geoUser.username}`,\n              alt: `${geoUser.username}`,\n              className: classes.profileAvatarLg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h4\",\n          align: \"center\",\n          className: classes.usernameDisplay,\n          children: geoUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }, this), geoUser.isVerified && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          style: {\n            margin: 'auto',\n            textAlign: 'center',\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            path: mdiCheckBold,\n            size: 1,\n            title: \"Verified\",\n            style: {\n              color: 'rgb(0, 128, 0)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }, this), \" Verified\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 1,\n        className: classes.statsInfo,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: props.mainUser !== null && geoUser.followers.length > 0 ? findFollowers : e => console.log('No Followers'),\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            children: \"Followers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: geoUser.followers.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: props.mainUser !== null && geoUser.following.length > 0 ? findFollowing : e => console.log('The user is not following anyone'),\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            children: \"Following\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: geoUser.following.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            children: \"Karma\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: geoUser.karma\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          style: {\n            fontWeight: 'bold',\n            marginTop: 30\n          },\n          children: [geoUser.firstName, \" \", geoUser.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: 40,\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"small\",\n          justify: \"left\",\n          align: \"left\",\n          children: geoUser.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 21\n      }, this), props.mainUser !== null && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          margin: 'auto',\n          textAlign: 'center',\n          marginTop: 20\n        },\n        children: [!_.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId) && geoUser.profilePrivacy === 'public' && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: followUser,\n          disabled: isFollowing,\n          children: isFollowing ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 52\n          }, this) : 'Follow'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 33\n        }, this), !_.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId) && geoUser.profilePrivacy === 'private' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            onClick: followUserRequest,\n            disabled: isFollowingRequest || _.find(geoUser.notifications, notification => notification.uniqueSenderId === props.mainUser.uniqueUserId && notification.type === 'follower request'),\n            children: isFollowing ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 56\n            }, this) : 'Follow'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            align: \"center\",\n            style: {\n              marginTop: 20\n            },\n            children: \"This profile is private\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 33\n        }, this), _.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId) && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: unfollowUser,\n          disabled: isFollowing,\n          children: isFollowing ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 52\n          }, this) : 'Unfollow'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 25\n      }, this), props.mainUser === null && /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        item: true,\n        style: {\n          margin: 'auto',\n          textAlign: 'center',\n          marginTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: e => history.push('/'),\n          children: \"Sign up or log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 25\n      }, this), props.mainUser !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          padding: 0\n        },\n        children: (geoUser.profilePrivacy === 'public' || _.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId)) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 12,\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                value: curTab,\n                onChange: (e, newValue) => setCurTab(newValue),\n                centered: true,\n                children: [/*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Posts\",\n                  ...a11yProps(0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"About\",\n                  ...a11yProps(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Events\",\n                  ...a11yProps(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              index: 0,\n              value: curTab,\n              children: [props.posts.length < 1 && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"h6\",\n                align: \"center\",\n                children: \"No posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 49\n              }, this), props.posts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: props.posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'left'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(GeoUserPostsCard, {\n                    post: post,\n                    user: geoUser,\n                    id: post.uniquePostId,\n                    setter: setGeoUser\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 666,\n                    columnNumber: 61\n                  }, this), index < props.posts.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginBottom: 20\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 673,\n                    columnNumber: 65\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              index: 1,\n              value: curTab,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  component: \"h4\",\n                  align: \"center\",\n                  children: [\"About \", geoUser.firstName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(List, {\n                  style: {\n                    margin: 'auto',\n                    maxWidth: 450,\n                    marginTop: 20\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        component: \"h6\",\n                        align: \"center\",\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 711,\n                        columnNumber: 65\n                      }, this),\n                      secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        component: \"p\",\n                        align: \"center\",\n                        children: [geoUser.firstName, \" \", geoUser.lastName]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 720,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 709,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 706,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 730,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        component: \"h6\",\n                        align: \"center\",\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 736,\n                        columnNumber: 65\n                      }, this),\n                      secondary: /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          textAlign: 'center'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Link, {\n                          component: \"a\",\n                          color: \"primary\",\n                          href: `mailto:${geoUser.email}`,\n                          style: {\n                            textAlign: 'center'\n                          },\n                          children: geoUser.email\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 750,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 745,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 734,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 764,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        component: \"h6\",\n                        align: \"center\",\n                        children: \"Birthdate\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 770,\n                        columnNumber: 65\n                      }, this),\n                      secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        component: \"p\",\n                        align: \"center\",\n                        children: geoUser.birthdate\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 779,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 768,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 765,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 789,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        component: \"h6\",\n                        align: \"center\",\n                        children: \"Profile created on\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 795,\n                        columnNumber: 65\n                      }, this),\n                      secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        component: \"p\",\n                        align: \"center\",\n                        children: [new Date(geoUser.dateCreated).getMonth() + 1, \"/\", new Date(geoUser.dateCreated).getDate(), \"/\", new Date(geoUser.dateCreated).getFullYear()]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 804,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 793,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 790,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        component: \"h6\",\n                        align: \"center\",\n                        children: \"Location\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 820,\n                        columnNumber: 65\n                      }, this),\n                      secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        component: \"p\",\n                        align: \"center\",\n                        children: [geoUser.city, \", \", geoUser.userState]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 829,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 818,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 839,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: geoUser.college !== 'None' && /*#__PURE__*/_jsxDEV(ListItem, {\n                      alignItems: \"center\",\n                      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h6\",\n                          component: \"h6\",\n                          align: \"center\",\n                          children: \"College\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 847,\n                          columnNumber: 73\n                        }, this),\n                        secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body1\",\n                          component: \"p\",\n                          align: \"center\",\n                          children: geoUser.college\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 856,\n                          columnNumber: 73\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 845,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 842,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 840,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 868,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"h6\",\n                    align: \"center\",\n                    children: \"Interests\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 869,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(List, {\n                    children: geoUser.interests.map((interest, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                      alignItems: \"center\",\n                      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                        secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body1\",\n                          component: \"p\",\n                          align: \"center\",\n                          children: interest\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 884,\n                          columnNumber: 73\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 882,\n                        columnNumber: 65\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 878,\n                      columnNumber: 61\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 876,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 896,\n                    columnNumber: 53\n                  }, this), communities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"h6\",\n                      children: \"Communities\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 900,\n                      columnNumber: 61\n                    }, this), communities.map((community, index) => /*#__PURE__*/_jsxDEV(Paper, {\n                      elevation: 3,\n                      style: {\n                        marginBottom: index < communities.length - 1 ? 20 : 0,\n                        cursor: 'pointer'\n                      },\n                      onClick: e => history.push(`/community/${community.name}`),\n                      children: /*#__PURE__*/_jsxDEV(ListItem, {\n                        alignItems: \"flex-start\",\n                        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                          children: /*#__PURE__*/_jsxDEV(Avatar, {\n                            src: `http://192.168.0.9:3001/api/get-photo/${community.avatar}`,\n                            title: `${community.name} avatar`,\n                            alt: `${community.name} avatar`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 920,\n                            columnNumber: 77\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 919,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                            zeroMinWidth: true,\n                            children: /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"h6\",\n                              component: \"h6\",\n                              noWrap: true,\n                              children: community.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 931,\n                              columnNumber: 85\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 928,\n                            columnNumber: 81\n                          }, this),\n                          secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"body1\",\n                            component: \"p\",\n                            children: community.title\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 941,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 926,\n                          columnNumber: 73\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 916,\n                        columnNumber: 69\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 907,\n                      columnNumber: 65\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 899,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: geoUser.twitterHandle && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                        alignItems: \"start\",\n                        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                          children: /*#__PURE__*/_jsxDEV(Icon, {\n                            path: mdiTwitter,\n                            size: 1,\n                            title: 'Twitter handld',\n                            \"aria-label\": \"Twitter handle icon\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 961,\n                            columnNumber: 73\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 960,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: /*#__PURE__*/_jsxDEV(Link, {\n                            component: \"a\",\n                            href: `https://www.twitter.com/${geoUser.twitterHandle}`,\n                            color: \"primary\",\n                            rel: \"external\",\n                            title: \"Twitter handle\",\n                            children: geoUser.twitterHandle\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 970,\n                            columnNumber: 77\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 968,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 957,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 982,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 956,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 954,\n                    columnNumber: 53\n                  }, this), geoUser.instaHandle && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                      alignItems: \"start\",\n                      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                        children: /*#__PURE__*/_jsxDEV(Icon, {\n                          path: mdiInstagram,\n                          size: 1,\n                          title: \"Instagram handle\",\n                          \"aria-label\": \"Instagram handle icon\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 992,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 991,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: /*#__PURE__*/_jsxDEV(Link, {\n                          component: \"a\",\n                          color: \"primary\",\n                          href: `https://www.instagram.com/${geoUser.instaHandle}`,\n                          rel: \"external\",\n                          \"aria-label\": \"Instagram profile link\",\n                          children: geoUser.instaHandle\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1001,\n                          columnNumber: 73\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 999,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 988,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1013,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 987,\n                    columnNumber: 57\n                  }, this), geoUser.youtubeChannel && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                      alignItems: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                        children: /*#__PURE__*/_jsxDEV(Icon, {\n                          path: mdiYoutube,\n                          size: 1,\n                          title: \"Youtube channel\",\n                          \"aria-label\": \"Youtube channel icon\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1022,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1021,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: /*#__PURE__*/_jsxDEV(Link, {\n                          component: \"a\",\n                          color: \"primary\",\n                          href: geoUser.youtubeChannel,\n                          rel: \"external\",\n                          \"aria-label\": \"Youtube channel link\",\n                          children: \"Youtube link\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1031,\n                          columnNumber: 73\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1029,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1018,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1043,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1017,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              index: 2,\n              value: curTab,\n              children: \"Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 25\n      }, this), props.mainUser === null && geoUser.profilePrivacy === 'private' && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h6\",\n          align: \"center\",\n          children: \"Private profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1070,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 25\n      }, this), props.mainUser === null && geoUser.profilePrivacy === 'public' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          padding: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.paper,\n            children: /*#__PURE__*/_jsxDEV(Tabs, {\n              value: curTab,\n              onChange: (e, newValue) => setCurTab(newValue),\n              centered: true,\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Posts\",\n                ...a11yProps(0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1100,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"About\",\n                ...a11yProps(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1104,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Events\",\n                ...a11yProps(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1108,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1095,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            index: 0,\n            value: curTab,\n            children: [props.posts.length < 1 && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              align: \"center\",\n              children: \"No posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 41\n            }, this), props.posts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: props.posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [/*#__PURE__*/_jsxDEV(NonUserPostsCard, {\n                  post: post,\n                  id: post.uniquePostId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1143,\n                  columnNumber: 53\n                }, this), index < props.posts.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: 20\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1148,\n                  columnNumber: 57\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            index: 1,\n            value: curTab,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                component: \"h4\",\n                align: \"center\",\n                children: [\"About \", geoUser.firstName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1169,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                style: {\n                  margin: 'auto',\n                  maxWidth: 450,\n                  marginTop: 20\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  alignItems: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"h6\",\n                      align: \"center\",\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1188,\n                      columnNumber: 57\n                    }, this),\n                    secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"p\",\n                      align: \"center\",\n                      children: [geoUser.firstName, \" \", geoUser.lastName]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1197,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1186,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1183,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1207,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  alignItems: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"h6\",\n                      align: \"center\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1213,\n                      columnNumber: 57\n                    }, this),\n                    secondary: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        textAlign: 'center'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        component: \"a\",\n                        color: \"primary\",\n                        href: `mailto:${geoUser.email}`,\n                        style: {\n                          textAlign: 'center'\n                        },\n                        children: geoUser.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1227,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1222,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1211,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1208,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1241,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  alignItems: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"h6\",\n                      align: \"center\",\n                      children: \"Birthdate\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1247,\n                      columnNumber: 57\n                    }, this),\n                    secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"p\",\n                      align: \"center\",\n                      children: geoUser.birthdate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1256,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1245,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1242,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1266,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  alignItems: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"h6\",\n                      align: \"center\",\n                      children: \"Profile created on\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1272,\n                      columnNumber: 57\n                    }, this),\n                    secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"p\",\n                      align: \"center\",\n                      children: [new Date(geoUser.dateCreated).getMonth() + 1, \"/\", new Date(geoUser.dateCreated).getDate(), \"/\", new Date(geoUser.dateCreated).getFullYear()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1281,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1270,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1267,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1291,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  alignItems: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"h6\",\n                      align: \"center\",\n                      children: \"Location\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1297,\n                      columnNumber: 57\n                    }, this),\n                    secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"p\",\n                      align: \"center\",\n                      children: [geoUser.city, \", \", geoUser.userState]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1306,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1295,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1292,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1316,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: geoUser.college !== 'None' && /*#__PURE__*/_jsxDEV(ListItem, {\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        component: \"h6\",\n                        align: \"center\",\n                        children: \"College\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1324,\n                        columnNumber: 65\n                      }, this),\n                      secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        component: \"p\",\n                        align: \"center\",\n                        children: geoUser.college\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1333,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1322,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1319,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1317,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1345,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"h6\",\n                  align: \"center\",\n                  children: \"Interests\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1346,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(List, {\n                  children: geoUser.interests.map((interest, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        component: \"p\",\n                        align: \"center\",\n                        children: interest\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1361,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1359,\n                      columnNumber: 57\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1355,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1353,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1373,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: geoUser.twitterHandle && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                      alignItems: \"start\",\n                      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                        children: /*#__PURE__*/_jsxDEV(Icon, {\n                          path: mdiTwitter,\n                          size: 1,\n                          title: 'Twitter handld',\n                          \"aria-label\": \"Twitter handle icon\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1381,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1380,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: /*#__PURE__*/_jsxDEV(Link, {\n                          component: \"a\",\n                          href: `https://www.twitter.com/${geoUser.twitterHandle}`,\n                          color: \"primary\",\n                          rel: \"external\",\n                          title: \"Twitter handle\",\n                          children: geoUser.twitterHandle\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1390,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1388,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1377,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1402,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1376,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1374,\n                  columnNumber: 45\n                }, this), geoUser.instaHandle && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                    alignItems: \"start\",\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(Icon, {\n                        path: mdiInstagram,\n                        size: 1,\n                        title: \"Instagram handle\",\n                        \"aria-label\": \"Instagram handle icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1412,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1411,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Link, {\n                        component: \"a\",\n                        color: \"primary\",\n                        href: `https://www.instagram.com/${geoUser.instaHandle}`,\n                        rel: \"external\",\n                        \"aria-label\": \"Instagram profile link\",\n                        children: geoUser.instaHandle\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1421,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1419,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1408,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1433,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1407,\n                  columnNumber: 49\n                }, this), geoUser.youtubeChannel && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                    alignItems: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(Icon, {\n                        path: mdiYoutube,\n                        size: 1,\n                        title: \"Youtube channel\",\n                        \"aria-label\": \"Youtube channel icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1442,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1441,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Link, {\n                        component: \"a\",\n                        color: \"primary\",\n                        href: geoUser.youtubeChannel,\n                        rel: \"external\",\n                        \"aria-label\": \"Youtube channel link\",\n                        children: \"Youtube link\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1451,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1449,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1438,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1463,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1437,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1176,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1165,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1161,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            index: 2,\n            value: curTab,\n            children: \"Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1471,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }, this), geoUser === null && /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: true,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1488,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1485,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GeoUser, \"1wEbmuw5Ri3E+HuBEIG4IoOrKNQ=\", false, function () {\n  return [useStyles, useParams, useHistory];\n});\n\n_c2 = GeoUser;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user,\n    primary: state.userThemeReducer.primary,\n    posts: state.visitorPostsReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(GeoUser);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"GeoUser\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/GeoUser.js"],"names":["React","useState","useEffect","useLayoutEffect","useRef","useHistory","useParams","Grid","Avatar","Typography","Button","Tabs","Tab","Dialog","DialogContent","AppBar","Toolbar","connect","axios","_","swal","makeStyles","Hidden","Icon","mdiCheckBold","mdiPencil","mdiClose","mdiCamera","mdiVideo","mdiTwitter","mdiInstagram","mdiYoutube","Paper","PropTypes","List","ListItem","ListItemText","ListItemIcon","ListItemAvatar","Divider","Link","Backdrop","CircularProgress","GeoUserPostsCard","NonUserPostsCard","TabPanel","props","children","value","index","other","marginTop","textAlign","propTypes","node","any","isRequired","a11yProps","id","GeoUser","geoUser","setGeoUser","useStyles","theme","root","profileAvatar","height","width","margin","profileAvatarLg","usernameDisplay","statsInfo","paper","backgroundColor","profileTheme","color","input","display","classes","params","history","isFollowing","setIsFollowing","curTab","setCurTab","isFollowingRequest","setIsFollowingRequest","communities","setCommunities","mainUser","method","url","uniqueUserId","then","response","data","dispatch","type","payload","posts","catch","err","console","log","message","push","blockList","includes","goBack","followUser","JSON","stringify","uniqueFollowerId","username","followUsername","headers","unfollowUser","uniqueUnfollowerId","unfollowUsername","followUserRequest","followerUsername","followerUniqueUserId","findFollowers","findFollowing","avatar","isVerified","cursor","followers","length","e","following","karma","fontWeight","firstName","lastName","bio","find","follower","profilePrivacy","notifications","notification","uniqueSenderId","padding","newValue","map","post","uniquePostId","marginBottom","maxWidth","email","birthdate","Date","dateCreated","getMonth","getDate","getFullYear","city","userState","college","interests","interest","community","name","title","twitterHandle","instaHandle","youtubeChannel","mapStateToProps","state","userReducer","user","primary","userThemeReducer","visitorPostsReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef}  from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport * as _ from 'underscore';\r\nimport swal from 'sweetalert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Icon from '@mdi/react';\r\nimport { mdiCheckBold, mdiPencil, mdiClose, mdiCamera, mdiVideo, mdiTwitter, mdiInstagram, mdiYoutube } from '@mdi/js';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Link from '@material-ui/core/Link';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GeoUserPostsCard from './GeoUserPostsCard';\r\nimport NonUserPostsCard from './NonUserPostsCard';\r\n\r\nfunction TabPanel(props) {\r\n    //This component will serve as the panel for each individual tab.\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div \r\n            role='tabpanel'\r\n            hidden={index !== value} \r\n            id={`tabpanel-${index}`}\r\n            aria-label={`tab-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n            style={{\r\n                marginTop: 100,\r\n            }}\r\n        >\r\n            {value === index &&\r\n                <Grid \r\n                    item \r\n                    xs\r\n                    style={{\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    {children}\r\n                </Grid>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    value: PropTypes.any.isRequired,\r\n    index: PropTypes.any.isRequired,\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `tab-${index}`,\r\n        'aria-controls': `tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction GeoUser(props) {\r\n    const [geoUser, setGeoUser] = useState(null);\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            marginTop: 100,\r\n        },\r\n        profileAvatar: {\r\n            height: 128,\r\n            width: 128,\r\n            margin: 'auto',\r\n        },\r\n        profileAvatarLg: {\r\n            height: 168,\r\n            width: 168,\r\n            margin: 'auto',\r\n        },\r\n        usernameDisplay: {\r\n            marginTop: 40,\r\n            margin: 'auto',\r\n        },\r\n        statsInfo: {\r\n            marginTop: 40,\r\n            textAlign: 'center',\r\n        },\r\n        paper: {\r\n            backgroundColor: geoUser ? geoUser.profileTheme : 'rgb(0, 20, 60)',\r\n            color: 'rgb(255, 255, 255)',\r\n            marginTop: 40,\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n    }));\r\n    const classes = useStyles(); //Custom styling. \r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const [isFollowing, setIsFollowing] = useState(false); //This will disable a button if the user is following or unfollowing a user.\r\n    const [curTab, setCurTab] = useState(0); //The tab that should display. \r\n    const [isFollowingRequest, setIsFollowingRequest] = useState(false); //Variable and setter that will disable follow button if the user sends a request on a private profile. \r\n    const [communities, setCommunities] = useState([]); //Variable and setter for the users' list of communites\r\n    \r\n    useEffect(() => {\r\n        if(props.mainUser === null) {\r\n            //Call the API to get a public profile view for a user who is not logged in.\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/get/public/geo/user/${params.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.geoUser) {\r\n                    //If we were able to get a user, set post and theme globally, and the local geoUser state.\r\n                    props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\r\n                    props.dispatch({type: 'ThemeChange', payload: response.data.geoUser.profileTheme});\r\n                    setGeoUser(response.data.geoUser); //Set the local geoUser state variable.\r\n                    setCommunities(response.data.communities);\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'We could not find that user! Their profile might not exist.',\r\n                        'error',\r\n                    );\r\n\r\n                    \r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error finding that user! Please try again.',\r\n                    'error',\r\n                );\r\n            });\r\n        }\r\n        else if(props.mainUser !== null) {\r\n            return axios({\r\n                method: 'GET',\r\n                url: `http://192.168.0.9:3001/api/get/geo/user/${params.uniqueUserId}/${props.mainUser.uniqueUserId}`,\r\n            }).then(response => {\r\n                if(response.data.geoUser && response.data.mainUser) {\r\n                    if(response.data.geoUser.uniqueUserId === props.mainUser.uniqueUserId) {\r\n                        history.push('/profile');\r\n                    }\r\n                    else {\r\n                        if(response.data.geoUser.blockList.includes(response.data.mainUser.uniqueUserId)) {\r\n                            swal(\r\n                                'Uh Oh!',\r\n                                'This user has blocked you!',\r\n                                'error',\r\n                            );\r\n                            history.goBack(1);\r\n                        }\r\n                        else {\r\n                            props.dispatch({type: 'user/updateUser', payload: response.data.mainUser});\r\n                            props.dispatch({type: 'ThemeChange', payload: response.data.geoUser.profileTheme});\r\n                            props.dispatch({type: 'visitorPosts/updatePosts', payload: response.data.posts});\r\n                            setGeoUser(response.data.geoUser);\r\n                            setCommunities(response.data.communities);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'Could not find that GeoCities user!',\r\n                        'error',\r\n                    );\r\n                    history.goBack(1);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error getting that users profile! Please try again.',\r\n                    'error',\r\n                );\r\n                history.goBack(1);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function followUser() {\r\n        setIsFollowing(true);\r\n        let data = JSON.stringify({\r\n            uniqueUserId: geoUser.uniqueUserId,\r\n            uniqueFollowerId: props.mainUser.uniqueUserId,\r\n            username: props.mainUser.username,\r\n            followUsername: geoUser.username,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/follow/user',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            swal(\r\n                'Great!',\r\n                'Successfully followed this user!',\r\n                'success',\r\n            );\r\n            setGeoUser(response.data.geoUser);\r\n            setIsFollowing(false);\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error following that user! Please try again.',\r\n                'error',\r\n            );\r\n            setIsFollowing(false);\r\n        });\r\n    }\r\n\r\n    function unfollowUser() {\r\n        setIsFollowing(true);\r\n        let data = {\r\n            uniqueUserId: geoUser.uniqueUserId,\r\n            uniqueUnfollowerId: props.mainUser.uniqueUserId,\r\n            username: props.mainUser.username,\r\n            unfollowUsername: geoUser.username,\r\n        };\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/unfollow/user',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            swal(\r\n                'Great!',\r\n                'Successfully unfollowed user!',\r\n                'success',\r\n            );\r\n            setGeoUser(response.data.geoUser);\r\n            setIsFollowing(false);\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error unfollowing that user! Please try again.',\r\n                'error',\r\n            );\r\n            setIsFollowing(false);\r\n        });\r\n    }\r\n\r\n    function followUserRequest() {\r\n        //This function will send a follow request to the geoUser. \r\n        setIsFollowing(true);\r\n        setIsFollowingRequest(true);\r\n        let data = {\r\n            followerUsername: props.mainUser.username,\r\n            followerUniqueUserId: props.mainUser.uniqueUserId,\r\n            username: geoUser.username,\r\n            uniqueUserId: geoUser.uniqueUserId,\r\n        };\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/follow/user/request',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            if(response.data === 'duplicate') {\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'You already sent this user a follow request!',\r\n                    'error',\r\n                );\r\n                setIsFollowing(false);\r\n                setIsFollowingRequest(false);\r\n            }\r\n            else {\r\n                swal(\r\n                    'Great!',\r\n                    'Successfully sent follow request!',\r\n                    'success',\r\n                );\r\n                setIsFollowing(false);\r\n                setGeoUser(response.data.geoUser);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error sending that follow request! Please try again.',\r\n                'success',\r\n            );\r\n            setIsFollowing(false);\r\n            setIsFollowingRequest(false);\r\n        });\r\n    }\r\n\r\n    function findFollowers() {\r\n        //This function will handle finding the followers for a specific geoUser. \r\n        history.push(`/geouser/followers/${geoUser.uniqueUserId}`);\r\n    }\r\n\r\n    function findFollowing() {\r\n        history.push(`/geouser/following/${geoUser.uniqueUserId}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Below is the conditional rendering if the geoUser object is not null */}\r\n            {geoUser !== null &&\r\n                <Grid \r\n                    container \r\n                    className={classes.root} \r\n                >\r\n                    <Grid \r\n                        item \r\n                        container \r\n                        xs={12} \r\n                    >\r\n                        <Grid \r\n                            item \r\n                            xs={12} \r\n                        >\r\n                            {/* Below is the avatar that will display 128x128 pixels on small screen devices */}\r\n                            <Hidden \r\n                                mdUp  \r\n                            >\r\n                                <Avatar \r\n                                    src={`http://192.168.0.9:3001/api/get-photo/${geoUser.avatar}`} \r\n                                    className={classes.profileAvatar} \r\n                                    title={`${geoUser.username}`} \r\n                                    alt={`${geoUser.username}`} \r\n                                />\r\n                            </Hidden>\r\n                            {/* Below is the avatar that will display on medium and large screen devices at 168x168 pixels*/}\r\n                            <Hidden \r\n                                smDown \r\n                            >\r\n                                <Avatar \r\n                                    src={`http://192.168.0.9:3001/api/get-photo/${geoUser.avatar}`}\r\n                                    title={`${geoUser.username}`}\r\n                                    alt={`${geoUser.username}`}\r\n                                    className={classes.profileAvatarLg} \r\n                                />\r\n                            </Hidden>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* End of the top Grid that displays the avatar. Below is the Grid to display the username in a Typography component */}\r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                    >\r\n                        <Typography \r\n                            variant='h4' \r\n                            component='h4' \r\n                            align='center' \r\n                            className={classes.usernameDisplay}\r\n                        >\r\n                            {geoUser.username}\r\n                        </Typography>\r\n                        {geoUser.isVerified &&\r\n                        <Typography \r\n                            variant='body1'\r\n                            component='p' \r\n                            style={{\r\n                                margin: 'auto',\r\n                                textAlign: 'center',\r\n                                marginTop: 10,\r\n                            }}\r\n                        >\r\n                            <Icon \r\n                                path={mdiCheckBold} \r\n                                size={1} \r\n                                title='Verified' \r\n                                style={{\r\n                                    color: 'rgb(0, 128, 0)'\r\n                                }}\r\n                            /> Verified \r\n                        </Typography>\r\n                    }\r\n                    </Grid>\r\n                    {/* End of the username and verified check display. Below is the Grid to display following followers and Karma.*/}\r\n                    <Grid \r\n                        container \r\n                        item \r\n                        xs={12}\r\n                        spacing={1}\r\n                        className={classes.statsInfo} \r\n                    >\r\n                        <Grid \r\n                            item \r\n                            xs={4} \r\n                            style={{\r\n                                cursor: 'pointer'\r\n                            }}\r\n                            onClick={(props.mainUser !== null && geoUser.followers.length > 0) ? findFollowers : e => console.log('No Followers')}\r\n                        >\r\n                            <Typography \r\n                                variant='h6' \r\n                                component='h6' \r\n                            >\r\n                                Followers \r\n                            </Typography>\r\n                            <Typography \r\n                                variant='body1' \r\n                                component='p' \r\n                            >\r\n                                {geoUser.followers.length}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid \r\n                            item \r\n                            xs={4} \r\n                            style={{\r\n                                cursor: 'pointer',\r\n                            }}\r\n                            onClick={(props.mainUser !== null && geoUser.following.length > 0) ? findFollowing : e => console.log('The user is not following anyone')}\r\n                        >\r\n                            <Typography \r\n                                variant='h6' \r\n                                component='h6' \r\n                            >\r\n                                Following \r\n                            </Typography>\r\n                            <Typography \r\n                                variant='body1' \r\n                                component='p' \r\n                            >\r\n                                {geoUser.following.length}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid \r\n                        item \r\n                        xs={4} \r\n                        >\r\n                            <Typography \r\n                                variant='h6' \r\n                                component='h6' \r\n                            >\r\n                                Karma\r\n                            </Typography>\r\n                            <Typography \r\n                                variant='body1' \r\n                                component='p' \r\n                            >\r\n                                {geoUser.karma}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* End of the statsInfo Grid */}\r\n                    {/* Below is the Grid to display the geoUsers' first and last name */}\r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                        style={{\r\n                            textAlign: 'center',\r\n                        }}\r\n                    >\r\n                        <Typography \r\n                            variant='body1' \r\n                            component='p' \r\n                            style={{\r\n                                fontWeight: 'bold',\r\n                                marginTop: 30,\r\n                            }}\r\n                        >\r\n                            {geoUser.firstName} {geoUser.lastName}\r\n                        </Typography>\r\n                    </Grid>\r\n                    {/* End of the Grid to display the first and last name */}\r\n                    {/* Begin the Grid to display the GeoUsers bio */}\r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                        style={{\r\n                            marginTop: 40,\r\n                            textAlign: 'center',\r\n                        }}\r\n                    >\r\n                        <Typography \r\n                            variant='body2' \r\n                            component='small' \r\n                            justify='left'\r\n                            align='left'\r\n                        >\r\n                            {geoUser.bio}\r\n                        </Typography>\r\n                    </Grid>\r\n                    {/* End of the Grid that displays the geoUsers' bio*/}\r\n                    {/* Below we will add a follow or unfollow button if the main user is active. This button \r\n                        will not exist if the main user is not active. Instead, we should add a button that \r\n                        takes someone visiting this page to the sign up page. If the mainUser is not null, \r\n                        they will get the follow Button if they don't follow the user and an unfollow button \r\n                        if they do follow the user. This button will only conditionally render if the mainUser \r\n                        object is not null.*/\r\n                    }\r\n                    {props.mainUser !== null &&\r\n                        <Grid \r\n                            item \r\n                            xs={12}\r\n                            style={{\r\n                                margin: 'auto',\r\n                                textAlign: 'center',\r\n                                marginTop: 20,\r\n                            }}\r\n                        >\r\n                            {/* Below create a condition if we have a user that is not following a user already, and the profile is public so the user doesn't have to send a follow request. */}\r\n                            {(!_.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId) && geoUser.profilePrivacy === 'public') &&\r\n                                <Button \r\n                                    color='primary'   \r\n                                    variant='contained' \r\n                                    onClick={followUser}\r\n                                    disabled={isFollowing} \r\n                                >\r\n                                    {isFollowing ? <CircularProgress /> : 'Follow'}\r\n                                </Button>\r\n                            }\r\n                            {/* Below create a condition if we have a user that is not following a user already, and the profile is private so the user must send a follow request */}\r\n                            {(!_.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId) && geoUser.profilePrivacy === 'private') &&\r\n                                <div>\r\n                                    <Button \r\n                                        color='primary' \r\n                                        variant='contained' \r\n                                        onClick={followUserRequest}\r\n                                        disabled={isFollowingRequest || _.find(geoUser.notifications, notification => notification.uniqueSenderId === props.mainUser.uniqueUserId && notification.type === 'follower request')}\r\n                                    >\r\n                                        {isFollowing ? <CircularProgress /> : 'Follow'}\r\n                                    </Button>\r\n                                    <Typography \r\n                                        variant='h6' \r\n                                        component='h6' \r\n                                        align='center' \r\n                                        style={{\r\n                                            marginTop: 20,\r\n                                        }}\r\n                                    >\r\n                                        This profile is private\r\n                                    </Typography>\r\n                                </div>\r\n                            }\r\n                            {/* Below is the condition to add the unfollow button if a mainUser is in the list of a geoUsers' followers */}\r\n                            {_.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId) &&\r\n                                <Button \r\n                                    color='primary' \r\n                                    variant='contained' \r\n                                    onClick={unfollowUser}\r\n                                    disabled={isFollowing} \r\n                                >\r\n                                    {isFollowing ? <CircularProgress /> : 'Unfollow'}\r\n                                </Button>\r\n                            }\r\n                            {/* End of condition to add the unfollow button */}\r\n                        </Grid>\r\n                    }\r\n                    {/*This will display a sign up button if the page visitor is not logged in */}\r\n                    {props.mainUser === null &&\r\n                        <Grid \r\n                            xs={12}\r\n                            item \r\n                            style={{\r\n                                margin: 'auto',\r\n                                textAlign: 'center',\r\n                                marginTop: 20,\r\n                            }}\r\n                        >\r\n                            <Button \r\n                                color='primary'\r\n                                onClick={e => history.push('/')}\r\n                            >\r\n                                Sign up or log in\r\n                            </Button>\r\n                        </Grid>\r\n                    }\r\n                    {/* End of the Button to handle following or unfollowing a user */}\r\n                    {/* Below I need to handle conditions in which the rest of the page will either \r\n                        display or not display depending on if the mainUser is following or not following the \r\n                        user. I also need to consider if the geoUser has a public or private account. I must \r\n                        also handle cases in which someone who is not logged in can either visit an account \r\n                        or not visit an account. *\r\n                    */}\r\n                    {props.mainUser !== null &&\r\n                        <div \r\n                            style={{\r\n                                width: '100%',\r\n                                padding: 0,\r\n                            }}\r\n                        >\r\n                            {/* If the geoUser either has a public profile, or the mainUser follows the Geo User, add the tabs and posts section */}\r\n                            {/* Below is the section for tabs within a Grid */}\r\n                            {(geoUser.profilePrivacy === 'public' || _.find(geoUser.followers, follower => follower.uniqueUserId === props.mainUser.uniqueUserId)) &&\r\n                                <div>\r\n                                    <Grid \r\n                                        xs={12}\r\n                                        item \r\n                                    >\r\n                                        <Paper \r\n                                            className={classes.paper} \r\n                                        >\r\n                                            <Tabs \r\n                                                value={curTab} \r\n                                                onChange={(e, newValue) => setCurTab(newValue)} \r\n                                                centered\r\n                                            >\r\n                                                <Tab \r\n                                                    label='Posts'\r\n                                                    {...a11yProps(0)}\r\n                                                />\r\n                                                <Tab \r\n                                                    label='About' \r\n                                                    {...a11yProps(1)}\r\n                                                />\r\n                                                <Tab \r\n                                                    label='Events' \r\n                                                    {...a11yProps(2)} \r\n                                                />\r\n                                            </Tabs>\r\n                                        </Paper>\r\n                                        <Grid \r\n                                            item \r\n                                            xs={12} \r\n                                        />\r\n                                        <TabPanel \r\n                                            index={0}\r\n                                            value={curTab} \r\n                                        >\r\n                                            {/* If condition for if the user has no posts. */}\r\n                                            {props.posts.length < 1 &&\r\n                                                <Typography \r\n                                                    variant='h6' \r\n                                                    component='h6' \r\n                                                    align='center' \r\n                                                >\r\n                                                    No posts \r\n                                                </Typography>\r\n                                            }\r\n                                            {/*End of if condition if user has no posts. Now, put the posts content below if the user has posts */}\r\n                                            {props.posts.length > 0 &&\r\n                                                <div>\r\n                                                    {props.posts.map((post, index) => (\r\n                                                        <div \r\n                                                            style={{\r\n                                                                textAlign: 'left',\r\n                                                            }}\r\n                                                            key={index} \r\n                                                        >\r\n                                                            <GeoUserPostsCard \r\n                                                                post={post}\r\n                                                                user={geoUser}\r\n                                                                id={post.uniquePostId} \r\n                                                                setter={setGeoUser}\r\n                                                            />\r\n                                                            {index < props.posts.length - 1 &&\r\n                                                                <div \r\n                                                                    style={{\r\n                                                                        marginBottom: 20,\r\n                                                                    }}\r\n                                                                />\r\n                                                            }\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            }\r\n                                        </TabPanel>\r\n                                        <TabPanel \r\n                                            index={1}\r\n                                            value={curTab} \r\n                                        >\r\n                                            <Grid \r\n                                                item \r\n                                                xs={12} \r\n                                            >\r\n                                                <Typography \r\n                                                    variant='h4' \r\n                                                    component='h4' \r\n                                                    align='center' \r\n                                                >\r\n                                                    About {geoUser.firstName}\r\n                                                </Typography>\r\n                                                <List \r\n                                                    style={{\r\n                                                        margin: 'auto',\r\n                                                        maxWidth: 450,\r\n                                                        marginTop: 20,\r\n                                                    }}\r\n                                                >\r\n                                                    <ListItem \r\n                                                        alignItems='center' \r\n                                                    >\r\n                                                        <ListItemText \r\n                                                            primary={\r\n                                                                <Typography \r\n                                                                    variant='h6' \r\n                                                                    component='h6' \r\n                                                                    align='center'\r\n                                                                >\r\n                                                                    Name \r\n                                                                </Typography>\r\n                                                            }\r\n                                                            secondary={\r\n                                                                <Typography \r\n                                                                    variant='body1' \r\n                                                                    component='p' \r\n                                                                    align='center'\r\n                                                                >\r\n                                                                    {geoUser.firstName} {geoUser.lastName}\r\n                                                                </Typography>\r\n                                                            }\r\n                                                        />\r\n                                                    </ListItem>\r\n                                                    <Divider />\r\n                                                    <ListItem \r\n                                                        alignItems='center' \r\n                                                    >\r\n                                                        <ListItemText \r\n                                                            primary={\r\n                                                                <Typography \r\n                                                                    variant='h6' \r\n                                                                    component='h6' \r\n                                                                    align='center' \r\n                                                                >\r\n                                                                    Email\r\n                                                                </Typography>\r\n                                                            }\r\n                                                            secondary={\r\n                                                                <div\r\n                                                                    style={{\r\n                                                                        textAlign: 'center'\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <Link \r\n                                                                        component='a'\r\n                                                                        color='primary' \r\n                                                                        href={`mailto:${geoUser.email}`}\r\n                                                                        style={{\r\n                                                                            textAlign: 'center',\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        {geoUser.email}\r\n                                                                    </Link>\r\n                                                                </div>\r\n                                                            }\r\n                                                        />\r\n                                                    </ListItem>\r\n                                                    <Divider />\r\n                                                    <ListItem \r\n                                                        alignItems='center' \r\n                                                    >\r\n                                                        <ListItemText \r\n                                                            primary={\r\n                                                                <Typography \r\n                                                                    variant='h6' \r\n                                                                    component='h6' \r\n                                                                    align='center' \r\n                                                                >\r\n                                                                    Birthdate \r\n                                                                </Typography>\r\n                                                            }\r\n                                                            secondary={\r\n                                                                <Typography \r\n                                                                    variant='body1' \r\n                                                                    component='p' \r\n                                                                    align='center' \r\n                                                                >\r\n                                                                    {geoUser.birthdate}\r\n                                                                </Typography>\r\n                                                            }\r\n                                                        />\r\n                                                    </ListItem>\r\n                                                    <Divider />\r\n                                                    <ListItem \r\n                                                        alignItems='center' \r\n                                                    >\r\n                                                        <ListItemText \r\n                                                            primary={\r\n                                                                <Typography \r\n                                                                    variant='h6' \r\n                                                                    component='h6' \r\n                                                                    align='center' \r\n                                                                >\r\n                                                                    Profile created on\r\n                                                                </Typography>\r\n                                                            }\r\n                                                            secondary={\r\n                                                                <Typography \r\n                                                                    variant='body1' \r\n                                                                    component='p' \r\n                                                                    align='center'\r\n                                                                >\r\n                                                                    {new Date(geoUser.dateCreated).getMonth() + 1}/{new Date(geoUser.dateCreated).getDate()}/{new Date(geoUser.dateCreated).getFullYear()}\r\n                                                                </Typography>\r\n                                                            }\r\n                                                        />\r\n                                                    </ListItem>\r\n                                                    <Divider />\r\n                                                    <ListItem \r\n                                                        alignItems='center' \r\n                                                    >\r\n                                                        <ListItemText \r\n                                                            primary={\r\n                                                                <Typography \r\n                                                                    variant='h6' \r\n                                                                    component='h6' \r\n                                                                    align='center' \r\n                                                                >\r\n                                                                    Location\r\n                                                                </Typography>\r\n                                                            }\r\n                                                            secondary={\r\n                                                                <Typography \r\n                                                                    variant='body1' \r\n                                                                    component='p' \r\n                                                                    align='center' \r\n                                                                >\r\n                                                                    {geoUser.city}, {geoUser.userState}\r\n                                                                </Typography>\r\n                                                            }\r\n                                                        />\r\n                                                    </ListItem>\r\n                                                    <Divider />\r\n                                                    <div>\r\n                                                        {geoUser.college !== 'None' &&\r\n                                                            <ListItem \r\n                                                                alignItems='center' \r\n                                                            >\r\n                                                                <ListItemText \r\n                                                                    primary={\r\n                                                                        <Typography \r\n                                                                            variant='h6' \r\n                                                                            component='h6' \r\n                                                                            align='center' \r\n                                                                        >\r\n                                                                            College \r\n                                                                        </Typography>\r\n                                                                    }\r\n                                                                    secondary={\r\n                                                                        <Typography \r\n                                                                            variant='body1' \r\n                                                                            component='p' \r\n                                                                            align='center' \r\n                                                                        >\r\n                                                                            {geoUser.college}\r\n                                                                        </Typography>\r\n                                                                    }\r\n                                                                />\r\n                                                            </ListItem>\r\n                                                        }\r\n                                                    </div>\r\n                                                    <Divider />\r\n                                                    <Typography \r\n                                                        variant='h6' \r\n                                                        component='h6' \r\n                                                        align='center' \r\n                                                    >\r\n                                                        Interests\r\n                                                    </Typography>\r\n                                                    <List>\r\n                                                        {geoUser.interests.map((interest, index) => (\r\n                                                            <ListItem \r\n                                                                alignItems='center' \r\n                                                                key={index} \r\n                                                            >\r\n                                                                <ListItemText \r\n                                                                    secondary={\r\n                                                                        <Typography \r\n                                                                            variant='body1' \r\n                                                                            component='p'\r\n                                                                            align='center' \r\n                                                                        >\r\n                                                                            {interest}\r\n                                                                        </Typography>\r\n                                                                    }\r\n                                                                />\r\n                                                            </ListItem>\r\n                                                        ))}\r\n                                                    </List>\r\n                                                    <Divider />\r\n                                                    {/* Now create the condition to see if there are any communities */}\r\n                                                    {communities.length > 0 &&\r\n                                                        <div>\r\n                                                            <Typography \r\n                                                                variant='h6' \r\n                                                                component='h6' \r\n                                                            >\r\n                                                                Communities \r\n                                                            </Typography>\r\n                                                            {communities.map((community, index) => (\r\n                                                                <Paper \r\n                                                                    elevation={3} \r\n                                                                    key={index} \r\n                                                                    style={{\r\n                                                                        marginBottom: index < communities.length - 1 ? 20 : 0,\r\n                                                                        cursor: 'pointer',\r\n                                                                    }}\r\n                                                                    onClick={e => history.push(`/community/${community.name}`)}\r\n                                                                >\r\n                                                                    <ListItem \r\n                                                                        alignItems='flex-start' \r\n                                                                    >\r\n                                                                        <ListItemAvatar>\r\n                                                                            <Avatar \r\n                                                                                src={`http://192.168.0.9:3001/api/get-photo/${community.avatar}`}\r\n                                                                                title={`${community.name} avatar`}\r\n                                                                                alt={`${community.name} avatar`}\r\n                                                                            />\r\n                                                                        </ListItemAvatar>\r\n                                                                        <ListItemText \r\n                                                                            primary={\r\n                                                                                <div \r\n                                                                                    zeroMinWidth \r\n                                                                                >\r\n                                                                                    <Typography \r\n                                                                                        variant='h6' \r\n                                                                                        component='h6' \r\n                                                                                        noWrap \r\n                                                                                    >\r\n                                                                                        {community.name}\r\n                                                                                    </Typography>\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                            secondary={\r\n                                                                                <Typography \r\n                                                                                    variant='body1' \r\n                                                                                    component='p' \r\n                                                                                >\r\n                                                                                    {community.title}\r\n                                                                                </Typography>\r\n                                                                            }\r\n                                                                        />\r\n                                                                    </ListItem>\r\n                                                                </Paper>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    }\r\n                                                    <div>\r\n                                                        {geoUser.twitterHandle &&\r\n                                                            <div>\r\n                                                                <ListItem \r\n                                                                    alignItems='start' \r\n                                                                >\r\n                                                                    <ListItemIcon>\r\n                                                                        <Icon \r\n                                                                            path={mdiTwitter}\r\n                                                                            size={1} \r\n                                                                            title={'Twitter handld'}\r\n                                                                            aria-label='Twitter handle icon' \r\n                                                                        />\r\n                                                                    </ListItemIcon>\r\n                                                                    <ListItemText \r\n                                                                        primary={\r\n                                                                            <Link \r\n                                                                                component='a' \r\n                                                                                href={`https://www.twitter.com/${geoUser.twitterHandle}`}\r\n                                                                                color='primary' \r\n                                                                                rel='external' \r\n                                                                                title='Twitter handle'\r\n                                                                            >\r\n                                                                                {geoUser.twitterHandle}\r\n                                                                            </Link>\r\n                                                                        }\r\n                                                                    />\r\n                                                                </ListItem>\r\n                                                                <Divider />\r\n                                                            </div>\r\n                                                        }\r\n                                                    </div>\r\n                                                    {geoUser.instaHandle &&\r\n                                                        <div>\r\n                                                            <ListItem \r\n                                                                alignItems='start' \r\n                                                            >\r\n                                                                <ListItemIcon>\r\n                                                                    <Icon \r\n                                                                        path={mdiInstagram} \r\n                                                                        size={1} \r\n                                                                        title='Instagram handle' \r\n                                                                        aria-label='Instagram handle icon' \r\n                                                                    />\r\n                                                                </ListItemIcon>\r\n                                                                <ListItemText \r\n                                                                    primary={\r\n                                                                        <Link \r\n                                                                            component='a' \r\n                                                                            color='primary' \r\n                                                                            href={`https://www.instagram.com/${geoUser.instaHandle}`}\r\n                                                                            rel='external'\r\n                                                                            aria-label='Instagram profile link' \r\n                                                                        >\r\n                                                                            {geoUser.instaHandle}\r\n                                                                        </Link>\r\n                                                                    }\r\n                                                                />\r\n                                                            </ListItem>\r\n                                                            <Divider />\r\n                                                        </div>\r\n                                                    }\r\n                                                    {geoUser.youtubeChannel &&\r\n                                                        <div>\r\n                                                            <ListItem \r\n                                                                alignItems='center' \r\n                                                            >\r\n                                                                <ListItemIcon>\r\n                                                                    <Icon \r\n                                                                        path={mdiYoutube} \r\n                                                                        size={1}\r\n                                                                        title='Youtube channel' \r\n                                                                        aria-label='Youtube channel icon'\r\n                                                                    />\r\n                                                                </ListItemIcon>\r\n                                                                <ListItemText \r\n                                                                    primary={\r\n                                                                        <Link \r\n                                                                            component='a' \r\n                                                                            color='primary' \r\n                                                                            href={geoUser.youtubeChannel}\r\n                                                                            rel='external'\r\n                                                                            aria-label='Youtube channel link' \r\n                                                                        >\r\n                                                                            Youtube link\r\n                                                                        </Link>\r\n                                                                    }\r\n                                                                />\r\n                                                            </ListItem>\r\n                                                            <Divider />\r\n                                                        </div>\r\n                                                    }\r\n                                                </List>\r\n                                            </Grid>\r\n                                        </TabPanel>\r\n                                        <TabPanel \r\n                                            index={2} \r\n                                            value={curTab} \r\n                                        >\r\n                                            Events \r\n                                        </TabPanel>\r\n                                    </Grid>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    {/* This will conditionally render if the mainUser is null, meaining a user is not logged in.*/}\r\n                    {/* Below will will return a Typography saying the profile is private if the visitor is not logged in and the profile is private */}\r\n                    {(props.mainUser === null && geoUser.profilePrivacy === 'private') &&\r\n                        <Grid \r\n                            item \r\n                            xs={12} \r\n                            style={{\r\n                                marginTop: 20,\r\n                            }}\r\n                        >\r\n                            <Typography \r\n                                variant='h6' \r\n                                component='h6' \r\n                                align='center' \r\n                            >\r\n                                Private profile\r\n                            </Typography>\r\n                        </Grid>\r\n                    }\r\n                    {/*End of privacy notice if the user is not logged in */}\r\n                    {/* Below show the tabs and profile page if the profile is public */}\r\n                    {(props.mainUser === null && geoUser.profilePrivacy === 'public') &&\r\n                        <div \r\n                            style={{\r\n                                width: '100%',\r\n                                padding: 0\r\n                            }}\r\n                        >\r\n                            <Grid \r\n                                xs={12}\r\n                                item \r\n                            >\r\n                                <Paper \r\n                                    className={classes.paper} \r\n                                >\r\n                                    <Tabs \r\n                                        value={curTab} \r\n                                        onChange={(e, newValue) => setCurTab(newValue)} \r\n                                        centered\r\n                                    >\r\n                                        <Tab \r\n                                            label='Posts'\r\n                                            {...a11yProps(0)}\r\n                                        />\r\n                                        <Tab \r\n                                            label='About' \r\n                                            {...a11yProps(1)}\r\n                                        />\r\n                                        <Tab \r\n                                            label='Events' \r\n                                            {...a11yProps(2)} \r\n                                        />\r\n                                    </Tabs>\r\n                                </Paper>\r\n                                <Grid \r\n                                    item \r\n                                    xs={12} \r\n                                />\r\n                                <TabPanel \r\n                                    index={0}\r\n                                    value={curTab} \r\n                                >\r\n                                    {/* If condition for if the user has no posts. */}\r\n                                    {props.posts.length < 1 &&\r\n                                        <Typography \r\n                                            variant='h6' \r\n                                            component='h6' \r\n                                            align='center' \r\n                                        >\r\n                                            No posts \r\n                                        </Typography>\r\n                                    }\r\n                                    {/* End of if condition if the user has no posts */}\r\n                                    {/* Now begin the if condition to iterate through all posts if the geoUser has at least one post */}\r\n                                    {props.posts.length > 0 &&\r\n                                        <div>\r\n                                            {props.posts.map((post, index) => (\r\n                                                <div \r\n                                                    style={{\r\n                                                        textAlign: 'left',\r\n                                                    }}\r\n                                                    key={index} \r\n                                                >\r\n                                                    <NonUserPostsCard\r\n                                                        post={post}\r\n                                                        id={post.uniquePostId} \r\n                                                    />\r\n                                                    {index < props.posts.length - 1 &&\r\n                                                        <div \r\n                                                            style={{\r\n                                                                marginBottom: 20,\r\n                                                            }}\r\n                                                        />\r\n                                                    }\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    }\r\n                                </TabPanel>\r\n                                {/* End of the first tab panel that contains posts */}\r\n                                {/* Begin the tab panel for the \"about\" section */}\r\n                                <TabPanel \r\n                                    index={1}\r\n                                    value={curTab} \r\n                                >\r\n                                    <Grid \r\n                                        item \r\n                                        xs={12} \r\n                                    >\r\n                                        <Typography \r\n                                            variant='h4' \r\n                                            component='h4' \r\n                                            align='center' \r\n                                        >\r\n                                            About {geoUser.firstName}\r\n                                        </Typography>\r\n                                        <List \r\n                                            style={{\r\n                                                margin: 'auto',\r\n                                                maxWidth: 450,\r\n                                                marginTop: 20,\r\n                                            }}\r\n                                        >\r\n                                            <ListItem \r\n                                                alignItems='center' \r\n                                            >\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center'\r\n                                                        >\r\n                                                            Name \r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center'\r\n                                                        >\r\n                                                            {geoUser.firstName} {geoUser.lastName}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            <Divider />\r\n                                            <ListItem \r\n                                                alignItems='center' \r\n                                            >\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            Email\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <div\r\n                                                            style={{\r\n                                                                textAlign: 'center'\r\n                                                            }}\r\n                                                        >\r\n                                                            <Link \r\n                                                                component='a'\r\n                                                                color='primary' \r\n                                                                href={`mailto:${geoUser.email}`}\r\n                                                                style={{\r\n                                                                    textAlign: 'center',\r\n                                                                }}\r\n                                                            >\r\n                                                                {geoUser.email}\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            <Divider />\r\n                                            <ListItem \r\n                                                alignItems='center' \r\n                                            >\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            Birthdate \r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {geoUser.birthdate}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            <Divider />\r\n                                            <ListItem \r\n                                                alignItems='center' \r\n                                            >\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            Profile created on\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center'\r\n                                                        >\r\n                                                            {new Date(geoUser.dateCreated).getMonth() + 1}/{new Date(geoUser.dateCreated).getDate()}/{new Date(geoUser.dateCreated).getFullYear()}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            <Divider />\r\n                                            <ListItem \r\n                                                alignItems='center' \r\n                                            >\r\n                                                <ListItemText \r\n                                                    primary={\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            Location\r\n                                                        </Typography>\r\n                                                    }\r\n                                                    secondary={\r\n                                                        <Typography \r\n                                                            variant='body1' \r\n                                                            component='p' \r\n                                                            align='center' \r\n                                                        >\r\n                                                            {geoUser.city}, {geoUser.userState}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            <Divider />\r\n                                            <div>\r\n                                                {geoUser.college !== 'None' &&\r\n                                                    <ListItem \r\n                                                        alignItems='center' \r\n                                                    >\r\n                                                        <ListItemText \r\n                                                            primary={\r\n                                                                <Typography \r\n                                                                    variant='h6' \r\n                                                                    component='h6' \r\n                                                                    align='center' \r\n                                                                >\r\n                                                                    College \r\n                                                                </Typography>\r\n                                                            }\r\n                                                            secondary={\r\n                                                                <Typography \r\n                                                                    variant='body1' \r\n                                                                    component='p' \r\n                                                                    align='center' \r\n                                                                >\r\n                                                                    {geoUser.college}\r\n                                                                </Typography>\r\n                                                            }\r\n                                                        />\r\n                                                    </ListItem>\r\n                                                }\r\n                                            </div>\r\n                                            <Divider />\r\n                                            <Typography \r\n                                                variant='h6' \r\n                                                component='h6' \r\n                                                align='center' \r\n                                            >\r\n                                                Interests\r\n                                            </Typography>\r\n                                            <List>\r\n                                                {geoUser.interests.map((interest, index) => (\r\n                                                    <ListItem \r\n                                                        alignItems='center' \r\n                                                        key={index} \r\n                                                    >\r\n                                                        <ListItemText \r\n                                                            secondary={\r\n                                                                <Typography \r\n                                                                    variant='body1' \r\n                                                                    component='p'\r\n                                                                    align='center' \r\n                                                                >\r\n                                                                    {interest}\r\n                                                                </Typography>\r\n                                                            }\r\n                                                        />\r\n                                                    </ListItem>\r\n                                                ))}\r\n                                            </List>\r\n                                            <Divider />\r\n                                            <div>\r\n                                                {geoUser.twitterHandle &&\r\n                                                    <div>\r\n                                                        <ListItem \r\n                                                            alignItems='start' \r\n                                                        >\r\n                                                            <ListItemIcon>\r\n                                                                <Icon \r\n                                                                    path={mdiTwitter}\r\n                                                                    size={1} \r\n                                                                    title={'Twitter handld'}\r\n                                                                    aria-label='Twitter handle icon' \r\n                                                                />\r\n                                                            </ListItemIcon>\r\n                                                            <ListItemText \r\n                                                                primary={\r\n                                                                    <Link \r\n                                                                        component='a' \r\n                                                                        href={`https://www.twitter.com/${geoUser.twitterHandle}`}\r\n                                                                        color='primary' \r\n                                                                        rel='external' \r\n                                                                        title='Twitter handle'\r\n                                                                    >\r\n                                                                        {geoUser.twitterHandle}\r\n                                                                    </Link>\r\n                                                                }\r\n                                                            />\r\n                                                        </ListItem>\r\n                                                        <Divider />\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                            {geoUser.instaHandle &&\r\n                                                <div>\r\n                                                    <ListItem \r\n                                                        alignItems='start' \r\n                                                    >\r\n                                                        <ListItemIcon>\r\n                                                            <Icon \r\n                                                                path={mdiInstagram} \r\n                                                                size={1} \r\n                                                                title='Instagram handle' \r\n                                                                aria-label='Instagram handle icon' \r\n                                                            />\r\n                                                        </ListItemIcon>\r\n                                                        <ListItemText \r\n                                                            primary={\r\n                                                                <Link \r\n                                                                    component='a' \r\n                                                                    color='primary' \r\n                                                                    href={`https://www.instagram.com/${geoUser.instaHandle}`}\r\n                                                                    rel='external'\r\n                                                                    aria-label='Instagram profile link' \r\n                                                                >\r\n                                                                    {geoUser.instaHandle}\r\n                                                                </Link>\r\n                                                            }\r\n                                                        />\r\n                                                    </ListItem>\r\n                                                    <Divider />\r\n                                                </div>\r\n                                            }\r\n                                            {geoUser.youtubeChannel &&\r\n                                                <div>\r\n                                                    <ListItem \r\n                                                        alignItems='center' \r\n                                                    >\r\n                                                        <ListItemIcon>\r\n                                                            <Icon \r\n                                                                path={mdiYoutube} \r\n                                                                size={1}\r\n                                                                title='Youtube channel' \r\n                                                                aria-label='Youtube channel icon'\r\n                                                            />\r\n                                                        </ListItemIcon>\r\n                                                        <ListItemText \r\n                                                            primary={\r\n                                                                <Link \r\n                                                                    component='a' \r\n                                                                    color='primary' \r\n                                                                    href={geoUser.youtubeChannel}\r\n                                                                    rel='external'\r\n                                                                    aria-label='Youtube channel link' \r\n                                                                >\r\n                                                                    Youtube link\r\n                                                                </Link>\r\n                                                            }\r\n                                                        />\r\n                                                    </ListItem>\r\n                                                    <Divider />\r\n                                                </div>\r\n                                            }\r\n                                        </List>\r\n                                    </Grid>\r\n                                </TabPanel>\r\n                                {/* End of the tab panel for the \"about\" section */}\r\n                                {/* Begin the tab panel for the \"events\" section */}\r\n                                <TabPanel \r\n                                    index={2} \r\n                                    value={curTab} \r\n                                >\r\n                                    Events \r\n                                </TabPanel>\r\n                            </Grid>\r\n                        </div>\r\n                    }\r\n                    {/* End of the profile page view for a user who is not logged in and is viewing a public profile page */}\r\n                </Grid>\r\n            }\r\n            {/* End of conditional rendering if the geoUser object is not null */}\r\n            {geoUser === null &&\r\n                <Backdrop \r\n                    open={true} \r\n                >\r\n                    <CircularProgress \r\n                        color='primary' \r\n                    />\r\n                </Backdrop>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        primary: state.userThemeReducer.primary,\r\n        posts: state.visitorPostsReducer.posts,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GeoUser);"]},"metadata":{},"sourceType":"module"}