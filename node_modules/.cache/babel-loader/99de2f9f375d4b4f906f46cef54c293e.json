{"ast":null,"code":"import _slicedToArray from\"/Users/simeonikudabo/Downloads/geocities/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect,useRef}from'react';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import Paper from'@material-ui/core/Paper';import Avatar from'@material-ui/core/Avatar';import Backdrop from'@material-ui/core/Backdrop';import CircularProgress from'@material-ui/core/CircularProgress';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemAvatar from'@material-ui/core/ListItemAvatar';import ListItemText from'@material-ui/core/ListItemText';import swal from'sweetalert';import Divider from'@material-ui/core/Divider';import TextField from'@material-ui/core/TextField';import{makeStyles}from'@material-ui/core/styles';import useSocket from'use-socket.io-client';import{connect}from'react-redux';import{useHistory,useParams}from'react-router-dom';import axios from'axios';import*as _ from'underscore';import{NotificationContainer,NotificationManager}from'react-notifications';//A module that is more similar to vue-notifications to notify a user when someone has joined or left the chatroom.\nimport'./react-notifications/dist/react-notifications.css';import InputAdornment from'@material-ui/core/InputAdornment';import IconButton from'@material-ui/core/IconButton';import Icon from'@mdi/react';import{mdiSend,mdiDelete}from'@mdi/js';var useStyles=makeStyles(function(){return{listItem:{maxWidth:600,margin:'auto'},list:{maxWidth:600,margin:'auto'},avatarLg:{height:168,width:168,margin:'auto'}};});function CommunityChat(props){var classes=useStyles();//Custom component classes. \nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),community=_useState2[0],setCommunity=_useState2[1];//Variable and setter for the community we are in.\nvar _useSocket=useSocket('http://192.168.0.17:3001/'),_useSocket2=_slicedToArray(_useSocket,1),socket=_useSocket2[0];//useSocket hook to maintain a connection.\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),chatMsg=_useState4[0],setChatMsg=_useState4[1];//The message that could be sent to the server for another chat. \nvar params=useParams();var history=useHistory();var gridRef=useRef(null);var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),msgDeleting=_useState6[0],setMsgDeleting=_useState6[1];//Variable and setter to handle when the message is deleting. \nuseEffect(function(){if(props.mainUser){return axios({method:'GET',url:\"http://192.168.0.17:3001/api/fetch/community/\".concat(params.communityName)}).then(function(response){var inCommunity=_.find(response.data.community.members,function(member){return member.uniqueUserId===props.mainUser.uniqueUserId;});if(response.data.community===null){swal('Uh Oh!','We could not find that communities chatroom!','error');history.goBack(1);}else if(_.find(response.data.community.blockList,function(person){return person.uniqueUserId===props.mainUser.uniqueUserId;})){swal('Uh Oh!','You are blocked from this community!','error');history.goBack(1);}else if(!inCommunity){swal('Uh Oh','You must be a member of this community to join the community chatroom','error');history.goBack(1);}else{setCommunity(response.data.community);//Set the community in the local state variable to this community. \nprops.dispatch({type:'ThemeChange',payload:response.data.community.communityTheme});//Change the theme to match the community theme.\n//Below, we must connect the socket. \nsocket.connect();//Below, immediately scroll to the botom of the messages list. \nif(gridRef.current){window.scrollTo({behavior:'smooth',top:gridRef.current.offsetTop});}//Below we will get the socket to join the room\n//We emit the joinRoom action and send the username and room name to the server.\nsocket.emit('joinRoom',{username:props.mainUser.username,room:response.data.community.name});//Below add the listener for IF the user joins the room. \nsocket.on('userJoined',function(data){var message=data.username+' Joined the chat!';NotificationManager.info(message,'New user joined',5000);});//Below will handle a new message being sent to the community chatroom. \nsocket.on('newMsg',function(data){setCommunity(data);if(gridRef.current){window.scrollTo({behavior:'smooth',top:gridRef.current.offsetTop});}});}}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error joining the chatroom!','error');history.goBack(1);});}else{swal('Uh Oh!','You must be logged in to join a chatroom!','error');history.goBack(1);}},[]);function handleUserPush(uniqueUserId){//Route that handles pushing to a new user when the avatar is clicked within the chat messages. \nhistory.push(\"/geouser/\".concat(uniqueUserId));history.go(0);}function timeDifference(date2,dateString){//This function will return whether or not we display something like \"2 hrs ago\" \"20 min ago\" or the date string for a post\nvar date1=Date.now();var difference=date1-date2;var daysDifference=Math.floor(difference/1000/60/60/24);var hoursDifference=Math.floor(difference/1000/60/60);var minutesDifference=Math.floor(difference/1000/60);var secondsDifference=Math.floor(difference/1000);if(daysDifference>0){return dateString;}else if(hoursDifference>0&&hoursDifference<23){return\"\".concat(hoursDifference,\" hr ago\");}else if(minutesDifference>0&&minutesDifference<60){return\"\".concat(minutesDifference,\" min ago\");}else if(minutesDifference===0){return\"\".concat(secondsDifference,\" secs ago\");}else{return dateString;}}function sendMsg(){//This function will be responsible for sending a chat message to the server socket. \nif(chatMsg.trim()===''){swal('Uh Oh!','You must enter a message to send to the community chatroom!','error');return false;}else{var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'];var date=new Date();var month=months[date.getMonth()];var year=date.getFullYear();var day=date.getDate();var dateString=\"\".concat(month,\" \").concat(day,\", \").concat(year);var data={username:props.mainUser.username,uniqueUserId:props.mainUser.uniqueUserId,utcTime:new Date().getTime(),dateString:dateString,uniqueMessageId:Date.now()+dateString+props.mainUser.username+props.mainUser.uniqueUserId,community:community.name,room:community.name+'chatroom',text:chatMsg};socket.emit('sendMsg',data);setChatMsg('');}}function deleteMsg(uniqueMessageId){setMsgDeleting(true);var data={uniqueMessageId:uniqueMessageId,community:community.name};return axios({method:'POST',url:'http://192.168.0.17:3001/api/delete/chat/msg',data:data,headers:{'Content-Type':'application/json'}}).then(function(response){setCommunity(response.data.community);setMsgDeleting(false);}).catch(function(err){console.log(err.message);swal('Uh Oh!','There was an error deleting that message from the chatroom!','error');setMsgDeleting(false);});}if(props.mainUser!==null&&community!==null){return/*#__PURE__*/_jsxs(Grid,{container:true,style:{marginTop:100},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(NotificationContainer,{})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Avatar,{variant:\"square\",className:classes.avatarLg,alt:\"\".concat(community.name,\" avatar\"),title:\"\".concat(community.name,\" avatar\"),src:\"http://192.168.0.17:3001/api/get-photo/\".concat(community.avatar)}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",component:\"small\",align:\"center\",style:{fontWeight:'bold',textAlign:'center',margin:'auto'},children:[community.chatRoom.community,\" chat\"]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,style:{marginTop:50},children:[community.chatRoom.messages.length<1&&/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'centter'},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",align:\"center\",children:\"No messages!\"})}),community.chatRoom.messages.length>0&&/*#__PURE__*/_jsx(List,{className:classes.list,children:community.chatRoom.messages.map(function(msg,index){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(ListItem,{className:classes.listItem,alignItems:\"flex-start\",children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:\"http://192.168.0.17:3001/api/get/avatar/by/id/\".concat(msg.uniqueUserId),title:\"\".concat(msg.username),alt:\"\".concat(msg.username),onClick:function onClick(e){return handleUserPush(msg.uniqueUserId);},style:{cursor:'pointer'}})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h6\",children:msg.username}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",component:\"span\",color:\"textSecondary\",children:timeDifference(msg.utcTime,msg.dateString)})]}),secondary:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",component:\"p\",children:msg.text})}),/*#__PURE__*/_jsx(\"div\",{children:(props.mainUser.uniqueUserId===msg.uniqueUserId||community.moderator.uniqueUserId===props.mainUser.uniqueUserId)&&/*#__PURE__*/_jsx(IconButton,{color:\"primary\",onClick:function onClick(){return deleteMsg(msg.uniqueMessageId);},disabled:msgDeleting,children:msgDeleting?/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"}):/*#__PURE__*/_jsx(Icon,{path:mdiDelete,size:1,title:\"Delete comment button\",\"aria-label\":\"Delete comment button\"})})})]},index.toString()),index<community.chatRoom.messages.length-1&&/*#__PURE__*/_jsx(Divider,{})]});})})]}),/*#__PURE__*/_jsx(\"div\",{ref:gridRef}),/*#__PURE__*/_jsx(Grid,{item:true,container:true,xs:12,style:{marginTop:10},ref:gridRef,children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{value:chatMsg,onChange:function onChange(e){return setChatMsg(e.target.value);},variant:\"outlined\",color:\"primary\",label:\"Chat message\",placeholder:\"Send a message...\",InputLabelProps:{shrink:true},InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"Message send button\",color:\"primary\",onClick:sendMsg,children:/*#__PURE__*/_jsx(Icon,{path:mdiSend,size:2})})})},fullWidth:true})})})]});}else{return/*#__PURE__*/_jsx(Backdrop,{open:true,children:/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\"})});}}function mapStateToProps(state){return{mainUser:state.userReducer.user,primary:state.userThemeReducer.primary};}export default connect(mapStateToProps)(CommunityChat);","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/CommunityChat.js"],"names":["React","useState","useEffect","useRef","Grid","Typography","Paper","Avatar","Backdrop","CircularProgress","List","ListItem","ListItemAvatar","ListItemText","swal","Divider","TextField","makeStyles","useSocket","connect","useHistory","useParams","axios","_","NotificationContainer","NotificationManager","InputAdornment","IconButton","Icon","mdiSend","mdiDelete","useStyles","listItem","maxWidth","margin","list","avatarLg","height","width","CommunityChat","props","classes","community","setCommunity","socket","chatMsg","setChatMsg","params","history","gridRef","msgDeleting","setMsgDeleting","mainUser","method","url","communityName","then","response","inCommunity","find","data","members","member","uniqueUserId","goBack","blockList","person","dispatch","type","payload","communityTheme","current","window","scrollTo","behavior","top","offsetTop","emit","username","room","name","on","message","info","catch","err","console","log","handleUserPush","push","go","timeDifference","date2","dateString","date1","Date","now","difference","daysDifference","Math","floor","hoursDifference","minutesDifference","secondsDifference","sendMsg","trim","months","date","month","getMonth","year","getFullYear","day","getDate","utcTime","getTime","uniqueMessageId","text","deleteMsg","headers","marginTop","textAlign","avatar","fontWeight","chatRoom","messages","length","map","msg","index","e","cursor","moderator","toString","target","value","shrink","endAdornment","mapStateToProps","state","userReducer","user","primary","userThemeReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport swal from 'sweetalert';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useSocket from 'use-socket.io-client';\nimport { connect } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport * as _ from 'underscore';\nimport {NotificationContainer, NotificationManager} from 'react-notifications'; //A module that is more similar to vue-notifications to notify a user when someone has joined or left the chatroom.\nimport './react-notifications/dist/react-notifications.css';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@mdi/react';\nimport { mdiSend, mdiDelete } from '@mdi/js';\n\nconst useStyles = makeStyles(() => ({\n    listItem: {\n        maxWidth: 600,\n        margin: 'auto',\n    },\n    list: {\n        maxWidth: 600,\n        margin: 'auto',\n    },\n    avatarLg: {\n        height: 168,\n        width: 168,\n        margin: 'auto',\n    },\n}));\n\nfunction CommunityChat(props) {\n    const classes = useStyles(); //Custom component classes. \n    const [community, setCommunity]= useState(null); //Variable and setter for the community we are in.\n    const [socket] = useSocket('http://192.168.0.17:3001/'); //useSocket hook to maintain a connection.\n    const [chatMsg, setChatMsg] = useState(''); //The message that could be sent to the server for another chat. \n    const params = useParams();\n    const history = useHistory();\n    const gridRef = useRef(null);\n    const [msgDeleting, setMsgDeleting] = useState(false); //Variable and setter to handle when the message is deleting. \n\n    useEffect(() => {\n        if(props.mainUser) {\n            return axios({\n                method: 'GET',\n                url: `http://192.168.0.17:3001/api/fetch/community/${params.communityName}`,\n            }).then(response => {\n                let inCommunity = _.find(response.data.community.members, member => member.uniqueUserId === props.mainUser.uniqueUserId);\n                if(response.data.community === null) {\n                    swal(\n                        'Uh Oh!',\n                        'We could not find that communities chatroom!',\n                        'error',\n                    );\n                    history.goBack(1);\n                }\n                else if(_.find(response.data.community.blockList, person => person.uniqueUserId === props.mainUser.uniqueUserId)) {\n                    swal(\n                        'Uh Oh!',\n                        'You are blocked from this community!',\n                        'error',\n                    );\n                    history.goBack(1);\n                }\n                else if(!inCommunity){\n                    swal(\n                        'Uh Oh',\n                        'You must be a member of this community to join the community chatroom',\n                        'error',\n                    );\n                    history.goBack(1);\n                }\n                else {\n                    setCommunity(response.data.community); //Set the community in the local state variable to this community. \n                    props.dispatch({type: 'ThemeChange', payload: response.data.community.communityTheme}); //Change the theme to match the community theme.\n                    \n                    //Below, we must connect the socket. \n                    socket.connect();\n                    \n                    //Below, immediately scroll to the botom of the messages list. \n                    if(gridRef.current) {\n                        window.scrollTo({\n                            behavior: 'smooth',\n                            top: gridRef.current.offsetTop,\n                        });\n                    }\n\n                    //Below we will get the socket to join the room\n                    //We emit the joinRoom action and send the username and room name to the server.\n                    socket.emit('joinRoom', {\n                        username: props.mainUser.username,\n                        room: response.data.community.name,\n                    });\n\n                    //Below add the listener for IF the user joins the room. \n                    socket.on('userJoined', data => {\n                        let message = data.username + ' Joined the chat!';\n                        NotificationManager.info(message, 'New user joined', 5000);\n                    });\n\n                    //Below will handle a new message being sent to the community chatroom. \n                    socket.on('newMsg', data => {\n                        setCommunity(data);\n                        if(gridRef.current) {\n                            window.scrollTo({\n                                behavior: 'smooth',\n                                top: gridRef.current.offsetTop,\n                            });\n                        }\n                    });\n                }\n            }).catch(err => {\n                console.log(err.message);\n                swal(\n                    'Uh Oh!',\n                    'There was an error joining the chatroom!',\n                    'error',\n                );\n                history.goBack(1);\n            });\n        }\n        else {\n            swal(\n                'Uh Oh!',\n                'You must be logged in to join a chatroom!',\n                'error',\n            );\n            history.goBack(1);\n        }\n\n    }, []);\n\n    function handleUserPush(uniqueUserId) {\n        //Route that handles pushing to a new user when the avatar is clicked within the chat messages. \n        history.push(`/geouser/${uniqueUserId}`);\n        history.go(0);\n    }\n\n    function timeDifference(date2, dateString) {\n        //This function will return whether or not we display something like \"2 hrs ago\" \"20 min ago\" or the date string for a post\n        let date1 = Date.now();\n        let difference = date1 - date2;\n        let daysDifference = Math.floor(difference/1000/60/60/24);\n        let hoursDifference = Math.floor(difference/1000/60/60);\n        let minutesDifference = Math.floor(difference/1000/60);\n        let secondsDifference = Math.floor(difference/1000);\n        if(daysDifference > 0) {\n            return dateString;\n        }\n        else if(hoursDifference > 0 && hoursDifference < 23) {\n            return `${hoursDifference} hr ago`;\n        }\n        else if(minutesDifference > 0 && minutesDifference < 60) {\n            return `${minutesDifference} min ago`;\n        }\n        else if(minutesDifference === 0) {\n            return `${secondsDifference} secs ago`\n        }\n        else {\n            return dateString;\n        }\n    }\n\n    function sendMsg() {\n        //This function will be responsible for sending a chat message to the server socket. \n        if(chatMsg.trim() === '') {\n            swal(\n                'Uh Oh!',\n                'You must enter a message to send to the community chatroom!',\n                'error',\n            );\n            return false;\n        }\n        else {\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n            let date = new Date();\n            let month = months[date.getMonth()];\n            let year = date.getFullYear();\n            let day = date.getDate();\n            let dateString = `${month} ${day}, ${year}`;\n            let data = {\n                username: props.mainUser.username,\n                uniqueUserId: props.mainUser.uniqueUserId,\n                utcTime: new Date().getTime(),\n                dateString: dateString,\n                uniqueMessageId: Date.now() + dateString + props.mainUser.username + props.mainUser.uniqueUserId,\n                community: community.name,\n                room: community.name + 'chatroom',\n                text: chatMsg,\n            };\n\n            socket.emit('sendMsg', data);\n            setChatMsg('');\n        }\n    }\n\n    function deleteMsg(uniqueMessageId) {\n        setMsgDeleting(true); \n        let data = {\n            uniqueMessageId: uniqueMessageId,\n            community: community.name,\n        };\n\n        return axios({\n            method: 'POST',\n            url: 'http://192.168.0.17:3001/api/delete/chat/msg',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            setCommunity(response.data.community);\n            setMsgDeleting(false);\n        }).catch(err => {\n            console.log(err.message);\n            swal(\n                'Uh Oh!',\n                'There was an error deleting that message from the chatroom!',\n                'error',\n            );\n            setMsgDeleting(false);\n        });\n    }\n\n    if(props.mainUser !== null && community !== null) {\n        return (\n            <Grid \n                container \n                style={{\n                    marginTop: 100,\n                }}\n            >\n                <Grid \n                    item \n                    xs={12} \n                >\n                    <NotificationContainer />\n                </Grid>\n                <Grid \n                    item \n                    xs={12} \n                    style={{\n                        textAlign: 'center',\n                    }}\n                >\n                    <Avatar \n                        variant='square'\n                        className={classes.avatarLg}\n                        alt={`${community.name} avatar`}\n                        title={`${community.name} avatar`}\n                        src={`http://192.168.0.17:3001/api/get-photo/${community.avatar}`}\n                    />\n                    <Typography \n                        variant='body1'\n                        component='small'\n                        align='center'\n                        style={{\n                            fontWeight: 'bold',\n                            textAlign: 'center',\n                            margin: 'auto',\n                        }}\n                    >\n                        {community.chatRoom.community} chat\n                    </Typography>\n                </Grid>\n                {/* This is where the Grid should be for the messages section. This will be above the Grid for the TextField and Button to send messages */}\n                <Grid \n                    item \n                    xs={12} \n                    style={{\n                        marginTop: 50,\n                    }}\n                >\n                    {community.chatRoom.messages.length < 1 &&\n                        <div \n                            style={{\n                                textAlign: 'centter',\n                            }}\n                        >\n                            <Typography \n                                variant='h6'\n                                component='h6'\n                                align='center' \n                            >\n                                No messages!\n                            </Typography>\n                        </div>\n                    }\n                    {community.chatRoom.messages.length > 0 &&\n                        <List \n                            className={classes.list}\n                        >\n                            {community.chatRoom.messages.map((msg, index) => (\n                                <div>\n                                    <ListItem \n                                        className={classes.listItem} \n                                        alignItems='flex-start'\n                                        key={index.toString()}\n                                    >\n                                        <ListItemAvatar>\n                                            <Avatar \n                                                src={`http://192.168.0.17:3001/api/get/avatar/by/id/${msg.uniqueUserId}`}\n                                                title={`${msg.username}`}\n                                                alt={`${msg.username}`} \n                                                onClick={e => handleUserPush(msg.uniqueUserId)}\n                                                style={{\n                                                    cursor: 'pointer',\n                                                }}\n                                            />\n                                        </ListItemAvatar>\n                                        <ListItemText \n                                            primary={\n                                                <div>\n                                                    <Typography \n                                                        variant='h6' \n                                                        component='h6' \n                                                    >\n                                                        {msg.username}\n                                                    </Typography>\n                                                    <Typography \n                                                        variant='subtitle1' \n                                                        component='span' \n                                                        color='textSecondary'\n                                                    >\n                                                        {timeDifference(msg.utcTime, msg.dateString)}\n                                                    </Typography>\n                                                </div>\n                                            }\n                                            secondary={\n                                                <Typography \n                                                    variant='body2' \n                                                    component='p' \n                                                >\n                                                    {msg.text}\n                                                </Typography>\n                                            }\n                                        />\n                                        <div>\n                                            {(props.mainUser.uniqueUserId === msg.uniqueUserId || community.moderator.uniqueUserId === props.mainUser.uniqueUserId) &&\n                                                <IconButton \n                                                    color='primary'\n                                                    onClick={() => deleteMsg(msg.uniqueMessageId)}\n                                                    disabled={msgDeleting}\n                                                >\n                                                    {msgDeleting ? <CircularProgress color='primary' /> : <Icon path={mdiDelete} size={1} title='Delete comment button' aria-label='Delete comment button' />}\n                                                </IconButton>\n                                            }\n                                        </div>\n                                    </ListItem>\n                                    {index < community.chatRoom.messages.length - 1 &&\n                                        <Divider />\n                                    }\n                                </div>\n                            ))}\n                        </List>\n                    }\n                </Grid>\n                {/* This Div will serve as a dummy to scroll to */} \n                <div \n                    ref={gridRef}\n                >\n\n                </div>\n                {/* This is the end of the Grid for the messages section. Now we need a Grid or a div for the TextField and Button to send messages */}\n                <Grid \n                    item\n                    container \n                    xs={12}\n                    style={{\n                        marginTop: 10,\n                    }}\n                    ref={gridRef}\n                >\n                    <Grid \n                        item \n                        xs={12}\n                    >\n                        <TextField \n                            value={chatMsg}\n                            onChange={e => setChatMsg(e.target.value)}\n                            variant='outlined'\n                            color='primary' \n                            label='Chat message'\n                            placeholder='Send a message...'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                endAdornment: (\n                                  <InputAdornment position='end'>\n                                    <IconButton\n                                      aria-label='Message send button'\n                                      color='primary'\n                                      onClick={sendMsg}\n                                    >\n                                        <Icon \n                                            path={mdiSend}\n                                            size={2}\n                                        />\n                                    </IconButton>\n                                  </InputAdornment>\n                                ),\n                              }}\n                            fullWidth\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n    else {\n        return (\n            <Backdrop\n                open={true} \n            >\n                <CircularProgress \n                    color='primary'\n                />\n            </Backdrop>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        mainUser: state.userReducer.user,\n        primary: state.userThemeReducer.primary,\n    };\n}\n\nexport default connect(mapStateToProps)(CommunityChat);"]},"metadata":{},"sourceType":"module"}