{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simeonikudabo/Downloads/geocities/src/components/MessagesComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(() => ({\n  topGrid: {\n    marginTop: 100\n  },\n  topMarg: {\n    marginTop: 20,\n    textAlign: 'center'\n  }\n}));\n\nfunction MessagesComponent(props) {\n  _s();\n\n  const classes = useStyles(); //Custom classes.\n\n  const history = useHistory(); //Manipulate window location\n\n  const [threads, setThreads] = useState([]); //Variable and setter for the list of threads. \n\n  useEffect(() => {\n    if (props.user === null) {\n      swal('Uh Oh!', 'You must be logged in to access messages!', 'error');\n      history.push('/');\n    }\n  });\n\n  if (props.user !== null) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.topGrid,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h4\",\n          align: \"center\",\n          children: threads.length < 1 ? 'No messages' : 'Messages'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.topMarg,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Compose +\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: true,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(MessagesComponent, \"PXwdgk0Zjd1hpmCRmkJZmx+6/h8=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = MessagesComponent;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user,\n    primary: state.userThemeReducer.primary\n  };\n}\n\nexport default connect(mapStateToProps)(MessagesComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesComponent\");","map":{"version":3,"sources":["/Users/simeonikudabo/Downloads/geocities/src/components/MessagesComponent.js"],"names":["React","useState","useEffect","Typography","Grid","connect","makeStyles","Backdrop","CircularProgress","axios","swal","useHistory","Button","useStyles","topGrid","marginTop","topMarg","textAlign","MessagesComponent","props","classes","history","threads","setThreads","user","push","length","mapStateToProps","state","userReducer","primary","userThemeReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(() => ({\n    topGrid: {\n        marginTop: 100,\n    },\n    topMarg: {\n        marginTop: 20,\n        textAlign: 'center',\n    },\n}));\n\nfunction MessagesComponent(props) {\n    const classes = useStyles(); //Custom classes.\n    const history = useHistory(); //Manipulate window location\n    const [threads, setThreads] = useState([]);//Variable and setter for the list of threads. \n\n    useEffect(() => {\n        if(props.user === null) {\n            swal(\n                'Uh Oh!',\n                'You must be logged in to access messages!',\n                'error',\n            );\n\n            history.push('/');\n        }\n    });\n\n    if(props.user !== null) {\n        return(\n            <Grid \n                container   \n                className={classes.topGrid} \n            >\n                <Grid \n                    xs={12} \n                    item \n                >\n                    <Typography \n                        variant='h4'\n                        component='h4'\n                        align='center' \n                    >\n                        {threads.length < 1 ? 'No messages' : 'Messages'}\n                    </Typography>\n                </Grid>\n                <Grid \n                    item\n                    xs={12} \n                    className={classes.topMarg}\n                >\n                    <Button \n                        color='primary' \n                        variant='contained' \n                    >\n                        Compose +\n                    </Button>\n                </Grid>\n            </Grid>\n        );\n    }\n    else {\n        return(\n            <Backdrop \n                open={true}\n            >\n                <CircularProgress \n                    color='primary' \n                />\n            </Backdrop>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.userReducer.user,\n        primary: state.userThemeReducer.primary,\n    };\n}\n\nexport default connect(mapStateToProps)(MessagesComponent);"]},"metadata":{},"sourceType":"module"}