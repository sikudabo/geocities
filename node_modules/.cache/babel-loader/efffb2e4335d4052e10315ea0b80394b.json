{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"c:\\\\Users\\\\bobma\\\\Downloads\\\\excite-app\\\\src\\\\components\\\\UserPostsCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Icon from '@mdi/react';\nimport { mdiThumbUp, mdiThumbUpOutline, mdiComment, mdiCommentOutline, mdiChevronDown, mdiChevronUp, mdiDelete, mdiSend } from '@mdi/js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport * as _ from 'underscore';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Plyr from 'react-plyr';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 600,\n    margin: 'auto',\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.background.paper\n  },\n  media: {\n    height: 0,\n    padding: '56.25%'\n  },\n  image: {\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}));\n\nfunction UserPostsCard(props) {\n  _s();\n\n  const classes = useStyles(); //Custom styles for the component\n\n  const formRef = useRef(null); //Ref for the validator form\n\n  const [expanded, setExpanded] = useState(false); //This expands the validator form\n\n  const [comment, setComment] = useState('');\n  const [commentSending, setCommentSending] = useState(false);\n  const [likeSending, setLikeSending] = useState(false);\n  const [commentDeleting, setCommentDeleting] = useState(false); //This variable and setter will handle disabling the delete button while a comment is being deleted.\n\n  const [commentLiking, setCommentLiking] = useState(false); //This variable and setter will handle disabling the comment like Button when the comment is being liked or unliked.\n\n  const [deletingPost, setDeletingPost] = useState(false); //Variable and setter that will disable the delete button on a post while the server is deleting the post.\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule('notEmpty', v => {\n      if (v.length < 1) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }, []);\n\n  async function sendComment() {\n    //This function will handle sending a new comment to the server \n    setCommentSending(true);\n    let formValid = await formRef.current.isFormValid();\n\n    if (!formValid) {\n      swal('Uh Oh!', 'Make sure you filled out the comment form correctly!', 'error');\n      setCommentSending(false);\n    } else {\n      let date = new Date();\n      let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n      let day = date.getDate();\n      let year = date.getFullYear();\n      let month = date.getMonth();\n      let dateString = `${months[month]} ${day}, ${year}`;\n      let data = {\n        uniqueCommentId: Date.now() + 'comment' + props.mainUser.uniqueUserId + props.post.uniqueUserId,\n        uniqueUserId: props.mainUser.uniqueUserId,\n        username: props.mainUser.username,\n        dateString: dateString,\n        text: comment,\n        uniquePosterId: props.post.uniqueUserId,\n        uniquePostId: props.post.uniquePostId\n      };\n      return axios({\n        method: 'POST',\n        url: 'http://192.168.0.9:3001/api/add/comment',\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.data.posts) {\n          props.dispatch({\n            type: 'user/updateUser',\n            payload: response.data.user\n          });\n          props.dispatch({\n            type: 'userPosts/updatePosts',\n            payload: response.data.posts\n          });\n          setCommentSending(false);\n          setComment('');\n          swal('Great!', 'Comment successfully sent!', 'success');\n        } else {\n          swal('Uh Oh!', 'There was an error sending that comment! Please try again.', 'error');\n          setCommentSending(false);\n        }\n      }).catch(err => {\n        console.log(err.message);\n        swal('Uh Oh!', 'There was an error sending that comment! Please try again.', 'error');\n        setCommentSending(false);\n      });\n    }\n  }\n\n  function handleLike() {\n    //This function will handle what happens when a user likes a post. \n    setLikeSending(true);\n    let likeType;\n\n    if (props.post.likes.includes(props.mainUser.uniqueUserId)) {\n      likeType = 'unlike';\n    } else {\n      likeType = 'like';\n    }\n\n    let data = JSON.stringify({\n      uniquePostId: props.post.uniquePostId,\n      uniquePosterId: props.post.uniqueUserId,\n      uniqueLikerId: props.mainUser.uniqueUserId,\n      likeType: likeType,\n      username: props.mainUser.username\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/handle/post/like',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data.posts) {\n        props.dispatch({\n          type: 'userPosts/updatePosts',\n          payload: response.data.posts\n        });\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n\n        if (response.data.likeType === 'like') {\n          swal('Great!', 'Post was successfully liked!', 'success');\n          setLikeSending(false);\n        } else {\n          swal('Great!', 'Post was successfully unliked!', 'success');\n          setLikeSending(false);\n        }\n      } else {\n        swal('Uh Oh!', 'There was an error liking that post!', 'error');\n        setLikeSending(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error liking that post!', 'error');\n      setLikeSending(false);\n    });\n  }\n\n  function timeDifference(date2, dateString) {\n    //This function will return whether or not we display something like \"2 hrs ago\" \"20 min ago\" or the date string for a post\n    let date1 = Date.now();\n    let difference = date1 - date2;\n    let daysDifference = Math.floor(difference / 1000 / 60 / 60 / 24);\n    let hoursDifference = Math.floor(difference / 1000 / 60 / 60);\n    let minutesDifference = Math.floor(difference / 1000 / 60);\n    let secondsDifference = Math.floor(difference / 1000);\n\n    if (daysDifference > 0) {\n      return dateString;\n    } else if (hoursDifference > 0 && hoursDifference < 23) {\n      return `${hoursDifference} hr ago`;\n    } else if (minutesDifference > 0 && minutesDifference < 60) {\n      return `${minutesDifference} min ago`;\n    } else if (minutesDifference === 0) {\n      return `${secondsDifference} secs ago`;\n    } else {\n      return dateString;\n    }\n  }\n\n  function deleteComment(uniqueCommentId) {\n    //This function will be responsible for deleting a comment from a post. \n    setCommentDeleting(true);\n    let data = JSON.stringify({\n      uniqueUserId: props.mainUser.uniqueUserId,\n      uniquePostId: props.post.uniquePostId,\n      commentId: uniqueCommentId,\n      uniquePosterId: props.post.uniqueUserId\n    });\n    return axios({\n      method: 'POST',\n      url: `http://192.168.0.9:3001/api/delete/comment`,\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data.posts) {\n        swal('Great!', 'Comment successfully deleted!', 'success');\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        props.dispatch({\n          type: 'userPosts/updatePosts',\n          payload: response.data.posts\n        });\n        setCommentDeleting(false);\n      } else {\n        swal('Uh Oh!', 'There was an error deleting that comment!', 'error');\n        setCommentDeleting(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error deleting that comment!', 'error');\n      setCommentDeleting(false);\n    });\n  }\n\n  function handleCommentLike(uniqueCommentId, uniqueCommenterId, isLiked) {\n    setCommentLiking(true);\n    let likeType;\n\n    if (isLiked === true) {\n      likeType = 'unlike';\n    } else {\n      likeType = 'like';\n    }\n\n    let data = JSON.stringify({\n      uniquePostId: props.post.uniquePostId,\n      commentId: uniqueCommentId,\n      uniqueLikerId: props.mainUser.uniqueUserId,\n      uniquePostPosterId: props.post.uniqueUserId,\n      uniqueCommenterId: uniqueCommenterId,\n      likeType: likeType,\n      username: props.mainUser.username\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/handle/comment/like',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data.posts) {\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        props.dispatch({\n          type: 'userPosts/updatePosts',\n          payload: response.data.posts\n        });\n\n        if (response.data.likeType === 'unlike') {\n          swal('Great!', 'You successfully unliked that comment!', 'success');\n          setCommentLiking(false);\n        } else {\n          swal('Great!', 'You successfully liked that comment!', 'success');\n          setCommentLiking(false);\n        }\n      } else {\n        swal('Uh Oh!', 'There was an error liking that comment!', 'error');\n        setCommentLiking(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh', 'There was an error liking that comment!', 'error');\n      setCommentLiking(false);\n    });\n  }\n\n  function deletePost() {\n    //This function will handle deleting a post from the database. \n    setDeletingPost(true);\n    let data = JSON.stringify({\n      uniqueUserId: props.mainUser.uniqueUserId,\n      uniquePostId: props.post.uniquePostId\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/delete/post',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data.user) {\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        props.dispatch({\n          type: 'userPosts/updatePosts',\n          payload: response.data.posts\n        });\n        swal('Great!', 'Post succcessfully deleted', 'success');\n        setDeletingPost(false);\n      } else {\n        swal('Uh Oh!', 'There was an error deleting that post!', 'error');\n        setDeletingPost(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error deleting that post!', 'error');\n      setDeletingPost(false);\n    });\n  }\n\n  function deleteMediaPost() {\n    //This function will handle deleting a post from the database. \n    setDeletingPost(true);\n    let data = JSON.stringify({\n      uniqueUserId: props.mainUser.uniqueUserId,\n      uniquePostId: props.post.uniquePostId,\n      filename: props.post.src\n    });\n    return axios({\n      method: 'POST',\n      url: 'http://192.168.0.9:3001/api/delete/media/post',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.data.user) {\n        props.dispatch({\n          type: 'user/updateUser',\n          payload: response.data.user\n        });\n        props.dispatch({\n          type: 'userPosts/updatePosts',\n          payload: response.data.posts\n        });\n        swal('Great!', 'Post succcessfully deleted', 'success');\n        setDeletingPost(false);\n      } else {\n        swal('Uh Oh!', 'There was an error deleting that post!', 'error');\n        setDeletingPost(false);\n      }\n    }).catch(err => {\n      console.log(err.message);\n      swal('Uh Oh!', 'There was an error deleting that post!', 'error');\n      setDeletingPost(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    id: `${props.post.uniquePostId}`,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        children: props.post.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 21\n      }, this),\n      subheader: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        component: \"span\",\n        color: \"textSecondary\",\n        children: timeDifference(props.post.utcTime, props.post.dateString)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 21\n      }, this),\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: `http://192.168.0.9:3001/api/get/avatar/by/id/${props.post.uniqueUserId}`,\n        alt: `${props.post.username}`,\n        title: `${props.post.username}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.post.type === 'photo' && /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        src: `http://192.168.0.9:3001/api/get-photo/${props.post.src}`,\n        title: `Post by ${props.post.username}`,\n        alt: \"GeoCities photo post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.post.type === 'video' && /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Plyr, {\n          type: \"video\",\n          sources: [{\n            src: `http://192.168.0.9:3001/api/get-video/${props.post.src}`\n          }],\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.post.type === 'text' && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          children: props.post.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: (props.post.type === 'photo' || props.post.type === 'video') && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          children: props.post.caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        disabled: likeSending,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: props.post.likes.includes(props.mainUser.uniqueUserId) ? mdiThumbUp : mdiThumbUpOutline,\n          size: 1,\n          title: \"Post like button\",\n          \"aria-label\": \"Post like button\",\n          onClick: handleLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.post.likes.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: props.post.likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: () => setExpanded(!expanded),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: _.find(props.post.comments, comment => comment.uniqueUserId === props.mainUser.uniqueUserId) ? mdiComment : mdiCommentOutline,\n          size: 1,\n          title: \"Comment button\",\n          \"aria-label\": \"Comment button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.post.comments.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            component: \"p\",\n            children: props.post.comments.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [props.post.uniqueUserId === props.mainUser.uniqueUserId && (props.post.type === 'text' || props.post.type === 'link') && /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          onClick: deletePost,\n          disabled: deletingPost,\n          children: deletingPost ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n            path: mdiDelete,\n            size: 1,\n            title: \"Post delete button\",\n            \"aria-label\": \"Post delete button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 84\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 25\n        }, this), props.post.uniqueUserId === props.mainUser.uniqueUserId && (props.post.type === 'photo' || props.post.type === 'video') && /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          onClick: deleteMediaPost,\n          disabled: deletingPost,\n          children: deletingPost ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n            path: mdiDelete,\n            size: 1,\n            title: \"Post delete button\",\n            \"aria-label\": \"Post delete button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 84\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          marginLeft: 'auto'\n        },\n        onClick: () => setExpanded(!expanded),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          path: expanded ? mdiChevronUp : mdiChevronDown,\n          size: 1,\n          title: expanded ? 'Expand less' : 'Expand more',\n          \"aria-label\": expanded ? 'Expand less' : 'Expand more'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: expanded,\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(ValidatorForm, {\n          ref: formRef,\n          onSubmit: e => e.preventDefault(),\n          children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Comment\",\n            placeholder: \"Add a comment...\",\n            variant: \"outlined\",\n            color: \"primary\",\n            helperText: \"Add a comment\",\n            value: comment,\n            onChange: e => setComment(e.target.value),\n            validator: ['notEmpty'],\n            errorMessages: ['You must enter some text to send a comment!'],\n            InputLabelProps: {\n              shrink: true\n            },\n            rows: 4,\n            multiline: true,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n              path: mdiSend,\n              size: 1,\n              title: \"Send icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 33\n            }, this),\n            \"aria-label\": \"Send comment button\",\n            disabled: commentSending,\n            onClick: sendComment,\n            children: commentSending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 47\n            }, this) : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          children: props.post.comments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                id: `${comment.uniqueCommentId}`,\n                alignItems: \"flex-start\",\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `http://192.168.0.9:3001/api/get/avatar/by/id/${comment.uniqueUserId}`,\n                    title: `${comment.username}`,\n                    alt: `${comment.username}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 656,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"h6\",\n                      children: comment.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 665,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      component: \"span\",\n                      color: \"textSecondary\",\n                      children: timeDifference(comment.utcTime, comment.dateString)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 671,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 664,\n                    columnNumber: 53\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    component: \"p\",\n                    children: comment.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 681,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: (props.post.uniqueUserId === comment.uniqueUserId || comment.uniqueCommentId === props.mainUser.uniqueUserId) && /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"primary\",\n                    onClick: () => deleteComment(comment.uniqueCommentId),\n                    disabled: commentDeleting,\n                    children: commentDeleting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 696,\n                      columnNumber: 76\n                    }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n                      path: mdiDelete,\n                      size: 1,\n                      title: \"Delete comment button\",\n                      \"aria-label\": \"Delete comment button\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 696,\n                      columnNumber: 115\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: props.mainUser !== null && /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"primary\",\n                    disabled: commentLiking,\n                    onClick: () => handleCommentLike(comment.uniqueCommentId, comment.uniqueUserId, comment.likes.includes(props.mainUser.uniqueUserId)),\n                    children: [!comment.likes.includes(props.mainUser.uniqueUserId) ? /*#__PURE__*/_jsxDEV(Icon, {\n                      path: mdiThumbUpOutline,\n                      size: 1,\n                      title: \"Comment like button\",\n                      \"aria-label\": \"Comment like button\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 113\n                    }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n                      path: mdiThumbUp,\n                      size: 1,\n                      title: \"Comment like button\",\n                      \"aria-label\": \"Comment like button\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 220\n                    }, this), comment.likes.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      component: \"p\",\n                      children: comment.likes.length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 709,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 41\n              }, this), index < props.post.comments.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserPostsCard, \"FSHtUgCg3sKo/xWCjgBgcJX5t3c=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserPostsCard;\n\nfunction mapStateToProps(state) {\n  return {\n    mainUser: state.userReducer.user,\n    posts: state.userPostsReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(UserPostsCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPostsCard\");","map":{"version":3,"sources":["c:/Users/bobma/Downloads/excite-app/src/components/UserPostsCard.js"],"names":["React","useState","useRef","useEffect","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","Collapse","ValidatorForm","TextValidator","Button","Divider","IconButton","CircularProgress","Icon","mdiThumbUp","mdiThumbUpOutline","mdiComment","mdiCommentOutline","mdiChevronDown","mdiChevronUp","mdiDelete","mdiSend","makeStyles","axios","_","connect","swal","List","ListItem","ListItemAvatar","ListItemText","Plyr","useStyles","theme","card","maxWidth","margin","padding","spacing","backgroundColor","palette","background","paper","media","height","image","maxHeight","UserPostsCard","props","classes","formRef","expanded","setExpanded","comment","setComment","commentSending","setCommentSending","likeSending","setLikeSending","commentDeleting","setCommentDeleting","commentLiking","setCommentLiking","deletingPost","setDeletingPost","addValidationRule","v","length","sendComment","formValid","current","isFormValid","date","Date","months","day","getDate","year","getFullYear","month","getMonth","dateString","data","uniqueCommentId","now","mainUser","uniqueUserId","post","username","text","uniquePosterId","uniquePostId","method","url","headers","then","response","posts","dispatch","type","payload","user","catch","err","console","log","message","handleLike","likeType","likes","includes","JSON","stringify","uniqueLikerId","timeDifference","date2","date1","difference","daysDifference","Math","floor","hoursDifference","minutesDifference","secondsDifference","deleteComment","commentId","handleCommentLike","uniqueCommenterId","isLiked","uniquePostPosterId","deletePost","deleteMediaPost","filename","src","utcTime","caption","find","comments","marginLeft","e","preventDefault","target","value","shrink","marginTop","map","index","mapStateToProps","state","userReducer","userPostsReducer"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Icon from '@mdi/react';\r\nimport { mdiThumbUp, mdiThumbUpOutline, mdiComment, mdiCommentOutline, mdiChevronDown, mdiChevronUp, mdiDelete, mdiSend } from '@mdi/js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport * as _ from 'underscore';\r\nimport { connect } from 'react-redux';\r\nimport swal from 'sweetalert';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Plyr from 'react-plyr';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: 600,\r\n        margin: 'auto',\r\n        padding: theme.spacing(2),\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        padding: '56.25%',\r\n    },\r\n    image: {\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n}));\r\n\r\nfunction UserPostsCard(props) {\r\n    const classes = useStyles(); //Custom styles for the component\r\n    const formRef = useRef(null); //Ref for the validator form\r\n    const [expanded, setExpanded] = useState(false); //This expands the validator form\r\n    const [comment, setComment] = useState('');\r\n    const [commentSending, setCommentSending] = useState(false);\r\n    const [likeSending, setLikeSending] = useState(false);\r\n    const [commentDeleting, setCommentDeleting] = useState(false); //This variable and setter will handle disabling the delete button while a comment is being deleted.\r\n    const [commentLiking, setCommentLiking] = useState(false); //This variable and setter will handle disabling the comment like Button when the comment is being liked or unliked.\r\n    const [deletingPost, setDeletingPost] = useState(false); //Variable and setter that will disable the delete button on a post while the server is deleting the post.\r\n    \r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('notEmpty', v => {\r\n            if(v.length < 1) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    async function sendComment() {\r\n        //This function will handle sending a new comment to the server \r\n        setCommentSending(true);\r\n        let formValid = await formRef.current.isFormValid();\r\n        if(!formValid) {\r\n            swal(\r\n                'Uh Oh!',\r\n                'Make sure you filled out the comment form correctly!',\r\n                'error',\r\n            );\r\n            setCommentSending(false);\r\n        }\r\n        else {\r\n            let date = new Date();\r\n            let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n            let day = date.getDate();\r\n            let year = date.getFullYear();\r\n            let month = date.getMonth();\r\n            let dateString = `${months[month]} ${day}, ${year}`;\r\n\r\n            let data = {\r\n                uniqueCommentId: Date.now() + 'comment' + props.mainUser.uniqueUserId + props.post.uniqueUserId,\r\n                uniqueUserId: props.mainUser.uniqueUserId,\r\n                username: props.mainUser.username,\r\n                dateString: dateString,\r\n                text: comment,\r\n                uniquePosterId: props.post.uniqueUserId,\r\n                uniquePostId: props.post.uniquePostId,\r\n            }\r\n\r\n            return axios({\r\n                method: 'POST',\r\n                url: 'http://192.168.0.9:3001/api/add/comment',\r\n                data: data,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }).then(response => {\r\n                if(response.data.posts) {\r\n                    props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                    props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                    setCommentSending(false);\r\n                    setComment('');\r\n                    swal(\r\n                        'Great!',\r\n                        'Comment successfully sent!',\r\n                        'success',\r\n                    );\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Uh Oh!',\r\n                        'There was an error sending that comment! Please try again.',\r\n                        'error',\r\n                    );\r\n                    setCommentSending(false);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error sending that comment! Please try again.',\r\n                    'error',\r\n                );\r\n                setCommentSending(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleLike() {\r\n        //This function will handle what happens when a user likes a post. \r\n        setLikeSending(true);\r\n        let likeType;\r\n        if(props.post.likes.includes(props.mainUser.uniqueUserId)) {\r\n            likeType = 'unlike'\r\n        }\r\n        else {\r\n            likeType = 'like';\r\n        }\r\n\r\n        let data = JSON.stringify({\r\n            uniquePostId: props.post.uniquePostId,\r\n            uniquePosterId: props.post.uniqueUserId,\r\n            uniqueLikerId: props.mainUser.uniqueUserId,\r\n            likeType: likeType,\r\n            username: props.mainUser.username,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/handle/post/like',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            if(response.data.posts) {\r\n                props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                if(response.data.likeType === 'like') {\r\n                    swal(\r\n                        'Great!',\r\n                        'Post was successfully liked!',\r\n                        'success',\r\n                    );\r\n                    setLikeSending(false);\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Great!',\r\n                        'Post was successfully unliked!',\r\n                        'success',\r\n                    );\r\n                    setLikeSending(false);\r\n                }\r\n            }\r\n            else {\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error liking that post!',\r\n                    'error',\r\n                );\r\n                setLikeSending(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error liking that post!',\r\n                'error',\r\n            );\r\n            setLikeSending(false);\r\n        });\r\n    }\r\n\r\n    function timeDifference(date2, dateString) {\r\n        //This function will return whether or not we display something like \"2 hrs ago\" \"20 min ago\" or the date string for a post\r\n        let date1 = Date.now();\r\n        let difference = date1 - date2;\r\n        let daysDifference = Math.floor(difference/1000/60/60/24);\r\n        let hoursDifference = Math.floor(difference/1000/60/60);\r\n        let minutesDifference = Math.floor(difference/1000/60);\r\n        let secondsDifference = Math.floor(difference/1000);\r\n        if(daysDifference > 0) {\r\n            return dateString;\r\n        }\r\n        else if(hoursDifference > 0 && hoursDifference < 23) {\r\n            return `${hoursDifference} hr ago`;\r\n        }\r\n        else if(minutesDifference > 0 && minutesDifference < 60) {\r\n            return `${minutesDifference} min ago`;\r\n        }\r\n        else if(minutesDifference === 0) {\r\n            return `${secondsDifference} secs ago`\r\n        }\r\n        else {\r\n            return dateString;\r\n        }\r\n    }\r\n\r\n    function deleteComment(uniqueCommentId) {\r\n        //This function will be responsible for deleting a comment from a post. \r\n        setCommentDeleting(true);\r\n        let data = JSON.stringify({\r\n            uniqueUserId: props.mainUser.uniqueUserId,\r\n            uniquePostId: props.post.uniquePostId,\r\n            commentId: uniqueCommentId,\r\n            uniquePosterId: props.post.uniqueUserId,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: `http://192.168.0.9:3001/api/delete/comment`,\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }).then(response => {\r\n            if(response.data.posts) {\r\n                swal(\r\n                    'Great!',\r\n                    'Comment successfully deleted!',\r\n                    'success',\r\n                );\r\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                setCommentDeleting(false);\r\n            }\r\n            else {\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error deleting that comment!',\r\n                    'error',\r\n                );\r\n                setCommentDeleting(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error deleting that comment!',\r\n                'error',\r\n            );\r\n            setCommentDeleting(false);\r\n        });\r\n\r\n    }\r\n\r\n    function handleCommentLike(uniqueCommentId, uniqueCommenterId, isLiked) {\r\n        setCommentLiking(true); \r\n        let likeType;\r\n        if(isLiked === true) {\r\n            likeType = 'unlike';\r\n        }\r\n        else {\r\n            likeType = 'like';\r\n        }\r\n\r\n        let data = JSON.stringify({\r\n            uniquePostId: props.post.uniquePostId,\r\n            commentId: uniqueCommentId,\r\n            uniqueLikerId: props.mainUser.uniqueUserId,\r\n            uniquePostPosterId: props.post.uniqueUserId,\r\n            uniqueCommenterId: uniqueCommenterId,\r\n            likeType: likeType,\r\n            username: props.mainUser.username,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/handle/comment/like',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            if(response.data.posts) {\r\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                if(response.data.likeType === 'unlike') {\r\n                    swal(\r\n                        'Great!',\r\n                        'You successfully unliked that comment!',\r\n                        'success',\r\n                    );\r\n                    setCommentLiking(false);\r\n                }\r\n                else {\r\n                    swal(\r\n                        'Great!',\r\n                        'You successfully liked that comment!',\r\n                        'success',\r\n                    );\r\n                    setCommentLiking(false);\r\n                }\r\n            }\r\n            else {\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error liking that comment!',\r\n                    'error',\r\n                );\r\n                setCommentLiking(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n            swal(\r\n                'Uh Oh',\r\n                'There was an error liking that comment!',\r\n                'error',\r\n            );\r\n            setCommentLiking(false);\r\n        });\r\n    }\r\n\r\n    function deletePost() {\r\n        //This function will handle deleting a post from the database. \r\n        setDeletingPost(true);\r\n\r\n        let data = JSON.stringify({\r\n            uniqueUserId: props.mainUser.uniqueUserId,\r\n            uniquePostId: props.post.uniquePostId,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/delete/post',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            if(response.data.user) {\r\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                swal(\r\n                    'Great!',\r\n                    'Post succcessfully deleted',\r\n                    'success',\r\n                );\r\n                setDeletingPost(false);\r\n            }\r\n            else {\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error deleting that post!',\r\n                    'error',\r\n                );\r\n                setDeletingPost(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error deleting that post!',\r\n                'error',\r\n            );\r\n\r\n            setDeletingPost(false);\r\n        });\r\n    }\r\n\r\n    function deleteMediaPost() {\r\n        //This function will handle deleting a post from the database. \r\n        setDeletingPost(true);\r\n\r\n        let data = JSON.stringify({\r\n            uniqueUserId: props.mainUser.uniqueUserId,\r\n            uniquePostId: props.post.uniquePostId,\r\n            filename: props.post.src,\r\n        });\r\n\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'http://192.168.0.9:3001/api/delete/media/post',\r\n            data: data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then(response => {\r\n            if(response.data.user) {\r\n                props.dispatch({type: 'user/updateUser', payload: response.data.user});\r\n                props.dispatch({type: 'userPosts/updatePosts', payload: response.data.posts});\r\n                swal(\r\n                    'Great!',\r\n                    'Post succcessfully deleted',\r\n                    'success',\r\n                );\r\n                setDeletingPost(false);\r\n            }\r\n            else {\r\n                swal(\r\n                    'Uh Oh!',\r\n                    'There was an error deleting that post!',\r\n                    'error',\r\n                );\r\n                setDeletingPost(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n\r\n            swal(\r\n                'Uh Oh!',\r\n                'There was an error deleting that post!',\r\n                'error',\r\n            );\r\n\r\n            setDeletingPost(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card \r\n            className={classes.card} \r\n            id={`${props.post.uniquePostId}`}\r\n        >\r\n            <CardHeader \r\n                title={\r\n                    <Typography \r\n                        variant='h6' \r\n                        component='h6' \r\n                    >\r\n                        {props.post.username}\r\n                    </Typography>\r\n                }\r\n                subheader={\r\n                    <Typography \r\n                        variant='subtitle1' \r\n                        component='span' \r\n                        color='textSecondary' \r\n                    >\r\n                        {timeDifference(props.post.utcTime, props.post.dateString)}\r\n                    </Typography>\r\n                }\r\n                avatar={\r\n                    <Avatar \r\n                        src={`http://192.168.0.9:3001/api/get/avatar/by/id/${props.post.uniqueUserId}`}\r\n                        alt={`${props.post.username}`}\r\n                        title={`${props.post.username}`} \r\n                    />\r\n                }\r\n            />\r\n            <div>\r\n                {props.post.type === 'photo' &&\r\n                    <CardMedia \r\n                        component='img'\r\n                        src={`http://192.168.0.9:3001/api/get-photo/${props.post.src}`}\r\n                        title={`Post by ${props.post.username}`}\r\n                        alt='GeoCities photo post'\r\n                    />\r\n                }\r\n            </div>\r\n            <div \r\n            >\r\n                {props.post.type === 'video' &&\r\n                    <CardContent>\r\n                        <Plyr \r\n                            type='video'\r\n                            sources={[\r\n                                {\r\n                                    src: `http://192.168.0.9:3001/api/get-video/${props.post.src}`,\r\n                                }\r\n                            ]}\r\n                            playsInline={true}\r\n                        />\r\n                    </CardContent>\r\n                }\r\n            </div>\r\n            <CardContent>\r\n                <div>\r\n                    {props.post.type === 'text' &&\r\n                        <Typography \r\n                            variant='body2' \r\n                            component='p' \r\n                        >\r\n                            {props.post.text}\r\n                        </Typography>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    {(props.post.type === 'photo' || props.post.type === 'video') && \r\n                        <Typography \r\n                            variant='body2' \r\n                            component='p' \r\n                        >\r\n                            {props.post.caption}\r\n                        </Typography>\r\n                    }\r\n                </div>\r\n            </CardContent>\r\n            <CardActions>\r\n                <IconButton \r\n                    color='primary'\r\n                    disabled={likeSending}\r\n                >\r\n                    <Icon  \r\n                        path={props.post.likes.includes(props.mainUser.uniqueUserId) ? mdiThumbUp : mdiThumbUpOutline}\r\n                        size={1} \r\n                        title='Post like button'\r\n                        aria-label='Post like button' \r\n                        onClick={handleLike}\r\n                    />\r\n                    <div>\r\n                        {props.post.likes.length > 0 &&\r\n                            <Typography \r\n                                variant='body1' \r\n                                component='p' \r\n                            >\r\n                                {props.post.likes.length}\r\n                            </Typography>\r\n                        }\r\n                    </div>\r\n                </IconButton>\r\n                <IconButton \r\n                    color='primary'\r\n                    onClick={() => setExpanded(!expanded)}\r\n                >\r\n                    <Icon \r\n                        path={_.find(props.post.comments, comment => comment.uniqueUserId === props.mainUser.uniqueUserId) ? mdiComment : mdiCommentOutline} \r\n                        size={1}\r\n                        title='Comment button' \r\n                        aria-label='Comment button' \r\n                    />\r\n                    <div>\r\n                        {props.post.comments.length > 0 &&\r\n                            <Typography \r\n                                variant='body1' \r\n                                component='p' \r\n                            >\r\n                                {props.post.comments.length}\r\n                            </Typography>\r\n                        }\r\n                    </div>\r\n                </IconButton>\r\n                <div>\r\n                    {props.post.uniqueUserId === props.mainUser.uniqueUserId && (props.post.type === 'text' || props.post.type === 'link') &&\r\n                        <IconButton \r\n                            color='primary' \r\n                            onClick={deletePost}\r\n                            disabled={deletingPost}\r\n                        >\r\n                            {deletingPost ? <CircularProgress color='primary' /> : <Icon path={mdiDelete} size={1} title='Post delete button' aria-label='Post delete button' />}\r\n                        </IconButton>\r\n                    }\r\n                    {props.post.uniqueUserId === props.mainUser.uniqueUserId && (props.post.type === 'photo' || props.post.type === 'video') &&\r\n                        <IconButton \r\n                        color='primary' \r\n                        onClick={deleteMediaPost}\r\n                        disabled={deletingPost}\r\n                        >\r\n                            {deletingPost ? <CircularProgress color='primary' /> : <Icon path={mdiDelete} size={1} title='Post delete button' aria-label='Post delete button' />}\r\n                        </IconButton>\r\n                    }\r\n                </div>\r\n                <IconButton \r\n                    style={{\r\n                        marginLeft: 'auto' \r\n                    }}\r\n                    onClick={() => setExpanded(!expanded)}\r\n                >\r\n                    <Icon \r\n                        path={expanded ? mdiChevronUp : mdiChevronDown} \r\n                        size={1}\r\n                        title={expanded ? 'Expand less' : 'Expand more'} \r\n                        aria-label={expanded ? 'Expand less' : 'Expand more'} \r\n                    />\r\n                </IconButton>\r\n            </CardActions>\r\n            <Collapse \r\n                in={expanded} \r\n            >\r\n                <Divider />\r\n                <CardContent>\r\n                    <ValidatorForm \r\n                        ref={formRef} \r\n                        onSubmit={e => e.preventDefault()} \r\n                    >\r\n                        <TextValidator \r\n                            label='Comment' \r\n                            placeholder='Add a comment...' \r\n                            variant='outlined' \r\n                            color='primary' \r\n                            helperText='Add a comment' \r\n                            value={comment} \r\n                            onChange={e => setComment(e.target.value)} \r\n                            validator={['notEmpty']}\r\n                            errorMessages={['You must enter some text to send a comment!']}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            rows={4}\r\n                            multiline \r\n                            fullWidth \r\n                        />\r\n                        <Button \r\n                            color='primary' \r\n                            variant='outlined' \r\n                            startIcon={\r\n                                <Icon \r\n                                    path={mdiSend} \r\n                                    size={1} \r\n                                    title='Send icon' \r\n                                />\r\n                            }\r\n                            aria-label='Send comment button' \r\n                            disabled={commentSending}\r\n                            onClick={sendComment}\r\n                        >\r\n                            {commentSending ? <CircularProgress color='primary' /> : 'Send'}\r\n                        </Button>\r\n                    </ValidatorForm>\r\n                    <Divider />\r\n                    <div \r\n                        style={{\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        {props.post.comments.length > 0 &&\r\n                            <div>\r\n                                {props.post.comments.map((comment, index) => (\r\n                                    <div\r\n                                        key={index} \r\n                                    >\r\n                                        <ListItem \r\n                                            id={`${comment.uniqueCommentId}`}\r\n                                            alignItems='flex-start'\r\n                                        >\r\n                                            <ListItemAvatar>\r\n                                                <Avatar \r\n                                                    src={`http://192.168.0.9:3001/api/get/avatar/by/id/${comment.uniqueUserId}`}\r\n                                                    title={`${comment.username}`}\r\n                                                    alt={`${comment.username}`} \r\n                                                />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText \r\n                                                primary={\r\n                                                    <div>\r\n                                                        <Typography \r\n                                                            variant='h6' \r\n                                                            component='h6' \r\n                                                        >\r\n                                                            {comment.username}\r\n                                                        </Typography>\r\n                                                        <Typography \r\n                                                            variant='subtitle1' \r\n                                                            component='span' \r\n                                                            color='textSecondary'\r\n                                                        >\r\n                                                            {timeDifference(comment.utcTime, comment.dateString)}\r\n                                                        </Typography>\r\n                                                    </div>\r\n                                                }\r\n                                                secondary={\r\n                                                    <Typography \r\n                                                        variant='body2' \r\n                                                        component='p' \r\n                                                    >\r\n                                                        {comment.text}\r\n                                                    </Typography>\r\n                                                }\r\n                                            />\r\n                                            <div>\r\n                                                {(props.post.uniqueUserId === comment.uniqueUserId || comment.uniqueCommentId === props.mainUser.uniqueUserId) &&\r\n                                                    <IconButton \r\n                                                        color='primary'\r\n                                                        onClick={() => deleteComment(comment.uniqueCommentId)}\r\n                                                        disabled={commentDeleting}\r\n                                                    >\r\n                                                        {commentDeleting ? <CircularProgress color='primary' /> : <Icon path={mdiDelete} size={1} title='Delete comment button' aria-label='Delete comment button' />}\r\n                                                    </IconButton>\r\n                                                }\r\n                                            </div>\r\n                                            <div>\r\n                                                {props.mainUser !== null &&\r\n                                                    <IconButton \r\n                                                        color='primary' \r\n                                                        disabled={commentLiking}\r\n                                                        onClick={() => handleCommentLike(comment.uniqueCommentId, comment.uniqueUserId, comment.likes.includes(props.mainUser.uniqueUserId))}\r\n                                                    >\r\n                                                        {!comment.likes.includes(props.mainUser.uniqueUserId) ? <Icon path={mdiThumbUpOutline} size={1}  title='Comment like button' aria-label='Comment like button' /> : <Icon path={mdiThumbUp} size={1} title='Comment like button' aria-label='Comment like button' />}\r\n                                                        {comment.likes.length > 0 &&\r\n                                                            <Typography \r\n                                                                variant='body1' \r\n                                                                component='p' \r\n                                                            >\r\n                                                                {comment.likes.length}\r\n                                                            </Typography>\r\n                                                        }\r\n                                                    </IconButton>\r\n                                                }\r\n                                            </div>\r\n                                        </ListItem>\r\n                                        {index < props.post.comments.length - 1 &&\r\n                                            <Divider />\r\n                                        }\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mainUser: state.userReducer.user,\r\n        posts: state.userPostsReducer.posts,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserPostsCard);"]},"metadata":{},"sourceType":"module"}